
m20_custom_firmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000cfa8  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000062c  0800d138  0800d138  0000e138  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d764  0800d764  0000f274  2**0
                  CONTENTS
  4 .ARM          00000008  0800d764  0800d764  0000e764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d76c  0800d76c  0000f274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d76c  0800d76c  0000e76c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800d770  0800d770  0000e770  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000274  20000000  0800d774  0000f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000af0  20000274  0800d9e8  0000f274  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000d64  0800d9e8  0000fd64  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000f274  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001931e  00000000  00000000  0000f2a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003736  00000000  00000000  000285c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000017f0  00000000  00000000  0002bcf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001295  00000000  00000000  0002d4e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026416  00000000  00000000  0002e77d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001b955  00000000  00000000  00054b93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e4afd  00000000  00000000  000704e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00154fe5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00007b9c  00000000  00000000  00155028  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000045  00000000  00000000  0015cbc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000274 	.word	0x20000274
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800d120 	.word	0x0800d120

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000278 	.word	0x20000278
 80001cc:	0800d120 	.word	0x0800d120

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000c9c:	f000 b9a0 	b.w	8000fe0 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f83c 	bl	8000d24 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_d2lz>:
 8000cb8:	b538      	push	{r3, r4, r5, lr}
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	f7ff ff0b 	bl	8000adc <__aeabi_dcmplt>
 8000cc6:	b928      	cbnz	r0, 8000cd4 <__aeabi_d2lz+0x1c>
 8000cc8:	4620      	mov	r0, r4
 8000cca:	4629      	mov	r1, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 b80a 	b.w	8000ce8 <__aeabi_d2ulz>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000cda:	f000 f805 	bl	8000ce8 <__aeabi_d2ulz>
 8000cde:	4240      	negs	r0, r0
 8000ce0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop

08000ce8 <__aeabi_d2ulz>:
 8000ce8:	b5d0      	push	{r4, r6, r7, lr}
 8000cea:	4b0c      	ldr	r3, [pc, #48]	@ (8000d1c <__aeabi_d2ulz+0x34>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	4606      	mov	r6, r0
 8000cf0:	460f      	mov	r7, r1
 8000cf2:	f7ff fc81 	bl	80005f8 <__aeabi_dmul>
 8000cf6:	f7ff ff57 	bl	8000ba8 <__aeabi_d2uiz>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	f7ff fc02 	bl	8000504 <__aeabi_ui2d>
 8000d00:	4b07      	ldr	r3, [pc, #28]	@ (8000d20 <__aeabi_d2ulz+0x38>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	f7ff fc78 	bl	80005f8 <__aeabi_dmul>
 8000d08:	4602      	mov	r2, r0
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	4639      	mov	r1, r7
 8000d10:	f7ff faba 	bl	8000288 <__aeabi_dsub>
 8000d14:	f7ff ff48 	bl	8000ba8 <__aeabi_d2uiz>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d1c:	3df00000 	.word	0x3df00000
 8000d20:	41f00000 	.word	0x41f00000

08000d24 <__udivmoddi4>:
 8000d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d28:	9d08      	ldr	r5, [sp, #32]
 8000d2a:	460c      	mov	r4, r1
 8000d2c:	2b00      	cmp	r3, #0
 8000d2e:	d14e      	bne.n	8000dce <__udivmoddi4+0xaa>
 8000d30:	4694      	mov	ip, r2
 8000d32:	458c      	cmp	ip, r1
 8000d34:	4686      	mov	lr, r0
 8000d36:	fab2 f282 	clz	r2, r2
 8000d3a:	d962      	bls.n	8000e02 <__udivmoddi4+0xde>
 8000d3c:	b14a      	cbz	r2, 8000d52 <__udivmoddi4+0x2e>
 8000d3e:	f1c2 0320 	rsb	r3, r2, #32
 8000d42:	4091      	lsls	r1, r2
 8000d44:	fa20 f303 	lsr.w	r3, r0, r3
 8000d48:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d4c:	4319      	orrs	r1, r3
 8000d4e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000d52:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d56:	fa1f f68c 	uxth.w	r6, ip
 8000d5a:	fbb1 f4f7 	udiv	r4, r1, r7
 8000d5e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d62:	fb07 1114 	mls	r1, r7, r4, r1
 8000d66:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d6a:	fb04 f106 	mul.w	r1, r4, r6
 8000d6e:	4299      	cmp	r1, r3
 8000d70:	d90a      	bls.n	8000d88 <__udivmoddi4+0x64>
 8000d72:	eb1c 0303 	adds.w	r3, ip, r3
 8000d76:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8000d7a:	f080 8112 	bcs.w	8000fa2 <__udivmoddi4+0x27e>
 8000d7e:	4299      	cmp	r1, r3
 8000d80:	f240 810f 	bls.w	8000fa2 <__udivmoddi4+0x27e>
 8000d84:	3c02      	subs	r4, #2
 8000d86:	4463      	add	r3, ip
 8000d88:	1a59      	subs	r1, r3, r1
 8000d8a:	fa1f f38e 	uxth.w	r3, lr
 8000d8e:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d92:	fb07 1110 	mls	r1, r7, r0, r1
 8000d96:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d9a:	fb00 f606 	mul.w	r6, r0, r6
 8000d9e:	429e      	cmp	r6, r3
 8000da0:	d90a      	bls.n	8000db8 <__udivmoddi4+0x94>
 8000da2:	eb1c 0303 	adds.w	r3, ip, r3
 8000da6:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8000daa:	f080 80fc 	bcs.w	8000fa6 <__udivmoddi4+0x282>
 8000dae:	429e      	cmp	r6, r3
 8000db0:	f240 80f9 	bls.w	8000fa6 <__udivmoddi4+0x282>
 8000db4:	4463      	add	r3, ip
 8000db6:	3802      	subs	r0, #2
 8000db8:	1b9b      	subs	r3, r3, r6
 8000dba:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000dbe:	2100      	movs	r1, #0
 8000dc0:	b11d      	cbz	r5, 8000dca <__udivmoddi4+0xa6>
 8000dc2:	40d3      	lsrs	r3, r2
 8000dc4:	2200      	movs	r2, #0
 8000dc6:	e9c5 3200 	strd	r3, r2, [r5]
 8000dca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dce:	428b      	cmp	r3, r1
 8000dd0:	d905      	bls.n	8000dde <__udivmoddi4+0xba>
 8000dd2:	b10d      	cbz	r5, 8000dd8 <__udivmoddi4+0xb4>
 8000dd4:	e9c5 0100 	strd	r0, r1, [r5]
 8000dd8:	2100      	movs	r1, #0
 8000dda:	4608      	mov	r0, r1
 8000ddc:	e7f5      	b.n	8000dca <__udivmoddi4+0xa6>
 8000dde:	fab3 f183 	clz	r1, r3
 8000de2:	2900      	cmp	r1, #0
 8000de4:	d146      	bne.n	8000e74 <__udivmoddi4+0x150>
 8000de6:	42a3      	cmp	r3, r4
 8000de8:	d302      	bcc.n	8000df0 <__udivmoddi4+0xcc>
 8000dea:	4290      	cmp	r0, r2
 8000dec:	f0c0 80f0 	bcc.w	8000fd0 <__udivmoddi4+0x2ac>
 8000df0:	1a86      	subs	r6, r0, r2
 8000df2:	eb64 0303 	sbc.w	r3, r4, r3
 8000df6:	2001      	movs	r0, #1
 8000df8:	2d00      	cmp	r5, #0
 8000dfa:	d0e6      	beq.n	8000dca <__udivmoddi4+0xa6>
 8000dfc:	e9c5 6300 	strd	r6, r3, [r5]
 8000e00:	e7e3      	b.n	8000dca <__udivmoddi4+0xa6>
 8000e02:	2a00      	cmp	r2, #0
 8000e04:	f040 8090 	bne.w	8000f28 <__udivmoddi4+0x204>
 8000e08:	eba1 040c 	sub.w	r4, r1, ip
 8000e0c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e10:	fa1f f78c 	uxth.w	r7, ip
 8000e14:	2101      	movs	r1, #1
 8000e16:	fbb4 f6f8 	udiv	r6, r4, r8
 8000e1a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000e1e:	fb08 4416 	mls	r4, r8, r6, r4
 8000e22:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e26:	fb07 f006 	mul.w	r0, r7, r6
 8000e2a:	4298      	cmp	r0, r3
 8000e2c:	d908      	bls.n	8000e40 <__udivmoddi4+0x11c>
 8000e2e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e32:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 8000e36:	d202      	bcs.n	8000e3e <__udivmoddi4+0x11a>
 8000e38:	4298      	cmp	r0, r3
 8000e3a:	f200 80cd 	bhi.w	8000fd8 <__udivmoddi4+0x2b4>
 8000e3e:	4626      	mov	r6, r4
 8000e40:	1a1c      	subs	r4, r3, r0
 8000e42:	fa1f f38e 	uxth.w	r3, lr
 8000e46:	fbb4 f0f8 	udiv	r0, r4, r8
 8000e4a:	fb08 4410 	mls	r4, r8, r0, r4
 8000e4e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000e52:	fb00 f707 	mul.w	r7, r0, r7
 8000e56:	429f      	cmp	r7, r3
 8000e58:	d908      	bls.n	8000e6c <__udivmoddi4+0x148>
 8000e5a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e5e:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 8000e62:	d202      	bcs.n	8000e6a <__udivmoddi4+0x146>
 8000e64:	429f      	cmp	r7, r3
 8000e66:	f200 80b0 	bhi.w	8000fca <__udivmoddi4+0x2a6>
 8000e6a:	4620      	mov	r0, r4
 8000e6c:	1bdb      	subs	r3, r3, r7
 8000e6e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e72:	e7a5      	b.n	8000dc0 <__udivmoddi4+0x9c>
 8000e74:	f1c1 0620 	rsb	r6, r1, #32
 8000e78:	408b      	lsls	r3, r1
 8000e7a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e7e:	431f      	orrs	r7, r3
 8000e80:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e84:	fa04 f301 	lsl.w	r3, r4, r1
 8000e88:	ea43 030c 	orr.w	r3, r3, ip
 8000e8c:	40f4      	lsrs	r4, r6
 8000e8e:	fa00 f801 	lsl.w	r8, r0, r1
 8000e92:	0c38      	lsrs	r0, r7, #16
 8000e94:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e98:	fbb4 fef0 	udiv	lr, r4, r0
 8000e9c:	fa1f fc87 	uxth.w	ip, r7
 8000ea0:	fb00 441e 	mls	r4, r0, lr, r4
 8000ea4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ea8:	fb0e f90c 	mul.w	r9, lr, ip
 8000eac:	45a1      	cmp	r9, r4
 8000eae:	fa02 f201 	lsl.w	r2, r2, r1
 8000eb2:	d90a      	bls.n	8000eca <__udivmoddi4+0x1a6>
 8000eb4:	193c      	adds	r4, r7, r4
 8000eb6:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 8000eba:	f080 8084 	bcs.w	8000fc6 <__udivmoddi4+0x2a2>
 8000ebe:	45a1      	cmp	r9, r4
 8000ec0:	f240 8081 	bls.w	8000fc6 <__udivmoddi4+0x2a2>
 8000ec4:	f1ae 0e02 	sub.w	lr, lr, #2
 8000ec8:	443c      	add	r4, r7
 8000eca:	eba4 0409 	sub.w	r4, r4, r9
 8000ece:	fa1f f983 	uxth.w	r9, r3
 8000ed2:	fbb4 f3f0 	udiv	r3, r4, r0
 8000ed6:	fb00 4413 	mls	r4, r0, r3, r4
 8000eda:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ede:	fb03 fc0c 	mul.w	ip, r3, ip
 8000ee2:	45a4      	cmp	ip, r4
 8000ee4:	d907      	bls.n	8000ef6 <__udivmoddi4+0x1d2>
 8000ee6:	193c      	adds	r4, r7, r4
 8000ee8:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 8000eec:	d267      	bcs.n	8000fbe <__udivmoddi4+0x29a>
 8000eee:	45a4      	cmp	ip, r4
 8000ef0:	d965      	bls.n	8000fbe <__udivmoddi4+0x29a>
 8000ef2:	3b02      	subs	r3, #2
 8000ef4:	443c      	add	r4, r7
 8000ef6:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000efa:	fba0 9302 	umull	r9, r3, r0, r2
 8000efe:	eba4 040c 	sub.w	r4, r4, ip
 8000f02:	429c      	cmp	r4, r3
 8000f04:	46ce      	mov	lr, r9
 8000f06:	469c      	mov	ip, r3
 8000f08:	d351      	bcc.n	8000fae <__udivmoddi4+0x28a>
 8000f0a:	d04e      	beq.n	8000faa <__udivmoddi4+0x286>
 8000f0c:	b155      	cbz	r5, 8000f24 <__udivmoddi4+0x200>
 8000f0e:	ebb8 030e 	subs.w	r3, r8, lr
 8000f12:	eb64 040c 	sbc.w	r4, r4, ip
 8000f16:	fa04 f606 	lsl.w	r6, r4, r6
 8000f1a:	40cb      	lsrs	r3, r1
 8000f1c:	431e      	orrs	r6, r3
 8000f1e:	40cc      	lsrs	r4, r1
 8000f20:	e9c5 6400 	strd	r6, r4, [r5]
 8000f24:	2100      	movs	r1, #0
 8000f26:	e750      	b.n	8000dca <__udivmoddi4+0xa6>
 8000f28:	f1c2 0320 	rsb	r3, r2, #32
 8000f2c:	fa20 f103 	lsr.w	r1, r0, r3
 8000f30:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f34:	fa24 f303 	lsr.w	r3, r4, r3
 8000f38:	4094      	lsls	r4, r2
 8000f3a:	430c      	orrs	r4, r1
 8000f3c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f40:	fa00 fe02 	lsl.w	lr, r0, r2
 8000f44:	fa1f f78c 	uxth.w	r7, ip
 8000f48:	fbb3 f0f8 	udiv	r0, r3, r8
 8000f4c:	fb08 3110 	mls	r1, r8, r0, r3
 8000f50:	0c23      	lsrs	r3, r4, #16
 8000f52:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f56:	fb00 f107 	mul.w	r1, r0, r7
 8000f5a:	4299      	cmp	r1, r3
 8000f5c:	d908      	bls.n	8000f70 <__udivmoddi4+0x24c>
 8000f5e:	eb1c 0303 	adds.w	r3, ip, r3
 8000f62:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000f66:	d22c      	bcs.n	8000fc2 <__udivmoddi4+0x29e>
 8000f68:	4299      	cmp	r1, r3
 8000f6a:	d92a      	bls.n	8000fc2 <__udivmoddi4+0x29e>
 8000f6c:	3802      	subs	r0, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	1a5b      	subs	r3, r3, r1
 8000f72:	b2a4      	uxth	r4, r4
 8000f74:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f78:	fb08 3311 	mls	r3, r8, r1, r3
 8000f7c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f80:	fb01 f307 	mul.w	r3, r1, r7
 8000f84:	42a3      	cmp	r3, r4
 8000f86:	d908      	bls.n	8000f9a <__udivmoddi4+0x276>
 8000f88:	eb1c 0404 	adds.w	r4, ip, r4
 8000f8c:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 8000f90:	d213      	bcs.n	8000fba <__udivmoddi4+0x296>
 8000f92:	42a3      	cmp	r3, r4
 8000f94:	d911      	bls.n	8000fba <__udivmoddi4+0x296>
 8000f96:	3902      	subs	r1, #2
 8000f98:	4464      	add	r4, ip
 8000f9a:	1ae4      	subs	r4, r4, r3
 8000f9c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000fa0:	e739      	b.n	8000e16 <__udivmoddi4+0xf2>
 8000fa2:	4604      	mov	r4, r0
 8000fa4:	e6f0      	b.n	8000d88 <__udivmoddi4+0x64>
 8000fa6:	4608      	mov	r0, r1
 8000fa8:	e706      	b.n	8000db8 <__udivmoddi4+0x94>
 8000faa:	45c8      	cmp	r8, r9
 8000fac:	d2ae      	bcs.n	8000f0c <__udivmoddi4+0x1e8>
 8000fae:	ebb9 0e02 	subs.w	lr, r9, r2
 8000fb2:	eb63 0c07 	sbc.w	ip, r3, r7
 8000fb6:	3801      	subs	r0, #1
 8000fb8:	e7a8      	b.n	8000f0c <__udivmoddi4+0x1e8>
 8000fba:	4631      	mov	r1, r6
 8000fbc:	e7ed      	b.n	8000f9a <__udivmoddi4+0x276>
 8000fbe:	4603      	mov	r3, r0
 8000fc0:	e799      	b.n	8000ef6 <__udivmoddi4+0x1d2>
 8000fc2:	4630      	mov	r0, r6
 8000fc4:	e7d4      	b.n	8000f70 <__udivmoddi4+0x24c>
 8000fc6:	46d6      	mov	lr, sl
 8000fc8:	e77f      	b.n	8000eca <__udivmoddi4+0x1a6>
 8000fca:	4463      	add	r3, ip
 8000fcc:	3802      	subs	r0, #2
 8000fce:	e74d      	b.n	8000e6c <__udivmoddi4+0x148>
 8000fd0:	4606      	mov	r6, r0
 8000fd2:	4623      	mov	r3, r4
 8000fd4:	4608      	mov	r0, r1
 8000fd6:	e70f      	b.n	8000df8 <__udivmoddi4+0xd4>
 8000fd8:	3e02      	subs	r6, #2
 8000fda:	4463      	add	r3, ip
 8000fdc:	e730      	b.n	8000e40 <__udivmoddi4+0x11c>
 8000fde:	bf00      	nop

08000fe0 <__aeabi_idiv0>:
 8000fe0:	4770      	bx	lr
 8000fe2:	bf00      	nop

08000fe4 <adf_reset_config>:


// Configuration functions ===================================================

// Config resetting functions --------------------------------------------
void adf_reset_config(void) {
 8000fe4:	b580      	push	{r7, lr}
 8000fe6:	af00      	add	r7, sp, #0
    adf_reset_register_zero();
 8000fe8:	f000 f80a 	bl	8001000 <adf_reset_register_zero>
    adf_reset_register_one();
 8000fec:	f000 f826 	bl	800103c <adf_reset_register_one>
    adf_reset_register_two();
 8000ff0:	f000 f836 	bl	8001060 <adf_reset_register_two>
    adf_reset_register_three();
 8000ff4:	f000 f850 	bl	8001098 <adf_reset_register_three>
    adf_reset();
 8000ff8:	f000 f884 	bl	8001104 <adf_reset>

    //HAL_Delay(10);      //as pin for reading adf ready state is not available, we will wait a moment


}
 8000ffc:	bf00      	nop
 8000ffe:	bd80      	pop	{r7, pc}

08001000 <adf_reset_register_zero>:
/* Bellow values are based on experiments. Do not change if not required. Some of those are critical and are not documented
 * vco_adjust=3; pa_bias = 7; vco_bias = 0; crystal_oscillator_disable = 1;
 * For modulation deviation set value on experimental basis, for FM channel width to be appropriate. In theory in 270z steps?
 */

void adf_reset_register_zero(void) {
 8001000:	b480      	push	{r7}
 8001002:	af00      	add	r7, sp, #0
    adf_config.r0.frequency_error_correction = ADF_FREQ_CORRECTION;   //11Bit Freq err corr 0b10011 - or whatever reason M20
 8001004:	4b0c      	ldr	r3, [pc, #48]	@ (8001038 <adf_reset_register_zero+0x38>)
 8001006:	2213      	movs	r2, #19
 8001008:	801a      	strh	r2, [r3, #0]
    adf_config.r0.r_divider = 1;
 800100a:	4b0b      	ldr	r3, [pc, #44]	@ (8001038 <adf_reset_register_zero+0x38>)
 800100c:	2201      	movs	r2, #1
 800100e:	709a      	strb	r2, [r3, #2]
    adf_config.r0.crystal_doubler = ADF_OFF;
 8001010:	4b09      	ldr	r3, [pc, #36]	@ (8001038 <adf_reset_register_zero+0x38>)
 8001012:	2200      	movs	r2, #0
 8001014:	70da      	strb	r2, [r3, #3]
    adf_config.r0.crystal_oscillator_disable = 1;  //osclator disabled - we are getting clock from STM
 8001016:	4b08      	ldr	r3, [pc, #32]	@ (8001038 <adf_reset_register_zero+0x38>)
 8001018:	2201      	movs	r2, #1
 800101a:	711a      	strb	r2, [r3, #4]
    adf_config.r0.clock_out_divider = 8;        // 0b1000 = 8 FOR M20
 800101c:	4b06      	ldr	r3, [pc, #24]	@ (8001038 <adf_reset_register_zero+0x38>)
 800101e:	2208      	movs	r2, #8
 8001020:	715a      	strb	r2, [r3, #5]
    adf_config.r0.vco_adjust = 3;                //maximum VCO adjust b11
 8001022:	4b05      	ldr	r3, [pc, #20]	@ (8001038 <adf_reset_register_zero+0x38>)
 8001024:	2203      	movs	r2, #3
 8001026:	719a      	strb	r2, [r3, #6]
    adf_config.r0.output_divider = 1;            // for M20
 8001028:	4b03      	ldr	r3, [pc, #12]	@ (8001038 <adf_reset_register_zero+0x38>)
 800102a:	2201      	movs	r2, #1
 800102c:	71da      	strb	r2, [r3, #7]
}
 800102e:	bf00      	nop
 8001030:	46bd      	mov	sp, r7
 8001032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001036:	4770      	bx	lr
 8001038:	20000290 	.word	0x20000290

0800103c <adf_reset_register_one>:

void adf_reset_register_one(void) {
 800103c:	b480      	push	{r7}
 800103e:	af00      	add	r7, sp, #0
    adf_config.r1.fractional_n = 0;
 8001040:	4b06      	ldr	r3, [pc, #24]	@ (800105c <adf_reset_register_one+0x20>)
 8001042:	2200      	movs	r2, #0
 8001044:	811a      	strh	r2, [r3, #8]
    adf_config.r1.integer_n = 0;
 8001046:	4b05      	ldr	r3, [pc, #20]	@ (800105c <adf_reset_register_one+0x20>)
 8001048:	2200      	movs	r2, #0
 800104a:	729a      	strb	r2, [r3, #10]
    adf_config.r1.prescaler = ADF_PRESCALER_4_5;
 800104c:	4b03      	ldr	r3, [pc, #12]	@ (800105c <adf_reset_register_one+0x20>)
 800104e:	2200      	movs	r2, #0
 8001050:	72da      	strb	r2, [r3, #11]
}
 8001052:	bf00      	nop
 8001054:	46bd      	mov	sp, r7
 8001056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105a:	4770      	bx	lr
 800105c:	20000290 	.word	0x20000290

08001060 <adf_reset_register_two>:

void adf_reset_register_two(void) {
 8001060:	b480      	push	{r7}
 8001062:	af00      	add	r7, sp, #0
    adf_config.r2.mod_control = ADF_MODULATION_FSK;
 8001064:	4b0b      	ldr	r3, [pc, #44]	@ (8001094 <adf_reset_register_two+0x34>)
 8001066:	2200      	movs	r2, #0
 8001068:	731a      	strb	r2, [r3, #12]
    adf_config.r2.gook = ADF_OFF;
 800106a:	4b0a      	ldr	r3, [pc, #40]	@ (8001094 <adf_reset_register_two+0x34>)
 800106c:	2200      	movs	r2, #0
 800106e:	735a      	strb	r2, [r3, #13]
    adf_config.r2.power_amplifier_level = 0;  // power level
 8001070:	4b08      	ldr	r3, [pc, #32]	@ (8001094 <adf_reset_register_two+0x34>)
 8001072:	2200      	movs	r2, #0
 8001074:	739a      	strb	r2, [r3, #14]
    adf_config.r2.modulation_deviation = 2;    //5= about 5k5Hz, 10=11kHz
 8001076:	4b07      	ldr	r3, [pc, #28]	@ (8001094 <adf_reset_register_two+0x34>)
 8001078:	2202      	movs	r2, #2
 800107a:	821a      	strh	r2, [r3, #16]
    //adf_config.r2.modulation_deviation = 11;
    adf_config.r2.gfsk_modulation_control = 0;
 800107c:	4b05      	ldr	r3, [pc, #20]	@ (8001094 <adf_reset_register_two+0x34>)
 800107e:	2200      	movs	r2, #0
 8001080:	749a      	strb	r2, [r3, #18]
    adf_config.r2.index_counter = 0;
 8001082:	4b04      	ldr	r3, [pc, #16]	@ (8001094 <adf_reset_register_two+0x34>)
 8001084:	2200      	movs	r2, #0
 8001086:	74da      	strb	r2, [r3, #19]
}
 8001088:	bf00      	nop
 800108a:	46bd      	mov	sp, r7
 800108c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop
 8001094:	20000290 	.word	0x20000290

08001098 <adf_reset_register_three>:

void adf_reset_register_three(void) {
 8001098:	b480      	push	{r7}
 800109a:	af00      	add	r7, sp, #0
    adf_config.r3.pll_enable = ADF_OFF;
 800109c:	4b18      	ldr	r3, [pc, #96]	@ (8001100 <adf_reset_register_three+0x68>)
 800109e:	2200      	movs	r2, #0
 80010a0:	751a      	strb	r2, [r3, #20]
    adf_config.r3.pa_enable = ADF_OFF;
 80010a2:	4b17      	ldr	r3, [pc, #92]	@ (8001100 <adf_reset_register_three+0x68>)
 80010a4:	2200      	movs	r2, #0
 80010a6:	755a      	strb	r2, [r3, #21]
    adf_config.r3.clkout_enable = ADF_OFF;
 80010a8:	4b15      	ldr	r3, [pc, #84]	@ (8001100 <adf_reset_register_three+0x68>)
 80010aa:	2200      	movs	r2, #0
 80010ac:	759a      	strb	r2, [r3, #22]
    adf_config.r3.data_invert = ADF_ON;
 80010ae:	4b14      	ldr	r3, [pc, #80]	@ (8001100 <adf_reset_register_three+0x68>)
 80010b0:	2201      	movs	r2, #1
 80010b2:	75da      	strb	r2, [r3, #23]
    adf_config.r3.charge_pump_current = ADF_CP_CURRENT_1_5;
 80010b4:	4b12      	ldr	r3, [pc, #72]	@ (8001100 <adf_reset_register_three+0x68>)
 80010b6:	2202      	movs	r2, #2
 80010b8:	761a      	strb	r2, [r3, #24]
    adf_config.r3.bleed_up = ADF_OFF;
 80010ba:	4b11      	ldr	r3, [pc, #68]	@ (8001100 <adf_reset_register_three+0x68>)
 80010bc:	2200      	movs	r2, #0
 80010be:	765a      	strb	r2, [r3, #25]
    adf_config.r3.bleed_down = ADF_OFF;
 80010c0:	4b0f      	ldr	r3, [pc, #60]	@ (8001100 <adf_reset_register_three+0x68>)
 80010c2:	2200      	movs	r2, #0
 80010c4:	769a      	strb	r2, [r3, #26]
    adf_config.r3.vco_disable = ADF_OFF;
 80010c6:	4b0e      	ldr	r3, [pc, #56]	@ (8001100 <adf_reset_register_three+0x68>)
 80010c8:	2200      	movs	r2, #0
 80010ca:	76da      	strb	r2, [r3, #27]
    adf_config.r3.muxout = ADF_MUXOUT_REG_READY;
 80010cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001100 <adf_reset_register_three+0x68>)
 80010ce:	2203      	movs	r2, #3
 80010d0:	771a      	strb	r2, [r3, #28]
    adf_config.r3.ld_precision = ADF_LD_PRECISION_3_CYCLES;
 80010d2:	4b0b      	ldr	r3, [pc, #44]	@ (8001100 <adf_reset_register_three+0x68>)
 80010d4:	2200      	movs	r2, #0
 80010d6:	775a      	strb	r2, [r3, #29]
    adf_config.r3.vco_bias = 0;   //was 4
 80010d8:	4b09      	ldr	r3, [pc, #36]	@ (8001100 <adf_reset_register_three+0x68>)
 80010da:	2200      	movs	r2, #0
 80010dc:	779a      	strb	r2, [r3, #30]
    adf_config.r3.pa_bias = 7;
 80010de:	4b08      	ldr	r3, [pc, #32]	@ (8001100 <adf_reset_register_three+0x68>)
 80010e0:	2207      	movs	r2, #7
 80010e2:	77da      	strb	r2, [r3, #31]
    adf_config.r3.pll_test_mode = 0;
 80010e4:	4b06      	ldr	r3, [pc, #24]	@ (8001100 <adf_reset_register_three+0x68>)
 80010e6:	2200      	movs	r2, #0
 80010e8:	f883 2020 	strb.w	r2, [r3, #32]
    adf_config.r3.sd_test_mode = 0;
 80010ec:	4b04      	ldr	r3, [pc, #16]	@ (8001100 <adf_reset_register_three+0x68>)
 80010ee:	2200      	movs	r2, #0
 80010f0:	f883 2021 	strb.w	r2, [r3, #33]	@ 0x21
}
 80010f4:	bf00      	nop
 80010f6:	46bd      	mov	sp, r7
 80010f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop
 8001100:	20000290 	.word	0x20000290

08001104 <adf_reset>:

void adf_reset(void) {
 8001104:	b580      	push	{r7, lr}
 8001106:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(ADF_CE_GPIO_Port, ADF_CE_Pin, 0);
 8001108:	2200      	movs	r2, #0
 800110a:	2108      	movs	r1, #8
 800110c:	4817      	ldr	r0, [pc, #92]	@ (800116c <adf_reset+0x68>)
 800110e:	f004 fefb 	bl	8005f08 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(RADIO_EN_GPIO_Port, RADIO_EN_Pin, 0);
 8001112:	2200      	movs	r2, #0
 8001114:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001118:	4814      	ldr	r0, [pc, #80]	@ (800116c <adf_reset+0x68>)
 800111a:	f004 fef5 	bl	8005f08 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(ADF_LE_GPIO_Port, ADF_LE_Pin, 0);
 800111e:	2200      	movs	r2, #0
 8001120:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001124:	4812      	ldr	r0, [pc, #72]	@ (8001170 <adf_reset+0x6c>)
 8001126:	f004 feef 	bl	8005f08 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(ADF_TX_Data_GPIO_Port, ADF_TX_Data_Pin, 1);
 800112a:	2201      	movs	r2, #1
 800112c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001130:	480e      	ldr	r0, [pc, #56]	@ (800116c <adf_reset+0x68>)
 8001132:	f004 fee9 	bl	8005f08 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(ADF_CLK_GPIO_Port, ADF_CLK_Pin, 1);
 8001136:	2201      	movs	r2, #1
 8001138:	2180      	movs	r1, #128	@ 0x80
 800113a:	480d      	ldr	r0, [pc, #52]	@ (8001170 <adf_reset+0x6c>)
 800113c:	f004 fee4 	bl	8005f08 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(ADF_Data_GPIO_Port, ADF_Data_Pin, 1);
 8001140:	2201      	movs	r2, #1
 8001142:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001146:	480a      	ldr	r0, [pc, #40]	@ (8001170 <adf_reset+0x6c>)
 8001148:	f004 fede 	bl	8005f08 <HAL_GPIO_WritePin>
    HAL_Delay(1); //short delay between powering off and on
 800114c:	2001      	movs	r0, #1
 800114e:	f002 ff99 	bl	8004084 <HAL_Delay>
    HAL_GPIO_WritePin(RADIO_EN_GPIO_Port, RADIO_EN_Pin, 1);
 8001152:	2201      	movs	r2, #1
 8001154:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001158:	4804      	ldr	r0, [pc, #16]	@ (800116c <adf_reset+0x68>)
 800115a:	f004 fed5 	bl	8005f08 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(ADF_CE_GPIO_Port, ADF_CE_Pin, 1);
 800115e:	2201      	movs	r2, #1
 8001160:	2108      	movs	r1, #8
 8001162:	4802      	ldr	r0, [pc, #8]	@ (800116c <adf_reset+0x68>)
 8001164:	f004 fed0 	bl	8005f08 <HAL_GPIO_WritePin>
   // HAL_Delay(100);
}
 8001168:	bf00      	nop
 800116a:	bd80      	pop	{r7, pc}
 800116c:	48000400 	.word	0x48000400
 8001170:	48000800 	.word	0x48000800

08001174 <adf_write_config>:
    HAL_GPIO_WritePin(ADF_CE_GPIO_Port, ADF_CE_Pin, 0);
}

// Configuration writing functions ---------------------------------------

void adf_write_config(void) {
 8001174:	b580      	push	{r7, lr}
 8001176:	af00      	add	r7, sp, #0
    adf_write_register_zero();
 8001178:	f000 f808 	bl	800118c <adf_write_register_zero>
    adf_write_register_one();
 800117c:	f000 f83e 	bl	80011fc <adf_write_register_one>
    adf_write_register_two();
 8001180:	f000 f85c 	bl	800123c <adf_write_register_two>
    adf_write_register_three();
 8001184:	f000 f88e 	bl	80012a4 <adf_write_register_three>
}
 8001188:	bf00      	nop
 800118a:	bd80      	pop	{r7, pc}

0800118c <adf_write_register_zero>:

void adf_write_register_zero(void) {
 800118c:	b580      	push	{r7, lr}
 800118e:	b082      	sub	sp, #8
 8001190:	af00      	add	r7, sp, #0
    uint32_t reg =
        (0) |
        ((adf_config.r0.frequency_error_correction  & 0x7FF) <<  2) |
 8001192:	4b19      	ldr	r3, [pc, #100]	@ (80011f8 <adf_write_register_zero+0x6c>)
 8001194:	881b      	ldrh	r3, [r3, #0]
 8001196:	009a      	lsls	r2, r3, #2
        (0) |
 8001198:	f641 73fc 	movw	r3, #8188	@ 0x1ffc
 800119c:	4013      	ands	r3, r2
        ((adf_config.r0.r_divider                   & 0xF  ) << 13) |
 800119e:	4a16      	ldr	r2, [pc, #88]	@ (80011f8 <adf_write_register_zero+0x6c>)
 80011a0:	7892      	ldrb	r2, [r2, #2]
 80011a2:	0352      	lsls	r2, r2, #13
 80011a4:	f402 32f0 	and.w	r2, r2, #122880	@ 0x1e000
        ((adf_config.r0.frequency_error_correction  & 0x7FF) <<  2) |
 80011a8:	431a      	orrs	r2, r3
        ((adf_config.r0.crystal_doubler             & 0x1  ) << 17) |
 80011aa:	4b13      	ldr	r3, [pc, #76]	@ (80011f8 <adf_write_register_zero+0x6c>)
 80011ac:	78db      	ldrb	r3, [r3, #3]
 80011ae:	045b      	lsls	r3, r3, #17
 80011b0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
        ((adf_config.r0.r_divider                   & 0xF  ) << 13) |
 80011b4:	431a      	orrs	r2, r3
        ((adf_config.r0.crystal_oscillator_disable  & 0x1  ) << 18) |
 80011b6:	4b10      	ldr	r3, [pc, #64]	@ (80011f8 <adf_write_register_zero+0x6c>)
 80011b8:	791b      	ldrb	r3, [r3, #4]
 80011ba:	049b      	lsls	r3, r3, #18
 80011bc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
        ((adf_config.r0.crystal_doubler             & 0x1  ) << 17) |
 80011c0:	431a      	orrs	r2, r3
        ((adf_config.r0.clock_out_divider           & 0xF  ) << 19) |
 80011c2:	4b0d      	ldr	r3, [pc, #52]	@ (80011f8 <adf_write_register_zero+0x6c>)
 80011c4:	795b      	ldrb	r3, [r3, #5]
 80011c6:	04db      	lsls	r3, r3, #19
 80011c8:	f403 03f0 	and.w	r3, r3, #7864320	@ 0x780000
        ((adf_config.r0.crystal_oscillator_disable  & 0x1  ) << 18) |
 80011cc:	431a      	orrs	r2, r3
        ((adf_config.r0.vco_adjust                  & 0x3  ) << 23) |
 80011ce:	4b0a      	ldr	r3, [pc, #40]	@ (80011f8 <adf_write_register_zero+0x6c>)
 80011d0:	799b      	ldrb	r3, [r3, #6]
 80011d2:	05db      	lsls	r3, r3, #23
 80011d4:	f003 73c0 	and.w	r3, r3, #25165824	@ 0x1800000
        ((adf_config.r0.clock_out_divider           & 0xF  ) << 19) |
 80011d8:	431a      	orrs	r2, r3
        ((adf_config.r0.output_divider              & 0x3  ) << 25);
 80011da:	4b07      	ldr	r3, [pc, #28]	@ (80011f8 <adf_write_register_zero+0x6c>)
 80011dc:	79db      	ldrb	r3, [r3, #7]
 80011de:	065b      	lsls	r3, r3, #25
 80011e0:	f003 63c0 	and.w	r3, r3, #100663296	@ 0x6000000
        ((adf_config.r0.vco_adjust                  & 0x3  ) << 23) |
 80011e4:	4313      	orrs	r3, r2
    uint32_t reg =
 80011e6:	607b      	str	r3, [r7, #4]
    adf_write_register(reg);
 80011e8:	6878      	ldr	r0, [r7, #4]
 80011ea:	f000 f8bb 	bl	8001364 <adf_write_register>

}
 80011ee:	bf00      	nop
 80011f0:	3708      	adds	r7, #8
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bd80      	pop	{r7, pc}
 80011f6:	bf00      	nop
 80011f8:	20000290 	.word	0x20000290

080011fc <adf_write_register_one>:

void adf_write_register_one(void) {
 80011fc:	b580      	push	{r7, lr}
 80011fe:	b082      	sub	sp, #8
 8001200:	af00      	add	r7, sp, #0
    uint32_t reg =
        (1) |
        ((adf_config.r1.fractional_n                & 0xFFF) <<  2) |
 8001202:	4b0d      	ldr	r3, [pc, #52]	@ (8001238 <adf_write_register_one+0x3c>)
 8001204:	891b      	ldrh	r3, [r3, #8]
 8001206:	009a      	lsls	r2, r3, #2
 8001208:	f643 73fc 	movw	r3, #16380	@ 0x3ffc
 800120c:	4013      	ands	r3, r2
        (1) |
 800120e:	f043 0201 	orr.w	r2, r3, #1
        ((adf_config.r1.integer_n                   & 0xFF ) << 14) |
 8001212:	4b09      	ldr	r3, [pc, #36]	@ (8001238 <adf_write_register_one+0x3c>)
 8001214:	7a9b      	ldrb	r3, [r3, #10]
 8001216:	039b      	lsls	r3, r3, #14
        ((adf_config.r1.fractional_n                & 0xFFF) <<  2) |
 8001218:	431a      	orrs	r2, r3
        ((adf_config.r1.prescaler                   & 0x1  ) << 22);
 800121a:	4b07      	ldr	r3, [pc, #28]	@ (8001238 <adf_write_register_one+0x3c>)
 800121c:	7adb      	ldrb	r3, [r3, #11]
 800121e:	059b      	lsls	r3, r3, #22
 8001220:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
        ((adf_config.r1.integer_n                   & 0xFF ) << 14) |
 8001224:	4313      	orrs	r3, r2
    uint32_t reg =
 8001226:	607b      	str	r3, [r7, #4]
     adf_write_register(reg);
 8001228:	6878      	ldr	r0, [r7, #4]
 800122a:	f000 f89b 	bl	8001364 <adf_write_register>

}
 800122e:	bf00      	nop
 8001230:	3708      	adds	r7, #8
 8001232:	46bd      	mov	sp, r7
 8001234:	bd80      	pop	{r7, pc}
 8001236:	bf00      	nop
 8001238:	20000290 	.word	0x20000290

0800123c <adf_write_register_two>:

void adf_write_register_two(void) {
 800123c:	b580      	push	{r7, lr}
 800123e:	b082      	sub	sp, #8
 8001240:	af00      	add	r7, sp, #0
    uint32_t reg =
        (2) |
        ((adf_config.r2.mod_control                 & 0x3  ) <<  2) |
 8001242:	4b16      	ldr	r3, [pc, #88]	@ (800129c <adf_write_register_two+0x60>)
 8001244:	7b1b      	ldrb	r3, [r3, #12]
 8001246:	009b      	lsls	r3, r3, #2
 8001248:	f003 030c 	and.w	r3, r3, #12
        (2) |
 800124c:	f043 0202 	orr.w	r2, r3, #2
        ((adf_config.r2.gook                        & 0x1  ) <<  4) |
 8001250:	4b12      	ldr	r3, [pc, #72]	@ (800129c <adf_write_register_two+0x60>)
 8001252:	7b5b      	ldrb	r3, [r3, #13]
 8001254:	011b      	lsls	r3, r3, #4
 8001256:	f003 0310 	and.w	r3, r3, #16
        ((adf_config.r2.mod_control                 & 0x3  ) <<  2) |
 800125a:	431a      	orrs	r2, r3
        ((adf_config.r2.power_amplifier_level       & 0x3F ) <<  5) |
 800125c:	4b0f      	ldr	r3, [pc, #60]	@ (800129c <adf_write_register_two+0x60>)
 800125e:	7b9b      	ldrb	r3, [r3, #14]
 8001260:	015b      	lsls	r3, r3, #5
 8001262:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
        ((adf_config.r2.gook                        & 0x1  ) <<  4) |
 8001266:	431a      	orrs	r2, r3
        ((adf_config.r2.modulation_deviation        & 0x1FF) << 11) |
 8001268:	4b0c      	ldr	r3, [pc, #48]	@ (800129c <adf_write_register_two+0x60>)
 800126a:	8a1b      	ldrh	r3, [r3, #16]
 800126c:	02d9      	lsls	r1, r3, #11
 800126e:	4b0c      	ldr	r3, [pc, #48]	@ (80012a0 <adf_write_register_two+0x64>)
 8001270:	400b      	ands	r3, r1
        ((adf_config.r2.power_amplifier_level       & 0x3F ) <<  5) |
 8001272:	431a      	orrs	r2, r3
        ((adf_config.r2.gfsk_modulation_control     & 0x7  ) << 20) |
 8001274:	4b09      	ldr	r3, [pc, #36]	@ (800129c <adf_write_register_two+0x60>)
 8001276:	7c9b      	ldrb	r3, [r3, #18]
 8001278:	051b      	lsls	r3, r3, #20
 800127a:	f403 03e0 	and.w	r3, r3, #7340032	@ 0x700000
        ((adf_config.r2.modulation_deviation        & 0x1FF) << 11) |
 800127e:	431a      	orrs	r2, r3
        ((adf_config.r2.index_counter               & 0x3  ) << 23);
 8001280:	4b06      	ldr	r3, [pc, #24]	@ (800129c <adf_write_register_two+0x60>)
 8001282:	7cdb      	ldrb	r3, [r3, #19]
 8001284:	05db      	lsls	r3, r3, #23
 8001286:	f003 73c0 	and.w	r3, r3, #25165824	@ 0x1800000
        ((adf_config.r2.gfsk_modulation_control     & 0x7  ) << 20) |
 800128a:	4313      	orrs	r3, r2
    uint32_t reg =
 800128c:	607b      	str	r3, [r7, #4]
    adf_write_register(reg);
 800128e:	6878      	ldr	r0, [r7, #4]
 8001290:	f000 f868 	bl	8001364 <adf_write_register>

}
 8001294:	bf00      	nop
 8001296:	3708      	adds	r7, #8
 8001298:	46bd      	mov	sp, r7
 800129a:	bd80      	pop	{r7, pc}
 800129c:	20000290 	.word	0x20000290
 80012a0:	000ff800 	.word	0x000ff800

080012a4 <adf_write_register_three>:

void adf_write_register_three(void) {
 80012a4:	b580      	push	{r7, lr}
 80012a6:	b082      	sub	sp, #8
 80012a8:	af00      	add	r7, sp, #0
    uint32_t reg =
        (3) |
        ((adf_config.r3.pll_enable                  & 0x1  ) <<  2) |
 80012aa:	4b2d      	ldr	r3, [pc, #180]	@ (8001360 <adf_write_register_three+0xbc>)
 80012ac:	7d1b      	ldrb	r3, [r3, #20]
 80012ae:	009b      	lsls	r3, r3, #2
 80012b0:	f003 0304 	and.w	r3, r3, #4
        (3) |
 80012b4:	f043 0203 	orr.w	r2, r3, #3
        ((adf_config.r3.pa_enable                   & 0x1  ) <<  3) |
 80012b8:	4b29      	ldr	r3, [pc, #164]	@ (8001360 <adf_write_register_three+0xbc>)
 80012ba:	7d5b      	ldrb	r3, [r3, #21]
 80012bc:	00db      	lsls	r3, r3, #3
 80012be:	f003 0308 	and.w	r3, r3, #8
        ((adf_config.r3.pll_enable                  & 0x1  ) <<  2) |
 80012c2:	431a      	orrs	r2, r3
        ((adf_config.r3.clkout_enable               & 0x1  ) <<  4) |
 80012c4:	4b26      	ldr	r3, [pc, #152]	@ (8001360 <adf_write_register_three+0xbc>)
 80012c6:	7d9b      	ldrb	r3, [r3, #22]
 80012c8:	011b      	lsls	r3, r3, #4
 80012ca:	f003 0310 	and.w	r3, r3, #16
        ((adf_config.r3.pa_enable                   & 0x1  ) <<  3) |
 80012ce:	431a      	orrs	r2, r3
        ((adf_config.r3.data_invert                 & 0x1  ) <<  5) |
 80012d0:	4b23      	ldr	r3, [pc, #140]	@ (8001360 <adf_write_register_three+0xbc>)
 80012d2:	7ddb      	ldrb	r3, [r3, #23]
 80012d4:	015b      	lsls	r3, r3, #5
 80012d6:	f003 0320 	and.w	r3, r3, #32
        ((adf_config.r3.clkout_enable               & 0x1  ) <<  4) |
 80012da:	431a      	orrs	r2, r3
        ((adf_config.r3.charge_pump_current         & 0x3  ) <<  6) |
 80012dc:	4b20      	ldr	r3, [pc, #128]	@ (8001360 <adf_write_register_three+0xbc>)
 80012de:	7e1b      	ldrb	r3, [r3, #24]
 80012e0:	019b      	lsls	r3, r3, #6
 80012e2:	b2db      	uxtb	r3, r3
        ((adf_config.r3.data_invert                 & 0x1  ) <<  5) |
 80012e4:	431a      	orrs	r2, r3
        ((adf_config.r3.bleed_up                    & 0x1  ) <<  8) |
 80012e6:	4b1e      	ldr	r3, [pc, #120]	@ (8001360 <adf_write_register_three+0xbc>)
 80012e8:	7e5b      	ldrb	r3, [r3, #25]
 80012ea:	021b      	lsls	r3, r3, #8
 80012ec:	f403 7380 	and.w	r3, r3, #256	@ 0x100
        ((adf_config.r3.charge_pump_current         & 0x3  ) <<  6) |
 80012f0:	431a      	orrs	r2, r3
        ((adf_config.r3.bleed_down                  & 0x1  ) <<  9) |
 80012f2:	4b1b      	ldr	r3, [pc, #108]	@ (8001360 <adf_write_register_three+0xbc>)
 80012f4:	7e9b      	ldrb	r3, [r3, #26]
 80012f6:	025b      	lsls	r3, r3, #9
 80012f8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
        ((adf_config.r3.bleed_up                    & 0x1  ) <<  8) |
 80012fc:	431a      	orrs	r2, r3
        ((adf_config.r3.vco_disable                 & 0x1  ) << 10) |
 80012fe:	4b18      	ldr	r3, [pc, #96]	@ (8001360 <adf_write_register_three+0xbc>)
 8001300:	7edb      	ldrb	r3, [r3, #27]
 8001302:	029b      	lsls	r3, r3, #10
 8001304:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        ((adf_config.r3.bleed_down                  & 0x1  ) <<  9) |
 8001308:	431a      	orrs	r2, r3
        ((adf_config.r3.muxout                      & 0xF  ) << 11) |
 800130a:	4b15      	ldr	r3, [pc, #84]	@ (8001360 <adf_write_register_three+0xbc>)
 800130c:	7f1b      	ldrb	r3, [r3, #28]
 800130e:	02db      	lsls	r3, r3, #11
 8001310:	f403 43f0 	and.w	r3, r3, #30720	@ 0x7800
        ((adf_config.r3.vco_disable                 & 0x1  ) << 10) |
 8001314:	431a      	orrs	r2, r3
        ((adf_config.r3.ld_precision                & 0x1  ) << 15) |
 8001316:	4b12      	ldr	r3, [pc, #72]	@ (8001360 <adf_write_register_three+0xbc>)
 8001318:	7f5b      	ldrb	r3, [r3, #29]
 800131a:	03db      	lsls	r3, r3, #15
 800131c:	b29b      	uxth	r3, r3
        ((adf_config.r3.muxout                      & 0xF  ) << 11) |
 800131e:	431a      	orrs	r2, r3
        ((adf_config.r3.vco_bias                    & 0xF  ) << 16) |
 8001320:	4b0f      	ldr	r3, [pc, #60]	@ (8001360 <adf_write_register_three+0xbc>)
 8001322:	7f9b      	ldrb	r3, [r3, #30]
 8001324:	041b      	lsls	r3, r3, #16
 8001326:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
        ((adf_config.r3.ld_precision                & 0x1  ) << 15) |
 800132a:	431a      	orrs	r2, r3
        ((adf_config.r3.pa_bias                     & 0x7  ) << 20) |
 800132c:	4b0c      	ldr	r3, [pc, #48]	@ (8001360 <adf_write_register_three+0xbc>)
 800132e:	7fdb      	ldrb	r3, [r3, #31]
 8001330:	051b      	lsls	r3, r3, #20
 8001332:	f403 03e0 	and.w	r3, r3, #7340032	@ 0x700000
        ((adf_config.r3.vco_bias                    & 0xF  ) << 16) |
 8001336:	431a      	orrs	r2, r3
        ((adf_config.r3.pll_test_mode               & 0x1F ) << 23) |
 8001338:	4b09      	ldr	r3, [pc, #36]	@ (8001360 <adf_write_register_three+0xbc>)
 800133a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800133e:	05db      	lsls	r3, r3, #23
 8001340:	f003 6378 	and.w	r3, r3, #260046848	@ 0xf800000
        ((adf_config.r3.pa_bias                     & 0x7  ) << 20) |
 8001344:	431a      	orrs	r2, r3
        ((adf_config.r3.sd_test_mode                & 0xF  ) << 28);
 8001346:	4b06      	ldr	r3, [pc, #24]	@ (8001360 <adf_write_register_three+0xbc>)
 8001348:	f893 3021 	ldrb.w	r3, [r3, #33]	@ 0x21
 800134c:	071b      	lsls	r3, r3, #28
        ((adf_config.r3.pll_test_mode               & 0x1F ) << 23) |
 800134e:	4313      	orrs	r3, r2
    uint32_t reg =
 8001350:	607b      	str	r3, [r7, #4]
    adf_write_register(reg);
 8001352:	6878      	ldr	r0, [r7, #4]
 8001354:	f000 f806 	bl	8001364 <adf_write_register>


}
 8001358:	bf00      	nop
 800135a:	3708      	adds	r7, #8
 800135c:	46bd      	mov	sp, r7
 800135e:	bd80      	pop	{r7, pc}
 8001360:	20000290 	.word	0x20000290

08001364 <adf_write_register>:

void adf_write_register(uint32_t data)
{
 8001364:	b580      	push	{r7, lr}
 8001366:	b086      	sub	sp, #24
 8001368:	af00      	add	r7, sp, #0
 800136a:	6078      	str	r0, [r7, #4]
	 * Below procedure is not the prettiest one, but it works. Lots of work was put into it, so be careful when changing.
	 * wl value might be changed - delay is implemented, since other ways did not worked. It is possible, that they are not
	 * required, or that they would have to be adjusted if CPU frequency would be adjusted.
	 */

	uint16_t wl=5;  //wl=10;
 800136c:	2305      	movs	r3, #5
 800136e:	817b      	strh	r3, [r7, #10]
	HAL_GPIO_WritePin(ADF_LE_GPIO_Port, ADF_LE_Pin, GPIO_PIN_SET);
 8001370:	2201      	movs	r2, #1
 8001372:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001376:	483f      	ldr	r0, [pc, #252]	@ (8001474 <adf_write_register+0x110>)
 8001378:	f004 fdc6 	bl	8005f08 <HAL_GPIO_WritePin>

	for(uint16_t n=0; n< (wl*2); n++)
 800137c:	2300      	movs	r3, #0
 800137e:	82fb      	strh	r3, [r7, #22]
 8001380:	e003      	b.n	800138a <adf_write_register+0x26>
	    			asm("NOP");
 8001382:	bf00      	nop
	for(uint16_t n=0; n< (wl*2); n++)
 8001384:	8afb      	ldrh	r3, [r7, #22]
 8001386:	3301      	adds	r3, #1
 8001388:	82fb      	strh	r3, [r7, #22]
 800138a:	8afa      	ldrh	r2, [r7, #22]
 800138c:	897b      	ldrh	r3, [r7, #10]
 800138e:	005b      	lsls	r3, r3, #1
 8001390:	429a      	cmp	r2, r3
 8001392:	dbf6      	blt.n	8001382 <adf_write_register+0x1e>

	HAL_GPIO_WritePin(ADF_LE_GPIO_Port, ADF_LE_Pin, GPIO_PIN_RESET);
 8001394:	2200      	movs	r2, #0
 8001396:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800139a:	4836      	ldr	r0, [pc, #216]	@ (8001474 <adf_write_register+0x110>)
 800139c:	f004 fdb4 	bl	8005f08 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(ADF_Data_GPIO_Port, ADF_Data_Pin, GPIO_PIN_RESET);
 80013a0:	2200      	movs	r2, #0
 80013a2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013a6:	4833      	ldr	r0, [pc, #204]	@ (8001474 <adf_write_register+0x110>)
 80013a8:	f004 fdae 	bl	8005f08 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(ADF_CLK_GPIO_Port, ADF_CLK_Pin, GPIO_PIN_RESET);
 80013ac:	2200      	movs	r2, #0
 80013ae:	2180      	movs	r1, #128	@ 0x80
 80013b0:	4830      	ldr	r0, [pc, #192]	@ (8001474 <adf_write_register+0x110>)
 80013b2:	f004 fda9 	bl	8005f08 <HAL_GPIO_WritePin>

	for(uint16_t n=0; n< wl; n++)
 80013b6:	2300      	movs	r3, #0
 80013b8:	82bb      	strh	r3, [r7, #20]
 80013ba:	e003      	b.n	80013c4 <adf_write_register+0x60>
		    			asm("NOP");
 80013bc:	bf00      	nop
	for(uint16_t n=0; n< wl; n++)
 80013be:	8abb      	ldrh	r3, [r7, #20]
 80013c0:	3301      	adds	r3, #1
 80013c2:	82bb      	strh	r3, [r7, #20]
 80013c4:	8aba      	ldrh	r2, [r7, #20]
 80013c6:	897b      	ldrh	r3, [r7, #10]
 80013c8:	429a      	cmp	r2, r3
 80013ca:	d3f7      	bcc.n	80013bc <adf_write_register+0x58>


	for (int i = 0; i < 32; i++) {
 80013cc:	2300      	movs	r3, #0
 80013ce:	613b      	str	r3, [r7, #16]
 80013d0:	e02b      	b.n	800142a <adf_write_register+0xc6>
		HAL_GPIO_WritePin(ADF_CLK_GPIO_Port, ADF_CLK_Pin, GPIO_PIN_RESET);
 80013d2:	2200      	movs	r2, #0
 80013d4:	2180      	movs	r1, #128	@ 0x80
 80013d6:	4827      	ldr	r0, [pc, #156]	@ (8001474 <adf_write_register+0x110>)
 80013d8:	f004 fd96 	bl	8005f08 <HAL_GPIO_WritePin>
		if (data & 0b10000000000000000000000000000000)
 80013dc:	687b      	ldr	r3, [r7, #4]
 80013de:	2b00      	cmp	r3, #0
 80013e0:	da06      	bge.n	80013f0 <adf_write_register+0x8c>
		{
			HAL_GPIO_WritePin(ADF_Data_GPIO_Port, ADF_Data_Pin, GPIO_PIN_SET);
 80013e2:	2201      	movs	r2, #1
 80013e4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013e8:	4822      	ldr	r0, [pc, #136]	@ (8001474 <adf_write_register+0x110>)
 80013ea:	f004 fd8d 	bl	8005f08 <HAL_GPIO_WritePin>
 80013ee:	e005      	b.n	80013fc <adf_write_register+0x98>
		} else {
			HAL_GPIO_WritePin(ADF_Data_GPIO_Port, ADF_Data_Pin, GPIO_PIN_RESET);
 80013f0:	2200      	movs	r2, #0
 80013f2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80013f6:	481f      	ldr	r0, [pc, #124]	@ (8001474 <adf_write_register+0x110>)
 80013f8:	f004 fd86 	bl	8005f08 <HAL_GPIO_WritePin>
		}

		for(uint16_t n=0; n< (wl *2); n++)
 80013fc:	2300      	movs	r3, #0
 80013fe:	81fb      	strh	r3, [r7, #14]
 8001400:	e003      	b.n	800140a <adf_write_register+0xa6>
			    			asm("NOP");
 8001402:	bf00      	nop
		for(uint16_t n=0; n< (wl *2); n++)
 8001404:	89fb      	ldrh	r3, [r7, #14]
 8001406:	3301      	adds	r3, #1
 8001408:	81fb      	strh	r3, [r7, #14]
 800140a:	89fa      	ldrh	r2, [r7, #14]
 800140c:	897b      	ldrh	r3, [r7, #10]
 800140e:	005b      	lsls	r3, r3, #1
 8001410:	429a      	cmp	r2, r3
 8001412:	dbf6      	blt.n	8001402 <adf_write_register+0x9e>

		HAL_GPIO_WritePin(ADF_CLK_GPIO_Port, ADF_CLK_Pin, GPIO_PIN_SET);
 8001414:	2201      	movs	r2, #1
 8001416:	2180      	movs	r1, #128	@ 0x80
 8001418:	4816      	ldr	r0, [pc, #88]	@ (8001474 <adf_write_register+0x110>)
 800141a:	f004 fd75 	bl	8005f08 <HAL_GPIO_WritePin>
		data = data << 1;
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	005b      	lsls	r3, r3, #1
 8001422:	607b      	str	r3, [r7, #4]
	for (int i = 0; i < 32; i++) {
 8001424:	693b      	ldr	r3, [r7, #16]
 8001426:	3301      	adds	r3, #1
 8001428:	613b      	str	r3, [r7, #16]
 800142a:	693b      	ldr	r3, [r7, #16]
 800142c:	2b1f      	cmp	r3, #31
 800142e:	ddd0      	ble.n	80013d2 <adf_write_register+0x6e>
	}

	HAL_GPIO_WritePin(ADF_LE_GPIO_Port, ADF_LE_Pin, GPIO_PIN_SET);
 8001430:	2201      	movs	r2, #1
 8001432:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001436:	480f      	ldr	r0, [pc, #60]	@ (8001474 <adf_write_register+0x110>)
 8001438:	f004 fd66 	bl	8005f08 <HAL_GPIO_WritePin>
	for(uint16_t n=0; n< (wl*2); n++)
 800143c:	2300      	movs	r3, #0
 800143e:	81bb      	strh	r3, [r7, #12]
 8001440:	e003      	b.n	800144a <adf_write_register+0xe6>
		    			asm("NOP");
 8001442:	bf00      	nop
	for(uint16_t n=0; n< (wl*2); n++)
 8001444:	89bb      	ldrh	r3, [r7, #12]
 8001446:	3301      	adds	r3, #1
 8001448:	81bb      	strh	r3, [r7, #12]
 800144a:	89ba      	ldrh	r2, [r7, #12]
 800144c:	897b      	ldrh	r3, [r7, #10]
 800144e:	005b      	lsls	r3, r3, #1
 8001450:	429a      	cmp	r2, r3
 8001452:	dbf6      	blt.n	8001442 <adf_write_register+0xde>

	HAL_GPIO_WritePin(ADF_CLK_GPIO_Port, ADF_CLK_Pin, GPIO_PIN_RESET);
 8001454:	2200      	movs	r2, #0
 8001456:	2180      	movs	r1, #128	@ 0x80
 8001458:	4806      	ldr	r0, [pc, #24]	@ (8001474 <adf_write_register+0x110>)
 800145a:	f004 fd55 	bl	8005f08 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(ADF_LE_GPIO_Port, ADF_LE_Pin, GPIO_PIN_RESET);
 800145e:	2200      	movs	r2, #0
 8001460:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001464:	4803      	ldr	r0, [pc, #12]	@ (8001474 <adf_write_register+0x110>)
 8001466:	f004 fd4f 	bl	8005f08 <HAL_GPIO_WritePin>


}
 800146a:	bf00      	nop
 800146c:	3718      	adds	r7, #24
 800146e:	46bd      	mov	sp, r7
 8001470:	bd80      	pop	{r7, pc}
 8001472:	bf00      	nop
 8001474:	48000800 	.word	0x48000800

08001478 <adf_set_r_divider>:
// Configuration setting functions ---------------------------------------
void adf_set_frequency_error_correction(uint16_t error) {
    adf_config.r0.frequency_error_correction = error;
}

void adf_set_r_divider(uint8_t r) {
 8001478:	b480      	push	{r7}
 800147a:	b083      	sub	sp, #12
 800147c:	af00      	add	r7, sp, #0
 800147e:	4603      	mov	r3, r0
 8001480:	71fb      	strb	r3, [r7, #7]
    adf_config.r0.r_divider = r;
 8001482:	4a04      	ldr	r2, [pc, #16]	@ (8001494 <adf_set_r_divider+0x1c>)
 8001484:	79fb      	ldrb	r3, [r7, #7]
 8001486:	7093      	strb	r3, [r2, #2]
}
 8001488:	bf00      	nop
 800148a:	370c      	adds	r7, #12
 800148c:	46bd      	mov	sp, r7
 800148e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001492:	4770      	bx	lr
 8001494:	20000290 	.word	0x20000290

08001498 <adf_set_frequency>:




void adf_set_frequency(float freq)
{
 8001498:	b580      	push	{r7, lr}
 800149a:	b086      	sub	sp, #24
 800149c:	af00      	add	r7, sp, #0
 800149e:	ed87 0a01 	vstr	s0, [r7, #4]

	float latch = freq / ADF_CLOCK;   //changed for 9MHz input
 80014a2:	ed97 7a01 	vldr	s14, [r7, #4]
 80014a6:	eddf 6a18 	vldr	s13, [pc, #96]	@ 8001508 <adf_set_frequency+0x70>
 80014aa:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014ae:	edc7 7a05 	vstr	s15, [r7, #20]
	uint32_t Nint = latch;
 80014b2:	edd7 7a05 	vldr	s15, [r7, #20]
 80014b6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80014ba:	ee17 3a90 	vmov	r3, s15
 80014be:	613b      	str	r3, [r7, #16]
	latch = latch - Nint;
 80014c0:	693b      	ldr	r3, [r7, #16]
 80014c2:	ee07 3a90 	vmov	s15, r3
 80014c6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80014ca:	ed97 7a05 	vldr	s14, [r7, #20]
 80014ce:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014d2:	edc7 7a05 	vstr	s15, [r7, #20]
	uint32_t Nfrac = latch * 4096;
 80014d6:	edd7 7a05 	vldr	s15, [r7, #20]
 80014da:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 800150c <adf_set_frequency+0x74>
 80014de:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014e2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80014e6:	ee17 3a90 	vmov	r3, s15
 80014ea:	60fb      	str	r3, [r7, #12]
	adf_set_n(Nint);
 80014ec:	693b      	ldr	r3, [r7, #16]
 80014ee:	b2db      	uxtb	r3, r3
 80014f0:	4618      	mov	r0, r3
 80014f2:	f000 f829 	bl	8001548 <adf_set_n>
	adf_set_m((uint16_t)Nfrac);
 80014f6:	68fb      	ldr	r3, [r7, #12]
 80014f8:	b29b      	uxth	r3, r3
 80014fa:	4618      	mov	r0, r3
 80014fc:	f000 f834 	bl	8001568 <adf_set_m>

}
 8001500:	bf00      	nop
 8001502:	3718      	adds	r7, #24
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}
 8001508:	4b095440 	.word	0x4b095440
 800150c:	45800000 	.word	0x45800000

08001510 <adf_4fsk_fone>:

void adf_4fsk_fone(uint8_t tone){
 8001510:	b580      	push	{r7, lr}
 8001512:	b084      	sub	sp, #16
 8001514:	af00      	add	r7, sp, #0
 8001516:	4603      	mov	r3, r0
 8001518:	71fb      	strb	r3, [r7, #7]
 * (consecutive registers does not need to be sent)
 * Frequency shifts smaller than calculated cannot be achieved, thus baudrate slower than 100bd
 * are not possible. Only multiplications of 100bd are alowed with standard tone spacings
 */

	uint16_t freq_corr_regist_tmp = adf_config.r0.frequency_error_correction;  // Temporarily store correction value, as we are going to change it
 800151a:	4b0a      	ldr	r3, [pc, #40]	@ (8001544 <adf_4fsk_fone+0x34>)
 800151c:	881b      	ldrh	r3, [r3, #0]
 800151e:	81fb      	strh	r3, [r7, #14]
	adf_config.r0.frequency_error_correction = adf_config.r0.frequency_error_correction + tone; //add tone space to current freq corr.
 8001520:	4b08      	ldr	r3, [pc, #32]	@ (8001544 <adf_4fsk_fone+0x34>)
 8001522:	881a      	ldrh	r2, [r3, #0]
 8001524:	79fb      	ldrb	r3, [r7, #7]
 8001526:	b29b      	uxth	r3, r3
 8001528:	4413      	add	r3, r2
 800152a:	b29a      	uxth	r2, r3
 800152c:	4b05      	ldr	r3, [pc, #20]	@ (8001544 <adf_4fsk_fone+0x34>)
 800152e:	801a      	strh	r2, [r3, #0]
	adf_write_register_zero();                                         //write reg0. no other registers have to be changed.
 8001530:	f7ff fe2c 	bl	800118c <adf_write_register_zero>
	adf_config.r0.frequency_error_correction = freq_corr_regist_tmp;  // restore original value
 8001534:	4a03      	ldr	r2, [pc, #12]	@ (8001544 <adf_4fsk_fone+0x34>)
 8001536:	89fb      	ldrh	r3, [r7, #14]
 8001538:	8013      	strh	r3, [r2, #0]


}
 800153a:	bf00      	nop
 800153c:	3710      	adds	r7, #16
 800153e:	46bd      	mov	sp, r7
 8001540:	bd80      	pop	{r7, pc}
 8001542:	bf00      	nop
 8001544:	20000290 	.word	0x20000290

08001548 <adf_set_n>:

void adf_set_n(uint8_t n) {
 8001548:	b480      	push	{r7}
 800154a:	b083      	sub	sp, #12
 800154c:	af00      	add	r7, sp, #0
 800154e:	4603      	mov	r3, r0
 8001550:	71fb      	strb	r3, [r7, #7]
    adf_config.r1.integer_n = n;
 8001552:	4a04      	ldr	r2, [pc, #16]	@ (8001564 <adf_set_n+0x1c>)
 8001554:	79fb      	ldrb	r3, [r7, #7]
 8001556:	7293      	strb	r3, [r2, #10]
}
 8001558:	bf00      	nop
 800155a:	370c      	adds	r7, #12
 800155c:	46bd      	mov	sp, r7
 800155e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001562:	4770      	bx	lr
 8001564:	20000290 	.word	0x20000290

08001568 <adf_set_m>:

void adf_set_m(uint16_t m) {
 8001568:	b480      	push	{r7}
 800156a:	b083      	sub	sp, #12
 800156c:	af00      	add	r7, sp, #0
 800156e:	4603      	mov	r3, r0
 8001570:	80fb      	strh	r3, [r7, #6]
    adf_config.r1.fractional_n = m;
 8001572:	4a04      	ldr	r2, [pc, #16]	@ (8001584 <adf_set_m+0x1c>)
 8001574:	88fb      	ldrh	r3, [r7, #6]
 8001576:	8113      	strh	r3, [r2, #8]
}
 8001578:	bf00      	nop
 800157a:	370c      	adds	r7, #12
 800157c:	46bd      	mov	sp, r7
 800157e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001582:	4770      	bx	lr
 8001584:	20000290 	.word	0x20000290

08001588 <adf_set_pa_level>:

void adf_set_pa_level(uint8_t level) {
 8001588:	b480      	push	{r7}
 800158a:	b083      	sub	sp, #12
 800158c:	af00      	add	r7, sp, #0
 800158e:	4603      	mov	r3, r0
 8001590:	71fb      	strb	r3, [r7, #7]
    adf_config.r2.power_amplifier_level = level;
 8001592:	4a04      	ldr	r2, [pc, #16]	@ (80015a4 <adf_set_pa_level+0x1c>)
 8001594:	79fb      	ldrb	r3, [r7, #7]
 8001596:	7393      	strb	r3, [r2, #14]
}
 8001598:	bf00      	nop
 800159a:	370c      	adds	r7, #12
 800159c:	46bd      	mov	sp, r7
 800159e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a2:	4770      	bx	lr
 80015a4:	20000290 	.word	0x20000290

080015a8 <adf_set_pll_enable>:

void adf_set_pll_enable(uint8_t enable) {
 80015a8:	b480      	push	{r7}
 80015aa:	b083      	sub	sp, #12
 80015ac:	af00      	add	r7, sp, #0
 80015ae:	4603      	mov	r3, r0
 80015b0:	71fb      	strb	r3, [r7, #7]
    adf_config.r3.pll_enable = enable;
 80015b2:	4a04      	ldr	r2, [pc, #16]	@ (80015c4 <adf_set_pll_enable+0x1c>)
 80015b4:	79fb      	ldrb	r3, [r7, #7]
 80015b6:	7513      	strb	r3, [r2, #20]
}
 80015b8:	bf00      	nop
 80015ba:	370c      	adds	r7, #12
 80015bc:	46bd      	mov	sp, r7
 80015be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015c2:	4770      	bx	lr
 80015c4:	20000290 	.word	0x20000290

080015c8 <adf_set_pa_enable>:

void adf_set_pa_enable(uint8_t enable) {
 80015c8:	b480      	push	{r7}
 80015ca:	b083      	sub	sp, #12
 80015cc:	af00      	add	r7, sp, #0
 80015ce:	4603      	mov	r3, r0
 80015d0:	71fb      	strb	r3, [r7, #7]
    adf_config.r3.pa_enable = enable;
 80015d2:	4a04      	ldr	r2, [pc, #16]	@ (80015e4 <adf_set_pa_enable+0x1c>)
 80015d4:	79fb      	ldrb	r3, [r7, #7]
 80015d6:	7553      	strb	r3, [r2, #21]
}
 80015d8:	bf00      	nop
 80015da:	370c      	adds	r7, #12
 80015dc:	46bd      	mov	sp, r7
 80015de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e2:	4770      	bx	lr
 80015e4:	20000290 	.word	0x20000290

080015e8 <adf_setup>:

void adf_setup(void) {
 80015e8:	b580      	push	{r7, lr}
 80015ea:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(ADF_CE_GPIO_Port, ADF_CE_Pin, 1);
 80015ec:	2201      	movs	r2, #1
 80015ee:	2108      	movs	r1, #8
 80015f0:	4809      	ldr	r0, [pc, #36]	@ (8001618 <adf_setup+0x30>)
 80015f2:	f004 fc89 	bl	8005f08 <HAL_GPIO_WritePin>
    adf_reset_config();
 80015f6:	f7ff fcf5 	bl	8000fe4 <adf_reset_config>
    adf_set_r_divider(1);            // We will be using whole 9(or 8)MHz for freq reference for adf7012
 80015fa:	2001      	movs	r0, #1
 80015fc:	f7ff ff3c 	bl	8001478 <adf_set_r_divider>
    adf_set_frequency(QRG_CW);       // Temporarily set freq for CW - it is going to be changed later when turning on TX
 8001600:	ed9f 0a06 	vldr	s0, [pc, #24]	@ 800161c <adf_setup+0x34>
 8001604:	f7ff ff48 	bl	8001498 <adf_set_frequency>
    adf_set_pll_enable(ADF_ON);
 8001608:	2001      	movs	r0, #1
 800160a:	f7ff ffcd 	bl	80015a8 <adf_set_pll_enable>
    adf_write_config();
 800160e:	f7ff fdb1 	bl	8001174 <adf_write_config>
}
 8001612:	bf00      	nop
 8001614:	bd80      	pop	{r7, pc}
 8001616:	bf00      	nop
 8001618:	48000400 	.word	0x48000400
 800161c:	4dcf78cb 	.word	0x4dcf78cb

08001620 <adf_RF_on>:


void adf_RF_on(float freq, uint8_t power) {  //arguments are TX frequency (Hz) and power level (0-63)
 8001620:	b580      	push	{r7, lr}
 8001622:	b082      	sub	sp, #8
 8001624:	af00      	add	r7, sp, #0
 8001626:	ed87 0a01 	vstr	s0, [r7, #4]
 800162a:	4603      	mov	r3, r0
 800162c:	70fb      	strb	r3, [r7, #3]
	HAL_GPIO_WritePin(ADF_CE_GPIO_Port, ADF_CE_Pin, 1);
 800162e:	2201      	movs	r2, #1
 8001630:	2108      	movs	r1, #8
 8001632:	480d      	ldr	r0, [pc, #52]	@ (8001668 <adf_RF_on+0x48>)
 8001634:	f004 fc68 	bl	8005f08 <HAL_GPIO_WritePin>
	adf_set_frequency(freq);
 8001638:	ed97 0a01 	vldr	s0, [r7, #4]
 800163c:	f7ff ff2c 	bl	8001498 <adf_set_frequency>
	adf_set_pa_enable(ADF_ON);
 8001640:	2001      	movs	r0, #1
 8001642:	f7ff ffc1 	bl	80015c8 <adf_set_pa_enable>
    adf_set_pa_level(power);
 8001646:	78fb      	ldrb	r3, [r7, #3]
 8001648:	4618      	mov	r0, r3
 800164a:	f7ff ff9d 	bl	8001588 <adf_set_pa_level>
    adf_write_config();
 800164e:	f7ff fd91 	bl	8001174 <adf_write_config>
    HAL_GPIO_WritePin(RF_Boost_GPIO_Port, RF_Boost_Pin, !RF_BOOST_ACTIVE);  //RF boost 0 - is ON
 8001652:	2201      	movs	r2, #1
 8001654:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001658:	4803      	ldr	r0, [pc, #12]	@ (8001668 <adf_RF_on+0x48>)
 800165a:	f004 fc55 	bl	8005f08 <HAL_GPIO_WritePin>
    //adf_write_register_three();
}
 800165e:	bf00      	nop
 8001660:	3708      	adds	r7, #8
 8001662:	46bd      	mov	sp, r7
 8001664:	bd80      	pop	{r7, pc}
 8001666:	bf00      	nop
 8001668:	48000400 	.word	0x48000400

0800166c <adf_RF_off>:

void adf_RF_off(void) {
 800166c:	b580      	push	{r7, lr}
 800166e:	af00      	add	r7, sp, #0
    adf_set_pa_enable(ADF_OFF);
 8001670:	2000      	movs	r0, #0
 8001672:	f7ff ffa9 	bl	80015c8 <adf_set_pa_enable>
    adf_set_pa_level(0);
 8001676:	2000      	movs	r0, #0
 8001678:	f7ff ff86 	bl	8001588 <adf_set_pa_level>
    adf_write_config();
 800167c:	f7ff fd7a 	bl	8001174 <adf_write_config>
    HAL_GPIO_WritePin(RF_Boost_GPIO_Port, RF_Boost_Pin, 1); //boost pin high for RF power off. Reduces power by ~15dB
 8001680:	2201      	movs	r2, #1
 8001682:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001686:	4802      	ldr	r0, [pc, #8]	@ (8001690 <adf_RF_off+0x24>)
 8001688:	f004 fc3e 	bl	8005f08 <HAL_GPIO_WritePin>
}
 800168c:	bf00      	nop
 800168e:	bd80      	pop	{r7, pc}
 8001690:	48000400 	.word	0x48000400

08001694 <FSK4_stop_TX>:
uint8_t FSK_Active = 0;
char* buffer;
uint8_t buffer_len;


void FSK4_stop_TX() {
 8001694:	b580      	push	{r7, lr}
 8001696:	af00      	add	r7, sp, #0

	    TIM2->DIER &= ~(TIM_DIER_UIE); /* Disable the interrupt */
 8001698:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800169c:	68db      	ldr	r3, [r3, #12]
 800169e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80016a2:	f023 0301 	bic.w	r3, r3, #1
 80016a6:	60d3      	str	r3, [r2, #12]
		adf_RF_off();   //turn TX off
 80016a8:	f7ff ffe0 	bl	800166c <adf_RF_off>
		FSK_Active = 0;
 80016ac:	4b02      	ldr	r3, [pc, #8]	@ (80016b8 <FSK4_stop_TX+0x24>)
 80016ae:	2200      	movs	r2, #0
 80016b0:	701a      	strb	r2, [r3, #0]
	}
 80016b2:	bf00      	nop
 80016b4:	bd80      	pop	{r7, pc}
 80016b6:	bf00      	nop
 80016b8:	200002b4 	.word	0x200002b4

080016bc <FSK4_send_2bit>:


void FSK4_send_2bit(uint8_t bits_to_send) {  //sends 2 bit value
 80016bc:	b580      	push	{r7, lr}
 80016be:	b082      	sub	sp, #8
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	4603      	mov	r3, r0
 80016c4:	71fb      	strb	r3, [r7, #7]
	bits_to_send = (bits_to_send & 3);    //make sure to take only 2 last bites of value - we cannot send more than 2 bits at the same time
 80016c6:	79fb      	ldrb	r3, [r7, #7]
 80016c8:	f003 0303 	and.w	r3, r3, #3
 80016cc:	71fb      	strb	r3, [r7, #7]
	adf_4fsk_fone(bits_to_send * FSK4_SPACE_MULTIPLIER);
 80016ce:	79fb      	ldrb	r3, [r7, #7]
 80016d0:	4618      	mov	r0, r3
 80016d2:	f7ff ff1d 	bl	8001510 <adf_4fsk_fone>
}
 80016d6:	bf00      	nop
 80016d8:	3708      	adds	r7, #8
 80016da:	46bd      	mov	sp, r7
 80016dc:	bd80      	pop	{r7, pc}
	...

080016e0 <FSK4_is_active>:

uint8_t FSK4_is_active() {  //returns 1 if transmitter is active for 4FSK
 80016e0:	b480      	push	{r7}
 80016e2:	af00      	add	r7, sp, #0

	return  FSK_Active;
 80016e4:	4b03      	ldr	r3, [pc, #12]	@ (80016f4 <FSK4_is_active+0x14>)
 80016e6:	781b      	ldrb	r3, [r3, #0]
}
 80016e8:	4618      	mov	r0, r3
 80016ea:	46bd      	mov	sp, r7
 80016ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f0:	4770      	bx	lr
 80016f2:	bf00      	nop
 80016f4:	200002b4 	.word	0x200002b4

080016f8 <FSK4_write>:





void FSK4_write(char* buff, uint16_t address_2bit) {
 80016f8:	b580      	push	{r7, lr}
 80016fa:	b086      	sub	sp, #24
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	6078      	str	r0, [r7, #4]
 8001700:	460b      	mov	r3, r1
 8001702:	807b      	strh	r3, [r7, #2]
	int full_bytes = address_2bit / 4 ;  //number of full bytes of address
 8001704:	887b      	ldrh	r3, [r7, #2]
 8001706:	089b      	lsrs	r3, r3, #2
 8001708:	b29b      	uxth	r3, r3
 800170a:	617b      	str	r3, [r7, #20]
	int fraction_part = address_2bit - (full_bytes * 4); // fraction part of address (number of 2bytes offset)
 800170c:	887a      	ldrh	r2, [r7, #2]
 800170e:	697b      	ldr	r3, [r7, #20]
 8001710:	009b      	lsls	r3, r3, #2
 8001712:	1ad3      	subs	r3, r2, r3
 8001714:	613b      	str	r3, [r7, #16]
	uint8_t byte_to_send = (buff[full_bytes] >> (6-(fraction_part * 2)) & 3);  // returns 2 bytes of buffer at address
 8001716:	697b      	ldr	r3, [r7, #20]
 8001718:	687a      	ldr	r2, [r7, #4]
 800171a:	4413      	add	r3, r2
 800171c:	781b      	ldrb	r3, [r3, #0]
 800171e:	461a      	mov	r2, r3
 8001720:	693b      	ldr	r3, [r7, #16]
 8001722:	f1c3 0303 	rsb	r3, r3, #3
 8001726:	005b      	lsls	r3, r3, #1
 8001728:	fa42 f303 	asr.w	r3, r2, r3
 800172c:	b2db      	uxtb	r3, r3
 800172e:	f003 0303 	and.w	r3, r3, #3
 8001732:	73fb      	strb	r3, [r7, #15]
	FSK4_send_2bit(byte_to_send);  // sends those 2 bytes
 8001734:	7bfb      	ldrb	r3, [r7, #15]
 8001736:	4618      	mov	r0, r3
 8001738:	f7ff ffc0 	bl	80016bc <FSK4_send_2bit>
}
 800173c:	bf00      	nop
 800173e:	3718      	adds	r7, #24
 8001740:	46bd      	mov	sp, r7
 8001742:	bd80      	pop	{r7, pc}

08001744 <FSK4_timer_handler>:


void FSK4_timer_handler() {   //called out by interrupt handling procedure in main
 8001744:	b580      	push	{r7, lr}
 8001746:	b082      	sub	sp, #8
 8001748:	af00      	add	r7, sp, #0



	  TIM2->CNT = 0;  //reset timer  - make sure to have it at the beginning of procedure, otherwise there will be some delays.
 800174a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800174e:	2200      	movs	r2, #0
 8001750:	625a      	str	r2, [r3, #36]	@ 0x24
	  if (current_2_bit < (FSK4_HEADER_LENGTH * 4)) {  //we are still in header
 8001752:	4b19      	ldr	r3, [pc, #100]	@ (80017b8 <FSK4_timer_handler+0x74>)
 8001754:	881b      	ldrh	r3, [r3, #0]
 8001756:	2b1f      	cmp	r3, #31
 8001758:	d80f      	bhi.n	800177a <FSK4_timer_handler+0x36>
		  uint8_t tmp_offset = ((0xD8 >> current_2_bit % 4) &  3);
 800175a:	4b17      	ldr	r3, [pc, #92]	@ (80017b8 <FSK4_timer_handler+0x74>)
 800175c:	881b      	ldrh	r3, [r3, #0]
 800175e:	f003 0303 	and.w	r3, r3, #3
 8001762:	22d8      	movs	r2, #216	@ 0xd8
 8001764:	fa42 f303 	asr.w	r3, r2, r3
 8001768:	b2db      	uxtb	r3, r3
 800176a:	f003 0303 	and.w	r3, r3, #3
 800176e:	71fb      	strb	r3, [r7, #7]

		  FSK4_send_2bit(tmp_offset);
 8001770:	79fb      	ldrb	r3, [r7, #7]
 8001772:	4618      	mov	r0, r3
 8001774:	f7ff ffa2 	bl	80016bc <FSK4_send_2bit>
 8001778:	e009      	b.n	800178e <FSK4_timer_handler+0x4a>
	  }
	  else {
		  FSK4_write(buffer, (current_2_bit-(FSK4_HEADER_LENGTH * 4)));   //send 2 bits of data from address of current_2_bit * 2
 800177a:	4b10      	ldr	r3, [pc, #64]	@ (80017bc <FSK4_timer_handler+0x78>)
 800177c:	681a      	ldr	r2, [r3, #0]
 800177e:	4b0e      	ldr	r3, [pc, #56]	@ (80017b8 <FSK4_timer_handler+0x74>)
 8001780:	881b      	ldrh	r3, [r3, #0]
 8001782:	3b20      	subs	r3, #32
 8001784:	b29b      	uxth	r3, r3
 8001786:	4619      	mov	r1, r3
 8001788:	4610      	mov	r0, r2
 800178a:	f7ff ffb5 	bl	80016f8 <FSK4_write>
	  }
	  current_2_bit++;
 800178e:	4b0a      	ldr	r3, [pc, #40]	@ (80017b8 <FSK4_timer_handler+0x74>)
 8001790:	881b      	ldrh	r3, [r3, #0]
 8001792:	3301      	adds	r3, #1
 8001794:	b29a      	uxth	r2, r3
 8001796:	4b08      	ldr	r3, [pc, #32]	@ (80017b8 <FSK4_timer_handler+0x74>)
 8001798:	801a      	strh	r2, [r3, #0]

	  if (current_2_bit > ((buffer_len + FSK4_HEADER_LENGTH) * 4)) { FSK4_stop_TX();}          //if we got to the end of data - finish transmitting
 800179a:	4b07      	ldr	r3, [pc, #28]	@ (80017b8 <FSK4_timer_handler+0x74>)
 800179c:	881b      	ldrh	r3, [r3, #0]
 800179e:	461a      	mov	r2, r3
 80017a0:	4b07      	ldr	r3, [pc, #28]	@ (80017c0 <FSK4_timer_handler+0x7c>)
 80017a2:	781b      	ldrb	r3, [r3, #0]
 80017a4:	3308      	adds	r3, #8
 80017a6:	009b      	lsls	r3, r3, #2
 80017a8:	429a      	cmp	r2, r3
 80017aa:	dd01      	ble.n	80017b0 <FSK4_timer_handler+0x6c>
 80017ac:	f7ff ff72 	bl	8001694 <FSK4_stop_TX>
	  //TIM2->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));  // Disable the TIM Counter
	  //TIM2->ARR = timer1StartValue;  //set timer counter max value to pre-set value for baudrate (auto-reload register)
	  //TIM2->CNT = 0;  //reset timer
	  //TIM2->CR1 |= TIM_CR1_CEN; //enable timer again

}
 80017b0:	bf00      	nop
 80017b2:	3708      	adds	r7, #8
 80017b4:	46bd      	mov	sp, r7
 80017b6:	bd80      	pop	{r7, pc}
 80017b8:	200002b2 	.word	0x200002b2
 80017bc:	200002b8 	.word	0x200002b8
 80017c0:	200002bc 	.word	0x200002bc

080017c4 <FSK4_start_TX>:



void FSK4_start_TX(char* buff, uint8_t len) {
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b084      	sub	sp, #16
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
 80017cc:	460b      	mov	r3, r1
 80017ce:	70fb      	strb	r3, [r7, #3]
		buffer = buff;
 80017d0:	4a1b      	ldr	r2, [pc, #108]	@ (8001840 <FSK4_start_TX+0x7c>)
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	6013      	str	r3, [r2, #0]
		buffer_len = len;
 80017d6:	4a1b      	ldr	r2, [pc, #108]	@ (8001844 <FSK4_start_TX+0x80>)
 80017d8:	78fb      	ldrb	r3, [r7, #3]
 80017da:	7013      	strb	r3, [r2, #0]
		//adf_setup();
	    current_2_bit=0;                                                   //reset counter of current position of bit address
 80017dc:	4b1a      	ldr	r3, [pc, #104]	@ (8001848 <FSK4_start_TX+0x84>)
 80017de:	2200      	movs	r2, #0
 80017e0:	801a      	strh	r2, [r3, #0]
	    adf_RF_on(QRG_FSK4, PA_FSK4);                                   //turn on radio TX
 80017e2:	201e      	movs	r0, #30
 80017e4:	ed9f 0a19 	vldr	s0, [pc, #100]	@ 800184c <FSK4_start_TX+0x88>
 80017e8:	f7ff ff1a 	bl	8001620 <adf_RF_on>
	    FSK_Active = 1;                                                    //change status
 80017ec:	4b18      	ldr	r3, [pc, #96]	@ (8001850 <FSK4_start_TX+0x8c>)
 80017ee:	2201      	movs	r2, #1
 80017f0:	701a      	strb	r2, [r3, #0]
	    TIM2->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));                 // Disable the TIM Counter
 80017f2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80017f6:	681a      	ldr	r2, [r3, #0]
 80017f8:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
 80017fc:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8001800:	4013      	ands	r3, r2
 8001802:	600b      	str	r3, [r1, #0]
	  	uint16_t timer2StartValue = (100000 / FSK4_BAUD) - 1;              //timer value calculated according to baud rate 999 for 100bd
 8001804:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8001808:	81fb      	strh	r3, [r7, #14]
	    TIM2->ARR = timer2StartValue;                           //set timer counter max value to pre-set value for baudrate (auto-reload register)
 800180a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800180e:	89fb      	ldrh	r3, [r7, #14]
 8001810:	62d3      	str	r3, [r2, #44]	@ 0x2c
	  	TIM2->CR1 |= TIM_CR1_CEN;                               //enable timer again
 8001812:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800181c:	f043 0301 	orr.w	r3, r3, #1
 8001820:	6013      	str	r3, [r2, #0]
	    TIM2->DIER |= TIM_DIER_UIE;                             //Enable the interrupt
 8001822:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001826:	68db      	ldr	r3, [r3, #12]
 8001828:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800182c:	f043 0301 	orr.w	r3, r3, #1
 8001830:	60d3      	str	r3, [r2, #12]
	    FSK4_timer_handler(buff);                           //force execution of procedure responsible for interrupt handling
 8001832:	6878      	ldr	r0, [r7, #4]
 8001834:	f7ff ff86 	bl	8001744 <FSK4_timer_handler>
}
 8001838:	bf00      	nop
 800183a:	3710      	adds	r7, #16
 800183c:	46bd      	mov	sp, r7
 800183e:	bd80      	pop	{r7, pc}
 8001840:	200002b8 	.word	0x200002b8
 8001844:	200002bc 	.word	0x200002bc
 8001848:	200002b2 	.word	0x200002b2
 800184c:	4dcf78cb 	.word	0x4dcf78cb
 8001850:	200002b4 	.word	0x200002b4

08001854 <crc16>:
 8001854:	b480      	push	{r7}
 8001856:	b085      	sub	sp, #20
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
 800185c:	460b      	mov	r3, r1
 800185e:	70fb      	strb	r3, [r7, #3]
 8001860:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001864:	81fb      	strh	r3, [r7, #14]
 8001866:	2300      	movs	r3, #0
 8001868:	60bb      	str	r3, [r7, #8]
 800186a:	e027      	b.n	80018bc <crc16+0x68>
 800186c:	68bb      	ldr	r3, [r7, #8]
 800186e:	3301      	adds	r3, #1
 8001870:	60bb      	str	r3, [r7, #8]
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	1c5a      	adds	r2, r3, #1
 8001876:	607a      	str	r2, [r7, #4]
 8001878:	781b      	ldrb	r3, [r3, #0]
 800187a:	021b      	lsls	r3, r3, #8
 800187c:	b21a      	sxth	r2, r3
 800187e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001882:	4053      	eors	r3, r2
 8001884:	b21b      	sxth	r3, r3
 8001886:	81fb      	strh	r3, [r7, #14]
 8001888:	2300      	movs	r3, #0
 800188a:	737b      	strb	r3, [r7, #13]
 800188c:	e013      	b.n	80018b6 <crc16+0x62>
 800188e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001892:	2b00      	cmp	r3, #0
 8001894:	da09      	bge.n	80018aa <crc16+0x56>
 8001896:	89fb      	ldrh	r3, [r7, #14]
 8001898:	005b      	lsls	r3, r3, #1
 800189a:	b21b      	sxth	r3, r3
 800189c:	f483 5381 	eor.w	r3, r3, #4128	@ 0x1020
 80018a0:	f083 0301 	eor.w	r3, r3, #1
 80018a4:	b21b      	sxth	r3, r3
 80018a6:	81fb      	strh	r3, [r7, #14]
 80018a8:	e002      	b.n	80018b0 <crc16+0x5c>
 80018aa:	89fb      	ldrh	r3, [r7, #14]
 80018ac:	005b      	lsls	r3, r3, #1
 80018ae:	81fb      	strh	r3, [r7, #14]
 80018b0:	7b7b      	ldrb	r3, [r7, #13]
 80018b2:	3301      	adds	r3, #1
 80018b4:	737b      	strb	r3, [r7, #13]
 80018b6:	7b7b      	ldrb	r3, [r7, #13]
 80018b8:	2b07      	cmp	r3, #7
 80018ba:	d9e8      	bls.n	800188e <crc16+0x3a>
 80018bc:	78fb      	ldrb	r3, [r7, #3]
 80018be:	68ba      	ldr	r2, [r7, #8]
 80018c0:	429a      	cmp	r2, r3
 80018c2:	dbd3      	blt.n	800186c <crc16+0x18>
 80018c4:	89fb      	ldrh	r3, [r7, #14]
 80018c6:	4618      	mov	r0, r3
 80018c8:	3714      	adds	r7, #20
 80018ca:	46bd      	mov	sp, r7
 80018cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d0:	4770      	bx	lr
	...

080018d4 <interleave>:
 80018d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018d8:	b093      	sub	sp, #76	@ 0x4c
 80018da:	af00      	add	r7, sp, #0
 80018dc:	60f8      	str	r0, [r7, #12]
 80018de:	60b9      	str	r1, [r7, #8]
 80018e0:	607a      	str	r2, [r7, #4]
 80018e2:	466b      	mov	r3, sp
 80018e4:	461e      	mov	r6, r3
 80018e6:	68bb      	ldr	r3, [r7, #8]
 80018e8:	b29b      	uxth	r3, r3
 80018ea:	00db      	lsls	r3, r3, #3
 80018ec:	877b      	strh	r3, [r7, #58]	@ 0x3a
 80018ee:	68b9      	ldr	r1, [r7, #8]
 80018f0:	1e4b      	subs	r3, r1, #1
 80018f2:	637b      	str	r3, [r7, #52]	@ 0x34
 80018f4:	460a      	mov	r2, r1
 80018f6:	2300      	movs	r3, #0
 80018f8:	4690      	mov	r8, r2
 80018fa:	4699      	mov	r9, r3
 80018fc:	f04f 0200 	mov.w	r2, #0
 8001900:	f04f 0300 	mov.w	r3, #0
 8001904:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8001908:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800190c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001910:	460a      	mov	r2, r1
 8001912:	2300      	movs	r3, #0
 8001914:	4614      	mov	r4, r2
 8001916:	461d      	mov	r5, r3
 8001918:	f04f 0200 	mov.w	r2, #0
 800191c:	f04f 0300 	mov.w	r3, #0
 8001920:	00eb      	lsls	r3, r5, #3
 8001922:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001926:	00e2      	lsls	r2, r4, #3
 8001928:	460b      	mov	r3, r1
 800192a:	3307      	adds	r3, #7
 800192c:	08db      	lsrs	r3, r3, #3
 800192e:	00db      	lsls	r3, r3, #3
 8001930:	ebad 0d03 	sub.w	sp, sp, r3
 8001934:	466b      	mov	r3, sp
 8001936:	3300      	adds	r3, #0
 8001938:	633b      	str	r3, [r7, #48]	@ 0x30
 800193a:	68bb      	ldr	r3, [r7, #8]
 800193c:	461a      	mov	r2, r3
 800193e:	2100      	movs	r1, #0
 8001940:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8001942:	f008 febc 	bl	800a6be <memset>
 8001946:	2301      	movs	r3, #1
 8001948:	647b      	str	r3, [r7, #68]	@ 0x44
 800194a:	234d      	movs	r3, #77	@ 0x4d
 800194c:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 800194e:	e002      	b.n	8001956 <interleave+0x82>
 8001950:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001952:	3301      	adds	r3, #1
 8001954:	647b      	str	r3, [r7, #68]	@ 0x44
 8001956:	4a33      	ldr	r2, [pc, #204]	@ (8001a24 <interleave+0x150>)
 8001958:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800195a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800195e:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 8001960:	429a      	cmp	r2, r3
 8001962:	d903      	bls.n	800196c <interleave+0x98>
 8001964:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8001966:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001968:	429a      	cmp	r2, r3
 800196a:	d3f1      	bcc.n	8001950 <interleave+0x7c>
 800196c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800196e:	3b01      	subs	r3, #1
 8001970:	4a2c      	ldr	r2, [pc, #176]	@ (8001a24 <interleave+0x150>)
 8001972:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001976:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001978:	2300      	movs	r3, #0
 800197a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800197c:	e041      	b.n	8001a02 <interleave+0x12e>
 800197e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001980:	647b      	str	r3, [r7, #68]	@ 0x44
 8001982:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001984:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001986:	fb02 f303 	mul.w	r3, r2, r3
 800198a:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
 800198c:	fbb3 f1f2 	udiv	r1, r3, r2
 8001990:	fb01 f202 	mul.w	r2, r1, r2
 8001994:	1a9b      	subs	r3, r3, r2
 8001996:	643b      	str	r3, [r7, #64]	@ 0x40
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	2b00      	cmp	r3, #0
 800199c:	d005      	beq.n	80019aa <interleave+0xd6>
 800199e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80019a0:	84fb      	strh	r3, [r7, #38]	@ 0x26
 80019a2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80019a4:	643b      	str	r3, [r7, #64]	@ 0x40
 80019a6:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 80019a8:	647b      	str	r3, [r7, #68]	@ 0x44
 80019aa:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80019ac:	08db      	lsrs	r3, r3, #3
 80019ae:	623b      	str	r3, [r7, #32]
 80019b0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80019b2:	f003 0307 	and.w	r3, r3, #7
 80019b6:	61fb      	str	r3, [r7, #28]
 80019b8:	68fa      	ldr	r2, [r7, #12]
 80019ba:	6a3b      	ldr	r3, [r7, #32]
 80019bc:	4413      	add	r3, r2
 80019be:	781b      	ldrb	r3, [r3, #0]
 80019c0:	461a      	mov	r2, r3
 80019c2:	69fb      	ldr	r3, [r7, #28]
 80019c4:	fa42 f303 	asr.w	r3, r2, r3
 80019c8:	f003 0301 	and.w	r3, r3, #1
 80019cc:	61bb      	str	r3, [r7, #24]
 80019ce:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80019d0:	08db      	lsrs	r3, r3, #3
 80019d2:	617b      	str	r3, [r7, #20]
 80019d4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80019d6:	f003 0307 	and.w	r3, r3, #7
 80019da:	613b      	str	r3, [r7, #16]
 80019dc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80019de:	697b      	ldr	r3, [r7, #20]
 80019e0:	4413      	add	r3, r2
 80019e2:	781a      	ldrb	r2, [r3, #0]
 80019e4:	69b9      	ldr	r1, [r7, #24]
 80019e6:	693b      	ldr	r3, [r7, #16]
 80019e8:	fa01 f303 	lsl.w	r3, r1, r3
 80019ec:	b2db      	uxtb	r3, r3
 80019ee:	4313      	orrs	r3, r2
 80019f0:	b2d9      	uxtb	r1, r3
 80019f2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80019f4:	697b      	ldr	r3, [r7, #20]
 80019f6:	4413      	add	r3, r2
 80019f8:	460a      	mov	r2, r1
 80019fa:	701a      	strb	r2, [r3, #0]
 80019fc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80019fe:	3301      	adds	r3, #1
 8001a00:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001a02:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8001a04:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8001a06:	429a      	cmp	r2, r3
 8001a08:	d3b9      	bcc.n	800197e <interleave+0xaa>
 8001a0a:	68bb      	ldr	r3, [r7, #8]
 8001a0c:	461a      	mov	r2, r3
 8001a0e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8001a10:	68f8      	ldr	r0, [r7, #12]
 8001a12:	f008 ff70 	bl	800a8f6 <memcpy>
 8001a16:	46b5      	mov	sp, r6
 8001a18:	bf00      	nop
 8001a1a:	374c      	adds	r7, #76	@ 0x4c
 8001a1c:	46bd      	mov	sp, r7
 8001a1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a22:	bf00      	nop
 8001a24:	20000004 	.word	0x20000004

08001a28 <scramble>:
 8001a28:	b480      	push	{r7}
 8001a2a:	b08d      	sub	sp, #52	@ 0x34
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	6078      	str	r0, [r7, #4]
 8001a30:	6039      	str	r1, [r7, #0]
 8001a32:	683b      	ldr	r3, [r7, #0]
 8001a34:	00db      	lsls	r3, r3, #3
 8001a36:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a38:	f44f 4395 	mov.w	r3, #19072	@ 0x4a80
 8001a3c:	857b      	strh	r3, [r7, #42]	@ 0x2a
 8001a3e:	2300      	movs	r3, #0
 8001a40:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001a42:	e05c      	b.n	8001afe <scramble+0xd6>
 8001a44:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001a46:	105b      	asrs	r3, r3, #1
 8001a48:	b21a      	sxth	r2, r3
 8001a4a:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 8001a4e:	4053      	eors	r3, r2
 8001a50:	b21b      	sxth	r3, r3
 8001a52:	b29b      	uxth	r3, r3
 8001a54:	f003 0301 	and.w	r3, r3, #1
 8001a58:	847b      	strh	r3, [r7, #34]	@ 0x22
 8001a5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	da00      	bge.n	8001a62 <scramble+0x3a>
 8001a60:	3307      	adds	r3, #7
 8001a62:	10db      	asrs	r3, r3, #3
 8001a64:	61fb      	str	r3, [r7, #28]
 8001a66:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001a68:	425a      	negs	r2, r3
 8001a6a:	f003 0307 	and.w	r3, r3, #7
 8001a6e:	f002 0207 	and.w	r2, r2, #7
 8001a72:	bf58      	it	pl
 8001a74:	4253      	negpl	r3, r2
 8001a76:	61bb      	str	r3, [r7, #24]
 8001a78:	69fb      	ldr	r3, [r7, #28]
 8001a7a:	687a      	ldr	r2, [r7, #4]
 8001a7c:	4413      	add	r3, r2
 8001a7e:	781b      	ldrb	r3, [r3, #0]
 8001a80:	461a      	mov	r2, r3
 8001a82:	69bb      	ldr	r3, [r7, #24]
 8001a84:	fa42 f303 	asr.w	r3, r2, r3
 8001a88:	f003 0301 	and.w	r3, r3, #1
 8001a8c:	617b      	str	r3, [r7, #20]
 8001a8e:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001a90:	697a      	ldr	r2, [r7, #20]
 8001a92:	4053      	eors	r3, r2
 8001a94:	613b      	str	r3, [r7, #16]
 8001a96:	2201      	movs	r2, #1
 8001a98:	69bb      	ldr	r3, [r7, #24]
 8001a9a:	fa02 f303 	lsl.w	r3, r2, r3
 8001a9e:	60fb      	str	r3, [r7, #12]
 8001aa0:	69fb      	ldr	r3, [r7, #28]
 8001aa2:	687a      	ldr	r2, [r7, #4]
 8001aa4:	4413      	add	r3, r2
 8001aa6:	781b      	ldrb	r3, [r3, #0]
 8001aa8:	b25a      	sxtb	r2, r3
 8001aaa:	68fb      	ldr	r3, [r7, #12]
 8001aac:	b25b      	sxtb	r3, r3
 8001aae:	43db      	mvns	r3, r3
 8001ab0:	b25b      	sxtb	r3, r3
 8001ab2:	4013      	ands	r3, r2
 8001ab4:	b259      	sxtb	r1, r3
 8001ab6:	69fb      	ldr	r3, [r7, #28]
 8001ab8:	687a      	ldr	r2, [r7, #4]
 8001aba:	4413      	add	r3, r2
 8001abc:	b2ca      	uxtb	r2, r1
 8001abe:	701a      	strb	r2, [r3, #0]
 8001ac0:	69fb      	ldr	r3, [r7, #28]
 8001ac2:	687a      	ldr	r2, [r7, #4]
 8001ac4:	4413      	add	r3, r2
 8001ac6:	781b      	ldrb	r3, [r3, #0]
 8001ac8:	b25a      	sxtb	r2, r3
 8001aca:	6939      	ldr	r1, [r7, #16]
 8001acc:	69bb      	ldr	r3, [r7, #24]
 8001ace:	fa01 f303 	lsl.w	r3, r1, r3
 8001ad2:	b25b      	sxtb	r3, r3
 8001ad4:	4313      	orrs	r3, r2
 8001ad6:	b259      	sxtb	r1, r3
 8001ad8:	69fb      	ldr	r3, [r7, #28]
 8001ada:	687a      	ldr	r2, [r7, #4]
 8001adc:	4413      	add	r3, r2
 8001ade:	b2ca      	uxtb	r2, r1
 8001ae0:	701a      	strb	r2, [r3, #0]
 8001ae2:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8001ae4:	085b      	lsrs	r3, r3, #1
 8001ae6:	857b      	strh	r3, [r7, #42]	@ 0x2a
 8001ae8:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8001aea:	039b      	lsls	r3, r3, #14
 8001aec:	b21a      	sxth	r2, r3
 8001aee:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	@ 0x2a
 8001af2:	4313      	orrs	r3, r2
 8001af4:	b21b      	sxth	r3, r3
 8001af6:	857b      	strh	r3, [r7, #42]	@ 0x2a
 8001af8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001afa:	3301      	adds	r3, #1
 8001afc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001afe:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8001b00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b02:	429a      	cmp	r2, r3
 8001b04:	db9e      	blt.n	8001a44 <scramble+0x1c>
 8001b06:	bf00      	nop
 8001b08:	bf00      	nop
 8001b0a:	3734      	adds	r7, #52	@ 0x34
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b12:	4770      	bx	lr

08001b14 <get_syndrome>:
 8001b14:	b480      	push	{r7}
 8001b16:	b085      	sub	sp, #20
 8001b18:	af00      	add	r7, sp, #0
 8001b1a:	6078      	str	r0, [r7, #4]
 8001b1c:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001b20:	60fb      	str	r3, [r7, #12]
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001b28:	db1a      	blt.n	8001b60 <get_syndrome+0x4c>
 8001b2a:	e015      	b.n	8001b58 <get_syndrome+0x44>
 8001b2c:	68fb      	ldr	r3, [r7, #12]
 8001b2e:	105b      	asrs	r3, r3, #1
 8001b30:	60fb      	str	r3, [r7, #12]
 8001b32:	68fa      	ldr	r2, [r7, #12]
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	4013      	ands	r3, r2
 8001b38:	2b00      	cmp	r3, #0
 8001b3a:	d0f7      	beq.n	8001b2c <get_syndrome+0x18>
 8001b3c:	68fb      	ldr	r3, [r7, #12]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	da01      	bge.n	8001b46 <get_syndrome+0x32>
 8001b42:	f203 73ff 	addw	r3, r3, #2047	@ 0x7ff
 8001b46:	12db      	asrs	r3, r3, #11
 8001b48:	461a      	mov	r2, r3
 8001b4a:	f640 4375 	movw	r3, #3189	@ 0xc75
 8001b4e:	fb02 f303 	mul.w	r3, r2, r3
 8001b52:	687a      	ldr	r2, [r7, #4]
 8001b54:	4053      	eors	r3, r2
 8001b56:	607b      	str	r3, [r7, #4]
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8001b5e:	d2e8      	bcs.n	8001b32 <get_syndrome+0x1e>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	4618      	mov	r0, r3
 8001b64:	3714      	adds	r7, #20
 8001b66:	46bd      	mov	sp, r7
 8001b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b6c:	4770      	bx	lr
	...

08001b70 <horus_l2_get_num_tx_data_bytes>:
 8001b70:	b480      	push	{r7}
 8001b72:	b087      	sub	sp, #28
 8001b74:	af00      	add	r7, sp, #0
 8001b76:	6078      	str	r0, [r7, #4]
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	00db      	lsls	r3, r3, #3
 8001b7c:	60fb      	str	r3, [r7, #12]
 8001b7e:	68fb      	ldr	r3, [r7, #12]
 8001b80:	4a1b      	ldr	r2, [pc, #108]	@ (8001bf0 <horus_l2_get_num_tx_data_bytes+0x80>)
 8001b82:	fb82 1203 	smull	r1, r2, r2, r3
 8001b86:	1052      	asrs	r2, r2, #1
 8001b88:	17db      	asrs	r3, r3, #31
 8001b8a:	1ad3      	subs	r3, r2, r3
 8001b8c:	617b      	str	r3, [r7, #20]
 8001b8e:	68f9      	ldr	r1, [r7, #12]
 8001b90:	4b17      	ldr	r3, [pc, #92]	@ (8001bf0 <horus_l2_get_num_tx_data_bytes+0x80>)
 8001b92:	fb83 2301 	smull	r2, r3, r3, r1
 8001b96:	105a      	asrs	r2, r3, #1
 8001b98:	17cb      	asrs	r3, r1, #31
 8001b9a:	1ad2      	subs	r2, r2, r3
 8001b9c:	4613      	mov	r3, r2
 8001b9e:	005b      	lsls	r3, r3, #1
 8001ba0:	4413      	add	r3, r2
 8001ba2:	009b      	lsls	r3, r3, #2
 8001ba4:	1aca      	subs	r2, r1, r3
 8001ba6:	2a00      	cmp	r2, #0
 8001ba8:	d002      	beq.n	8001bb0 <horus_l2_get_num_tx_data_bytes+0x40>
 8001baa:	697b      	ldr	r3, [r7, #20]
 8001bac:	3301      	adds	r3, #1
 8001bae:	617b      	str	r3, [r7, #20]
 8001bb0:	697a      	ldr	r2, [r7, #20]
 8001bb2:	4613      	mov	r3, r2
 8001bb4:	009b      	lsls	r3, r3, #2
 8001bb6:	4413      	add	r3, r2
 8001bb8:	005b      	lsls	r3, r3, #1
 8001bba:	4413      	add	r3, r2
 8001bbc:	461a      	mov	r2, r3
 8001bbe:	68fb      	ldr	r3, [r7, #12]
 8001bc0:	4413      	add	r3, r2
 8001bc2:	3310      	adds	r3, #16
 8001bc4:	60bb      	str	r3, [r7, #8]
 8001bc6:	68bb      	ldr	r3, [r7, #8]
 8001bc8:	2b00      	cmp	r3, #0
 8001bca:	da00      	bge.n	8001bce <horus_l2_get_num_tx_data_bytes+0x5e>
 8001bcc:	3307      	adds	r3, #7
 8001bce:	10db      	asrs	r3, r3, #3
 8001bd0:	613b      	str	r3, [r7, #16]
 8001bd2:	68bb      	ldr	r3, [r7, #8]
 8001bd4:	f003 0307 	and.w	r3, r3, #7
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	d002      	beq.n	8001be2 <horus_l2_get_num_tx_data_bytes+0x72>
 8001bdc:	693b      	ldr	r3, [r7, #16]
 8001bde:	3301      	adds	r3, #1
 8001be0:	613b      	str	r3, [r7, #16]
 8001be2:	693b      	ldr	r3, [r7, #16]
 8001be4:	4618      	mov	r0, r3
 8001be6:	371c      	adds	r7, #28
 8001be8:	46bd      	mov	sp, r7
 8001bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bee:	4770      	bx	lr
 8001bf0:	2aaaaaab 	.word	0x2aaaaaab

08001bf4 <horus_l2_encode_tx_packet>:
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b092      	sub	sp, #72	@ 0x48
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	60f8      	str	r0, [r7, #12]
 8001bfc:	60b9      	str	r1, [r7, #8]
 8001bfe:	607a      	str	r2, [r7, #4]
 8001c00:	68fb      	ldr	r3, [r7, #12]
 8001c02:	647b      	str	r3, [r7, #68]	@ 0x44
 8001c04:	6878      	ldr	r0, [r7, #4]
 8001c06:	f7ff ffb3 	bl	8001b70 <horus_l2_get_num_tx_data_bytes>
 8001c0a:	62b8      	str	r0, [r7, #40]	@ 0x28
 8001c0c:	4b84      	ldr	r3, [pc, #528]	@ (8001e20 <horus_l2_encode_tx_packet+0x22c>)
 8001c0e:	881a      	ldrh	r2, [r3, #0]
 8001c10:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001c12:	801a      	strh	r2, [r3, #0]
 8001c14:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001c16:	3302      	adds	r3, #2
 8001c18:	647b      	str	r3, [r7, #68]	@ 0x44
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	461a      	mov	r2, r3
 8001c1e:	68b9      	ldr	r1, [r7, #8]
 8001c20:	6c78      	ldr	r0, [r7, #68]	@ 0x44
 8001c22:	f008 fe68 	bl	800a8f6 <memcpy>
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001c2a:	4413      	add	r3, r2
 8001c2c:	647b      	str	r3, [r7, #68]	@ 0x44
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	00db      	lsls	r3, r3, #3
 8001c32:	627b      	str	r3, [r7, #36]	@ 0x24
 8001c34:	2300      	movs	r3, #0
 8001c36:	643b      	str	r3, [r7, #64]	@ 0x40
 8001c38:	2300      	movs	r3, #0
 8001c3a:	637b      	str	r3, [r7, #52]	@ 0x34
 8001c3c:	2300      	movs	r3, #0
 8001c3e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001c40:	2300      	movs	r3, #0
 8001c42:	633b      	str	r3, [r7, #48]	@ 0x30
 8001c44:	2300      	movs	r3, #0
 8001c46:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001c48:	e06a      	b.n	8001d20 <horus_l2_encode_tx_packet+0x12c>
 8001c4a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001c4c:	2b00      	cmp	r3, #0
 8001c4e:	da00      	bge.n	8001c52 <horus_l2_encode_tx_packet+0x5e>
 8001c50:	3307      	adds	r3, #7
 8001c52:	10db      	asrs	r3, r3, #3
 8001c54:	61bb      	str	r3, [r7, #24]
 8001c56:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001c58:	425a      	negs	r2, r3
 8001c5a:	f003 0307 	and.w	r3, r3, #7
 8001c5e:	f002 0207 	and.w	r2, r2, #7
 8001c62:	bf58      	it	pl
 8001c64:	4253      	negpl	r3, r2
 8001c66:	f1c3 0307 	rsb	r3, r3, #7
 8001c6a:	617b      	str	r3, [r7, #20]
 8001c6c:	69bb      	ldr	r3, [r7, #24]
 8001c6e:	68ba      	ldr	r2, [r7, #8]
 8001c70:	4413      	add	r3, r2
 8001c72:	781b      	ldrb	r3, [r3, #0]
 8001c74:	461a      	mov	r2, r3
 8001c76:	697b      	ldr	r3, [r7, #20]
 8001c78:	fa42 f303 	asr.w	r3, r2, r3
 8001c7c:	f003 0301 	and.w	r3, r3, #1
 8001c80:	613b      	str	r3, [r7, #16]
 8001c82:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8001c84:	3301      	adds	r3, #1
 8001c86:	643b      	str	r3, [r7, #64]	@ 0x40
 8001c88:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8001c8a:	693b      	ldr	r3, [r7, #16]
 8001c8c:	4313      	orrs	r3, r2
 8001c8e:	637b      	str	r3, [r7, #52]	@ 0x34
 8001c90:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001c92:	3301      	adds	r3, #1
 8001c94:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8001c96:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8001c98:	4b62      	ldr	r3, [pc, #392]	@ (8001e24 <horus_l2_encode_tx_packet+0x230>)
 8001c9a:	fb83 2301 	smull	r2, r3, r3, r1
 8001c9e:	105a      	asrs	r2, r3, #1
 8001ca0:	17cb      	asrs	r3, r1, #31
 8001ca2:	1ad2      	subs	r2, r2, r3
 8001ca4:	4613      	mov	r3, r2
 8001ca6:	005b      	lsls	r3, r3, #1
 8001ca8:	4413      	add	r3, r2
 8001caa:	009b      	lsls	r3, r3, #2
 8001cac:	1aca      	subs	r2, r1, r3
 8001cae:	2a00      	cmp	r2, #0
 8001cb0:	d003      	beq.n	8001cba <horus_l2_encode_tx_packet+0xc6>
 8001cb2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001cb4:	005b      	lsls	r3, r3, #1
 8001cb6:	637b      	str	r3, [r7, #52]	@ 0x34
 8001cb8:	e032      	b.n	8001d20 <horus_l2_encode_tx_packet+0x12c>
 8001cba:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001cbc:	02db      	lsls	r3, r3, #11
 8001cbe:	4618      	mov	r0, r3
 8001cc0:	f7ff ff28 	bl	8001b14 <get_syndrome>
 8001cc4:	6238      	str	r0, [r7, #32]
 8001cc6:	2300      	movs	r3, #0
 8001cc8:	637b      	str	r3, [r7, #52]	@ 0x34
 8001cca:	2300      	movs	r3, #0
 8001ccc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001cce:	e024      	b.n	8001d1a <horus_l2_encode_tx_packet+0x126>
 8001cd0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001cd2:	f1c3 030a 	rsb	r3, r3, #10
 8001cd6:	6a3a      	ldr	r2, [r7, #32]
 8001cd8:	fa42 f303 	asr.w	r3, r2, r3
 8001cdc:	f003 0301 	and.w	r3, r3, #1
 8001ce0:	61fb      	str	r3, [r7, #28]
 8001ce2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001ce4:	69fb      	ldr	r3, [r7, #28]
 8001ce6:	4313      	orrs	r3, r2
 8001ce8:	633b      	str	r3, [r7, #48]	@ 0x30
 8001cea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001cec:	3301      	adds	r3, #1
 8001cee:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001cf0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001cf2:	f003 0307 	and.w	r3, r3, #7
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	d003      	beq.n	8001d02 <horus_l2_encode_tx_packet+0x10e>
 8001cfa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001cfc:	005b      	lsls	r3, r3, #1
 8001cfe:	633b      	str	r3, [r7, #48]	@ 0x30
 8001d00:	e008      	b.n	8001d14 <horus_l2_encode_tx_packet+0x120>
 8001d02:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001d04:	b2da      	uxtb	r2, r3
 8001d06:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001d08:	701a      	strb	r2, [r3, #0]
 8001d0a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001d0c:	3301      	adds	r3, #1
 8001d0e:	647b      	str	r3, [r7, #68]	@ 0x44
 8001d10:	2300      	movs	r3, #0
 8001d12:	633b      	str	r3, [r7, #48]	@ 0x30
 8001d14:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001d16:	3301      	adds	r3, #1
 8001d18:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001d1a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001d1c:	2b0a      	cmp	r3, #10
 8001d1e:	ddd7      	ble.n	8001cd0 <horus_l2_encode_tx_packet+0xdc>
 8001d20:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8001d22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d24:	429a      	cmp	r2, r3
 8001d26:	db90      	blt.n	8001c4a <horus_l2_encode_tx_packet+0x56>
 8001d28:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8001d2a:	4b3e      	ldr	r3, [pc, #248]	@ (8001e24 <horus_l2_encode_tx_packet+0x230>)
 8001d2c:	fb83 2301 	smull	r2, r3, r3, r1
 8001d30:	105a      	asrs	r2, r3, #1
 8001d32:	17cb      	asrs	r3, r1, #31
 8001d34:	1ad2      	subs	r2, r2, r3
 8001d36:	4613      	mov	r3, r2
 8001d38:	005b      	lsls	r3, r3, #1
 8001d3a:	4413      	add	r3, r2
 8001d3c:	009b      	lsls	r3, r3, #2
 8001d3e:	1aca      	subs	r2, r1, r3
 8001d40:	2a00      	cmp	r2, #0
 8001d42:	d032      	beq.n	8001daa <horus_l2_encode_tx_packet+0x1b6>
 8001d44:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001d46:	105b      	asrs	r3, r3, #1
 8001d48:	637b      	str	r3, [r7, #52]	@ 0x34
 8001d4a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001d4c:	031b      	lsls	r3, r3, #12
 8001d4e:	4618      	mov	r0, r3
 8001d50:	f7ff fee0 	bl	8001b14 <get_syndrome>
 8001d54:	6238      	str	r0, [r7, #32]
 8001d56:	2300      	movs	r3, #0
 8001d58:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001d5a:	e023      	b.n	8001da4 <horus_l2_encode_tx_packet+0x1b0>
 8001d5c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001d5e:	f1c3 030a 	rsb	r3, r3, #10
 8001d62:	6a3a      	ldr	r2, [r7, #32]
 8001d64:	fa42 f303 	asr.w	r3, r2, r3
 8001d68:	f003 0301 	and.w	r3, r3, #1
 8001d6c:	61fb      	str	r3, [r7, #28]
 8001d6e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001d70:	69fb      	ldr	r3, [r7, #28]
 8001d72:	4313      	orrs	r3, r2
 8001d74:	633b      	str	r3, [r7, #48]	@ 0x30
 8001d76:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001d78:	3301      	adds	r3, #1
 8001d7a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8001d7c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001d7e:	f003 0307 	and.w	r3, r3, #7
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d003      	beq.n	8001d8e <horus_l2_encode_tx_packet+0x19a>
 8001d86:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001d88:	005b      	lsls	r3, r3, #1
 8001d8a:	633b      	str	r3, [r7, #48]	@ 0x30
 8001d8c:	e007      	b.n	8001d9e <horus_l2_encode_tx_packet+0x1aa>
 8001d8e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001d90:	1c5a      	adds	r2, r3, #1
 8001d92:	647a      	str	r2, [r7, #68]	@ 0x44
 8001d94:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001d96:	b2d2      	uxtb	r2, r2
 8001d98:	701a      	strb	r2, [r3, #0]
 8001d9a:	2300      	movs	r3, #0
 8001d9c:	633b      	str	r3, [r7, #48]	@ 0x30
 8001d9e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001da0:	3301      	adds	r3, #1
 8001da2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001da4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001da6:	2b0a      	cmp	r3, #10
 8001da8:	ddd8      	ble.n	8001d5c <horus_l2_encode_tx_packet+0x168>
 8001daa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001dac:	f003 0307 	and.w	r3, r3, #7
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d013      	beq.n	8001ddc <horus_l2_encode_tx_packet+0x1e8>
 8001db4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8001db6:	425a      	negs	r2, r3
 8001db8:	f003 0307 	and.w	r3, r3, #7
 8001dbc:	f002 0207 	and.w	r2, r2, #7
 8001dc0:	bf58      	it	pl
 8001dc2:	4253      	negpl	r3, r2
 8001dc4:	f1c3 0307 	rsb	r3, r3, #7
 8001dc8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001dca:	fa02 f303 	lsl.w	r3, r2, r3
 8001dce:	633b      	str	r3, [r7, #48]	@ 0x30
 8001dd0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001dd2:	1c5a      	adds	r2, r3, #1
 8001dd4:	647a      	str	r2, [r7, #68]	@ 0x44
 8001dd6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001dd8:	b2d2      	uxtb	r2, r2
 8001dda:	701a      	strb	r2, [r3, #0]
 8001ddc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001dde:	68fa      	ldr	r2, [r7, #12]
 8001de0:	4413      	add	r3, r2
 8001de2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8001de4:	429a      	cmp	r2, r3
 8001de6:	d006      	beq.n	8001df6 <horus_l2_encode_tx_packet+0x202>
 8001de8:	4b0f      	ldr	r3, [pc, #60]	@ (8001e28 <horus_l2_encode_tx_packet+0x234>)
 8001dea:	4a10      	ldr	r2, [pc, #64]	@ (8001e2c <horus_l2_encode_tx_packet+0x238>)
 8001dec:	f44f 71af 	mov.w	r1, #350	@ 0x15e
 8001df0:	480f      	ldr	r0, [pc, #60]	@ (8001e30 <horus_l2_encode_tx_packet+0x23c>)
 8001df2:	f006 ff0d 	bl	8008c10 <__assert_func>
 8001df6:	68fb      	ldr	r3, [r7, #12]
 8001df8:	1c98      	adds	r0, r3, #2
 8001dfa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001dfc:	3b02      	subs	r3, #2
 8001dfe:	2200      	movs	r2, #0
 8001e00:	4619      	mov	r1, r3
 8001e02:	f7ff fd67 	bl	80018d4 <interleave>
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	1c9a      	adds	r2, r3, #2
 8001e0a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001e0c:	3b02      	subs	r3, #2
 8001e0e:	4619      	mov	r1, r3
 8001e10:	4610      	mov	r0, r2
 8001e12:	f7ff fe09 	bl	8001a28 <scramble>
 8001e16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001e18:	4618      	mov	r0, r3
 8001e1a:	3748      	adds	r7, #72	@ 0x48
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	bd80      	pop	{r7, pc}
 8001e20:	20000000 	.word	0x20000000
 8001e24:	2aaaaaab 	.word	0x2aaaaaab
 8001e28:	0800d138 	.word	0x0800d138
 8001e2c:	0800d278 	.word	0x0800d278
 8001e30:	0800d168 	.word	0x0800d168

08001e34 <print_hex>:
 8001e34:	b480      	push	{r7}
 8001e36:	b087      	sub	sp, #28
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	60f8      	str	r0, [r7, #12]
 8001e3c:	460b      	mov	r3, r1
 8001e3e:	607a      	str	r2, [r7, #4]
 8001e40:	72fb      	strb	r3, [r7, #11]
 8001e42:	2300      	movs	r3, #0
 8001e44:	617b      	str	r3, [r7, #20]
 8001e46:	2300      	movs	r3, #0
 8001e48:	74fb      	strb	r3, [r7, #19]
 8001e4a:	e03d      	b.n	8001ec8 <print_hex+0x94>
 8001e4c:	7cfb      	ldrb	r3, [r7, #19]
 8001e4e:	68fa      	ldr	r2, [r7, #12]
 8001e50:	4413      	add	r3, r2
 8001e52:	781b      	ldrb	r3, [r3, #0]
 8001e54:	091b      	lsrs	r3, r3, #4
 8001e56:	b2db      	uxtb	r3, r3
 8001e58:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8001e5c:	74bb      	strb	r3, [r7, #18]
 8001e5e:	7cbb      	ldrb	r3, [r7, #18]
 8001e60:	2b39      	cmp	r3, #57	@ 0x39
 8001e62:	d907      	bls.n	8001e74 <print_hex+0x40>
 8001e64:	697b      	ldr	r3, [r7, #20]
 8001e66:	687a      	ldr	r2, [r7, #4]
 8001e68:	4413      	add	r3, r2
 8001e6a:	7cba      	ldrb	r2, [r7, #18]
 8001e6c:	3227      	adds	r2, #39	@ 0x27
 8001e6e:	b2d2      	uxtb	r2, r2
 8001e70:	701a      	strb	r2, [r3, #0]
 8001e72:	e004      	b.n	8001e7e <print_hex+0x4a>
 8001e74:	697b      	ldr	r3, [r7, #20]
 8001e76:	687a      	ldr	r2, [r7, #4]
 8001e78:	4413      	add	r3, r2
 8001e7a:	7cba      	ldrb	r2, [r7, #18]
 8001e7c:	701a      	strb	r2, [r3, #0]
 8001e7e:	697b      	ldr	r3, [r7, #20]
 8001e80:	3301      	adds	r3, #1
 8001e82:	617b      	str	r3, [r7, #20]
 8001e84:	7cfb      	ldrb	r3, [r7, #19]
 8001e86:	68fa      	ldr	r2, [r7, #12]
 8001e88:	4413      	add	r3, r2
 8001e8a:	781b      	ldrb	r3, [r3, #0]
 8001e8c:	b25b      	sxtb	r3, r3
 8001e8e:	f003 030f 	and.w	r3, r3, #15
 8001e92:	b25b      	sxtb	r3, r3
 8001e94:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8001e98:	b25b      	sxtb	r3, r3
 8001e9a:	74bb      	strb	r3, [r7, #18]
 8001e9c:	7cbb      	ldrb	r3, [r7, #18]
 8001e9e:	2b39      	cmp	r3, #57	@ 0x39
 8001ea0:	d907      	bls.n	8001eb2 <print_hex+0x7e>
 8001ea2:	697b      	ldr	r3, [r7, #20]
 8001ea4:	687a      	ldr	r2, [r7, #4]
 8001ea6:	4413      	add	r3, r2
 8001ea8:	7cba      	ldrb	r2, [r7, #18]
 8001eaa:	3227      	adds	r2, #39	@ 0x27
 8001eac:	b2d2      	uxtb	r2, r2
 8001eae:	701a      	strb	r2, [r3, #0]
 8001eb0:	e004      	b.n	8001ebc <print_hex+0x88>
 8001eb2:	697b      	ldr	r3, [r7, #20]
 8001eb4:	687a      	ldr	r2, [r7, #4]
 8001eb6:	4413      	add	r3, r2
 8001eb8:	7cba      	ldrb	r2, [r7, #18]
 8001eba:	701a      	strb	r2, [r3, #0]
 8001ebc:	697b      	ldr	r3, [r7, #20]
 8001ebe:	3301      	adds	r3, #1
 8001ec0:	617b      	str	r3, [r7, #20]
 8001ec2:	7cfb      	ldrb	r3, [r7, #19]
 8001ec4:	3301      	adds	r3, #1
 8001ec6:	74fb      	strb	r3, [r7, #19]
 8001ec8:	7cfa      	ldrb	r2, [r7, #19]
 8001eca:	7afb      	ldrb	r3, [r7, #11]
 8001ecc:	429a      	cmp	r2, r3
 8001ece:	d3bd      	bcc.n	8001e4c <print_hex+0x18>
 8001ed0:	7afb      	ldrb	r3, [r7, #11]
 8001ed2:	005b      	lsls	r3, r3, #1
 8001ed4:	461a      	mov	r2, r3
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	4413      	add	r3, r2
 8001eda:	220a      	movs	r2, #10
 8001edc:	701a      	strb	r2, [r3, #0]
 8001ede:	7afb      	ldrb	r3, [r7, #11]
 8001ee0:	005b      	lsls	r3, r3, #1
 8001ee2:	3301      	adds	r3, #1
 8001ee4:	687a      	ldr	r2, [r7, #4]
 8001ee6:	4413      	add	r3, r2
 8001ee8:	2200      	movs	r2, #0
 8001eea:	701a      	strb	r2, [r3, #0]
 8001eec:	bf00      	nop
 8001eee:	371c      	adds	r7, #28
 8001ef0:	46bd      	mov	sp, r7
 8001ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ef6:	4770      	bx	lr

08001ef8 <SPI_RW>:
 8001ef8:	b480      	push	{r7}
 8001efa:	b083      	sub	sp, #12
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	4603      	mov	r3, r0
 8001f00:	71fb      	strb	r3, [r7, #7]
 8001f02:	bf00      	nop
 8001f04:	4b0f      	ldr	r3, [pc, #60]	@ (8001f44 <SPI_RW+0x4c>)
 8001f06:	689b      	ldr	r3, [r3, #8]
 8001f08:	f003 0302 	and.w	r3, r3, #2
 8001f0c:	2b02      	cmp	r3, #2
 8001f0e:	d1f9      	bne.n	8001f04 <SPI_RW+0xc>
 8001f10:	4a0d      	ldr	r2, [pc, #52]	@ (8001f48 <SPI_RW+0x50>)
 8001f12:	79fb      	ldrb	r3, [r7, #7]
 8001f14:	7013      	strb	r3, [r2, #0]
 8001f16:	bf00      	nop
 8001f18:	4b0a      	ldr	r3, [pc, #40]	@ (8001f44 <SPI_RW+0x4c>)
 8001f1a:	689b      	ldr	r3, [r3, #8]
 8001f1c:	f003 0301 	and.w	r3, r3, #1
 8001f20:	2b01      	cmp	r3, #1
 8001f22:	d1f9      	bne.n	8001f18 <SPI_RW+0x20>
 8001f24:	bf00      	nop
 8001f26:	4b07      	ldr	r3, [pc, #28]	@ (8001f44 <SPI_RW+0x4c>)
 8001f28:	689b      	ldr	r3, [r3, #8]
 8001f2a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001f2e:	2b80      	cmp	r3, #128	@ 0x80
 8001f30:	d0f9      	beq.n	8001f26 <SPI_RW+0x2e>
 8001f32:	4b05      	ldr	r3, [pc, #20]	@ (8001f48 <SPI_RW+0x50>)
 8001f34:	781b      	ldrb	r3, [r3, #0]
 8001f36:	4618      	mov	r0, r3
 8001f38:	370c      	adds	r7, #12
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f40:	4770      	bx	lr
 8001f42:	bf00      	nop
 8001f44:	40013000 	.word	0x40013000
 8001f48:	4001300c 	.word	0x4001300c

08001f4c <LPS22_WriteReg>:
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	b082      	sub	sp, #8
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	4603      	mov	r3, r0
 8001f54:	460a      	mov	r2, r1
 8001f56:	71fb      	strb	r3, [r7, #7]
 8001f58:	4613      	mov	r3, r2
 8001f5a:	71bb      	strb	r3, [r7, #6]
 8001f5c:	2200      	movs	r2, #0
 8001f5e:	2110      	movs	r1, #16
 8001f60:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001f64:	f003 ffd0 	bl	8005f08 <HAL_GPIO_WritePin>
 8001f68:	79fb      	ldrb	r3, [r7, #7]
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	f7ff ffc4 	bl	8001ef8 <SPI_RW>
 8001f70:	79bb      	ldrb	r3, [r7, #6]
 8001f72:	4618      	mov	r0, r3
 8001f74:	f7ff ffc0 	bl	8001ef8 <SPI_RW>
 8001f78:	2201      	movs	r2, #1
 8001f7a:	2110      	movs	r1, #16
 8001f7c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001f80:	f003 ffc2 	bl	8005f08 <HAL_GPIO_WritePin>
 8001f84:	bf00      	nop
 8001f86:	3708      	adds	r7, #8
 8001f88:	46bd      	mov	sp, r7
 8001f8a:	bd80      	pop	{r7, pc}

08001f8c <LPS22_ReadReg>:
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b084      	sub	sp, #16
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	4603      	mov	r3, r0
 8001f94:	71fb      	strb	r3, [r7, #7]
 8001f96:	2200      	movs	r2, #0
 8001f98:	2110      	movs	r1, #16
 8001f9a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001f9e:	f003 ffb3 	bl	8005f08 <HAL_GPIO_WritePin>
 8001fa2:	79fb      	ldrb	r3, [r7, #7]
 8001fa4:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001fa8:	b2db      	uxtb	r3, r3
 8001faa:	4618      	mov	r0, r3
 8001fac:	f7ff ffa4 	bl	8001ef8 <SPI_RW>
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	f7ff ffa1 	bl	8001ef8 <SPI_RW>
 8001fb6:	4603      	mov	r3, r0
 8001fb8:	73fb      	strb	r3, [r7, #15]
 8001fba:	2201      	movs	r2, #1
 8001fbc:	2110      	movs	r1, #16
 8001fbe:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001fc2:	f003 ffa1 	bl	8005f08 <HAL_GPIO_WritePin>
 8001fc6:	7bfb      	ldrb	r3, [r7, #15]
 8001fc8:	4618      	mov	r0, r3
 8001fca:	3710      	adds	r7, #16
 8001fcc:	46bd      	mov	sp, r7
 8001fce:	bd80      	pop	{r7, pc}

08001fd0 <LPS22_ReadRegs>:
 8001fd0:	b590      	push	{r4, r7, lr}
 8001fd2:	b085      	sub	sp, #20
 8001fd4:	af00      	add	r7, sp, #0
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	6039      	str	r1, [r7, #0]
 8001fda:	71fb      	strb	r3, [r7, #7]
 8001fdc:	4613      	mov	r3, r2
 8001fde:	71bb      	strb	r3, [r7, #6]
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	2110      	movs	r1, #16
 8001fe4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001fe8:	f003 ff8e 	bl	8005f08 <HAL_GPIO_WritePin>
 8001fec:	79fb      	ldrb	r3, [r7, #7]
 8001fee:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001ff2:	b2db      	uxtb	r3, r3
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	f7ff ff7f 	bl	8001ef8 <SPI_RW>
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	60fb      	str	r3, [r7, #12]
 8001ffe:	e00a      	b.n	8002016 <LPS22_ReadRegs+0x46>
 8002000:	683a      	ldr	r2, [r7, #0]
 8002002:	68fb      	ldr	r3, [r7, #12]
 8002004:	18d4      	adds	r4, r2, r3
 8002006:	2000      	movs	r0, #0
 8002008:	f7ff ff76 	bl	8001ef8 <SPI_RW>
 800200c:	4603      	mov	r3, r0
 800200e:	7023      	strb	r3, [r4, #0]
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	3301      	adds	r3, #1
 8002014:	60fb      	str	r3, [r7, #12]
 8002016:	79bb      	ldrb	r3, [r7, #6]
 8002018:	68fa      	ldr	r2, [r7, #12]
 800201a:	429a      	cmp	r2, r3
 800201c:	d3f0      	bcc.n	8002000 <LPS22_ReadRegs+0x30>
 800201e:	2201      	movs	r2, #1
 8002020:	2110      	movs	r1, #16
 8002022:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002026:	f003 ff6f 	bl	8005f08 <HAL_GPIO_WritePin>
 800202a:	bf00      	nop
 800202c:	3714      	adds	r7, #20
 800202e:	46bd      	mov	sp, r7
 8002030:	bd90      	pop	{r4, r7, pc}
	...

08002034 <LPS22_Config>:
 8002034:	b580      	push	{r7, lr}
 8002036:	af00      	add	r7, sp, #0
 8002038:	2201      	movs	r2, #1
 800203a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800203e:	4805      	ldr	r0, [pc, #20]	@ (8002054 <LPS22_Config+0x20>)
 8002040:	f003 ff62 	bl	8005f08 <HAL_GPIO_WritePin>
 8002044:	2201      	movs	r2, #1
 8002046:	2110      	movs	r1, #16
 8002048:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800204c:	f003 ff5c 	bl	8005f08 <HAL_GPIO_WritePin>
 8002050:	bf00      	nop
 8002052:	bd80      	pop	{r7, pc}
 8002054:	48000400 	.word	0x48000400

08002058 <LPS22_Init>:
 8002058:	b580      	push	{r7, lr}
 800205a:	b082      	sub	sp, #8
 800205c:	af00      	add	r7, sp, #0
 800205e:	2300      	movs	r3, #0
 8002060:	71fb      	strb	r3, [r7, #7]
 8002062:	f000 f842 	bl	80020ea <LPS22_DeviceCheck>
 8002066:	4603      	mov	r3, r0
 8002068:	2b00      	cmp	r3, #0
 800206a:	d001      	beq.n	8002070 <LPS22_Init+0x18>
 800206c:	2301      	movs	r3, #1
 800206e:	e038      	b.n	80020e2 <LPS22_Init+0x8a>
 8002070:	201a      	movs	r0, #26
 8002072:	f7ff ff8b 	bl	8001f8c <LPS22_ReadReg>
 8002076:	4603      	mov	r3, r0
 8002078:	71fb      	strb	r3, [r7, #7]
 800207a:	79fb      	ldrb	r3, [r7, #7]
 800207c:	f003 0302 	and.w	r3, r3, #2
 8002080:	71fb      	strb	r3, [r7, #7]
 8002082:	79fb      	ldrb	r3, [r7, #7]
 8002084:	4619      	mov	r1, r3
 8002086:	201a      	movs	r0, #26
 8002088:	f7ff ff60 	bl	8001f4c <LPS22_WriteReg>
 800208c:	2005      	movs	r0, #5
 800208e:	f001 fff9 	bl	8004084 <HAL_Delay>
 8002092:	2300      	movs	r3, #0
 8002094:	71fb      	strb	r3, [r7, #7]
 8002096:	79fb      	ldrb	r3, [r7, #7]
 8002098:	f043 0350 	orr.w	r3, r3, #80	@ 0x50
 800209c:	71fb      	strb	r3, [r7, #7]
 800209e:	79fb      	ldrb	r3, [r7, #7]
 80020a0:	f043 0302 	orr.w	r3, r3, #2
 80020a4:	71fb      	strb	r3, [r7, #7]
 80020a6:	79fb      	ldrb	r3, [r7, #7]
 80020a8:	4619      	mov	r1, r3
 80020aa:	2010      	movs	r0, #16
 80020ac:	f7ff ff4e 	bl	8001f4c <LPS22_WriteReg>
 80020b0:	2005      	movs	r0, #5
 80020b2:	f001 ffe7 	bl	8004084 <HAL_Delay>
 80020b6:	2011      	movs	r0, #17
 80020b8:	f7ff ff68 	bl	8001f8c <LPS22_ReadReg>
 80020bc:	4603      	mov	r3, r0
 80020be:	71fb      	strb	r3, [r7, #7]
 80020c0:	79fb      	ldrb	r3, [r7, #7]
 80020c2:	f023 0312 	bic.w	r3, r3, #18
 80020c6:	71fb      	strb	r3, [r7, #7]
 80020c8:	79fb      	ldrb	r3, [r7, #7]
 80020ca:	f043 0310 	orr.w	r3, r3, #16
 80020ce:	71fb      	strb	r3, [r7, #7]
 80020d0:	79fb      	ldrb	r3, [r7, #7]
 80020d2:	4619      	mov	r1, r3
 80020d4:	201a      	movs	r0, #26
 80020d6:	f7ff ff39 	bl	8001f4c <LPS22_WriteReg>
 80020da:	2005      	movs	r0, #5
 80020dc:	f001 ffd2 	bl	8004084 <HAL_Delay>
 80020e0:	2300      	movs	r3, #0
 80020e2:	4618      	mov	r0, r3
 80020e4:	3708      	adds	r7, #8
 80020e6:	46bd      	mov	sp, r7
 80020e8:	bd80      	pop	{r7, pc}

080020ea <LPS22_DeviceCheck>:
 80020ea:	b580      	push	{r7, lr}
 80020ec:	b082      	sub	sp, #8
 80020ee:	af00      	add	r7, sp, #0
 80020f0:	200f      	movs	r0, #15
 80020f2:	f7ff ff4b 	bl	8001f8c <LPS22_ReadReg>
 80020f6:	4603      	mov	r3, r0
 80020f8:	71fb      	strb	r3, [r7, #7]
 80020fa:	79fb      	ldrb	r3, [r7, #7]
 80020fc:	2bb1      	cmp	r3, #177	@ 0xb1
 80020fe:	d001      	beq.n	8002104 <LPS22_DeviceCheck+0x1a>
 8002100:	2301      	movs	r3, #1
 8002102:	e000      	b.n	8002106 <LPS22_DeviceCheck+0x1c>
 8002104:	2300      	movs	r3, #0
 8002106:	4618      	mov	r0, r3
 8002108:	3708      	adds	r7, #8
 800210a:	46bd      	mov	sp, r7
 800210c:	bd80      	pop	{r7, pc}

0800210e <LPS22_GetRawData>:
 800210e:	b580      	push	{r7, lr}
 8002110:	b086      	sub	sp, #24
 8002112:	af00      	add	r7, sp, #0
 8002114:	6078      	str	r0, [r7, #4]
 8002116:	2300      	movs	r3, #0
 8002118:	617b      	str	r3, [r7, #20]
 800211a:	f107 030c 	add.w	r3, r7, #12
 800211e:	2203      	movs	r2, #3
 8002120:	4619      	mov	r1, r3
 8002122:	2028      	movs	r0, #40	@ 0x28
 8002124:	f7ff ff54 	bl	8001fd0 <LPS22_ReadRegs>
 8002128:	2300      	movs	r3, #0
 800212a:	613b      	str	r3, [r7, #16]
 800212c:	e00f      	b.n	800214e <LPS22_GetRawData+0x40>
 800212e:	f107 020c 	add.w	r2, r7, #12
 8002132:	693b      	ldr	r3, [r7, #16]
 8002134:	4413      	add	r3, r2
 8002136:	781b      	ldrb	r3, [r3, #0]
 8002138:	461a      	mov	r2, r3
 800213a:	693b      	ldr	r3, [r7, #16]
 800213c:	00db      	lsls	r3, r3, #3
 800213e:	fa02 f303 	lsl.w	r3, r2, r3
 8002142:	697a      	ldr	r2, [r7, #20]
 8002144:	4313      	orrs	r3, r2
 8002146:	617b      	str	r3, [r7, #20]
 8002148:	693b      	ldr	r3, [r7, #16]
 800214a:	3301      	adds	r3, #1
 800214c:	613b      	str	r3, [r7, #16]
 800214e:	693b      	ldr	r3, [r7, #16]
 8002150:	2b02      	cmp	r3, #2
 8002152:	d9ec      	bls.n	800212e <LPS22_GetRawData+0x20>
 8002154:	697b      	ldr	r3, [r7, #20]
 8002156:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800215a:	2b00      	cmp	r3, #0
 800215c:	d003      	beq.n	8002166 <LPS22_GetRawData+0x58>
 800215e:	697b      	ldr	r3, [r7, #20]
 8002160:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002164:	617b      	str	r3, [r7, #20]
 8002166:	697a      	ldr	r2, [r7, #20]
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	601a      	str	r2, [r3, #0]
 800216c:	f107 030c 	add.w	r3, r7, #12
 8002170:	2202      	movs	r2, #2
 8002172:	4619      	mov	r1, r3
 8002174:	202b      	movs	r0, #43	@ 0x2b
 8002176:	f7ff ff2b 	bl	8001fd0 <LPS22_ReadRegs>
 800217a:	7b7b      	ldrb	r3, [r7, #13]
 800217c:	021b      	lsls	r3, r3, #8
 800217e:	7b3a      	ldrb	r2, [r7, #12]
 8002180:	4413      	add	r3, r2
 8002182:	617b      	str	r3, [r7, #20]
 8002184:	697b      	ldr	r3, [r7, #20]
 8002186:	b21a      	sxth	r2, r3
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	3304      	adds	r3, #4
 800218c:	601a      	str	r2, [r3, #0]
 800218e:	2300      	movs	r3, #0
 8002190:	4618      	mov	r0, r3
 8002192:	3718      	adds	r7, #24
 8002194:	46bd      	mov	sp, r7
 8002196:	bd80      	pop	{r7, pc}

08002198 <LPS22_GetPressure>:
 8002198:	b580      	push	{r7, lr}
 800219a:	b084      	sub	sp, #16
 800219c:	af00      	add	r7, sp, #0
 800219e:	1d3b      	adds	r3, r7, #4
 80021a0:	2200      	movs	r2, #0
 80021a2:	601a      	str	r2, [r3, #0]
 80021a4:	605a      	str	r2, [r3, #4]
 80021a6:	f04f 0300 	mov.w	r3, #0
 80021aa:	60fb      	str	r3, [r7, #12]
 80021ac:	1d3b      	adds	r3, r7, #4
 80021ae:	4618      	mov	r0, r3
 80021b0:	f7ff ffad 	bl	800210e <LPS22_GetRawData>
 80021b4:	4603      	mov	r3, r0
 80021b6:	2b01      	cmp	r3, #1
 80021b8:	d00b      	beq.n	80021d2 <LPS22_GetPressure+0x3a>
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	ee07 3a90 	vmov	s15, r3
 80021c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80021c4:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 80021e8 <LPS22_GetPressure+0x50>
 80021c8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80021cc:	edc7 7a03 	vstr	s15, [r7, #12]
 80021d0:	e001      	b.n	80021d6 <LPS22_GetPressure+0x3e>
 80021d2:	4b06      	ldr	r3, [pc, #24]	@ (80021ec <LPS22_GetPressure+0x54>)
 80021d4:	60fb      	str	r3, [r7, #12]
 80021d6:	68fb      	ldr	r3, [r7, #12]
 80021d8:	ee07 3a90 	vmov	s15, r3
 80021dc:	eeb0 0a67 	vmov.f32	s0, s15
 80021e0:	3710      	adds	r7, #16
 80021e2:	46bd      	mov	sp, r7
 80021e4:	bd80      	pop	{r7, pc}
 80021e6:	bf00      	nop
 80021e8:	39800000 	.word	0x39800000
 80021ec:	bf800000 	.word	0xbf800000

080021f0 <LPS22_GetTemperature>:
 80021f0:	b580      	push	{r7, lr}
 80021f2:	b084      	sub	sp, #16
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	1d3b      	adds	r3, r7, #4
 80021f8:	2200      	movs	r2, #0
 80021fa:	601a      	str	r2, [r3, #0]
 80021fc:	605a      	str	r2, [r3, #4]
 80021fe:	f04f 0300 	mov.w	r3, #0
 8002202:	60fb      	str	r3, [r7, #12]
 8002204:	1d3b      	adds	r3, r7, #4
 8002206:	4618      	mov	r0, r3
 8002208:	f7ff ff81 	bl	800210e <LPS22_GetRawData>
 800220c:	68bb      	ldr	r3, [r7, #8]
 800220e:	ee07 3a90 	vmov	s15, r3
 8002212:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002216:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8002234 <LPS22_GetTemperature+0x44>
 800221a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800221e:	edc7 7a03 	vstr	s15, [r7, #12]
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	ee07 3a90 	vmov	s15, r3
 8002228:	eeb0 0a67 	vmov.f32	s0, s15
 800222c:	3710      	adds	r7, #16
 800222e:	46bd      	mov	sp, r7
 8002230:	bd80      	pop	{r7, pc}
 8002232:	bf00      	nop
 8002234:	3c23d70a 	.word	0x3c23d70a

08002238 <main_loop>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void main_loop(){
 8002238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800223c:	b09f      	sub	sp, #124	@ 0x7c
 800223e:	af12      	add	r7, sp, #72	@ 0x48
	  HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 8002240:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002244:	48b4      	ldr	r0, [pc, #720]	@ (8002518 <main_loop+0x2e0>)
 8002246:	f003 fe77 	bl	8005f38 <HAL_GPIO_TogglePin>

	  ParseNMEA(&NmeaData, DataBuffer);
 800224a:	49b4      	ldr	r1, [pc, #720]	@ (800251c <main_loop+0x2e4>)
 800224c:	48b4      	ldr	r0, [pc, #720]	@ (8002520 <main_loop+0x2e8>)
 800224e:	f001 fa6b 	bl	8003728 <ParseNMEA>
	 //HAL_UART_Transmit(&huart1, DataBuffer, DataBuffer_SIZE, 2000);

	  char* str;

	  str = (char*)malloc(sizeof(char)*210);
 8002252:	20d2      	movs	r0, #210	@ 0xd2
 8002254:	f006 fcfa 	bl	8008c4c <malloc>
 8002258:	4603      	mov	r3, r0
 800225a:	62fb      	str	r3, [r7, #44]	@ 0x2c
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 800225c:	4bb0      	ldr	r3, [pc, #704]	@ (8002520 <main_loop+0x2e8>)
 800225e:	7f5b      	ldrb	r3, [r3, #29]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 8002260:	61fb      	str	r3, [r7, #28]
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 8002262:	4baf      	ldr	r3, [pc, #700]	@ (8002520 <main_loop+0x2e8>)
 8002264:	681b      	ldr	r3, [r3, #0]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 8002266:	4618      	mov	r0, r3
 8002268:	f7fe f96e 	bl	8000548 <__aeabi_f2d>
 800226c:	4604      	mov	r4, r0
 800226e:	460d      	mov	r5, r1
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 8002270:	4bab      	ldr	r3, [pc, #684]	@ (8002520 <main_loop+0x2e8>)
 8002272:	685b      	ldr	r3, [r3, #4]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 8002274:	4618      	mov	r0, r3
 8002276:	f7fe f967 	bl	8000548 <__aeabi_f2d>
 800227a:	4680      	mov	r8, r0
 800227c:	4689      	mov	r9, r1
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 800227e:	4ba8      	ldr	r3, [pc, #672]	@ (8002520 <main_loop+0x2e8>)
 8002280:	689b      	ldr	r3, [r3, #8]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 8002282:	4618      	mov	r0, r3
 8002284:	f7fe f960 	bl	8000548 <__aeabi_f2d>
 8002288:	4682      	mov	sl, r0
 800228a:	468b      	mov	fp, r1
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 800228c:	4ba4      	ldr	r3, [pc, #656]	@ (8002520 <main_loop+0x2e8>)
 800228e:	68db      	ldr	r3, [r3, #12]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 8002290:	4618      	mov	r0, r3
 8002292:	f7fe f959 	bl	8000548 <__aeabi_f2d>
 8002296:	e9c7 0104 	strd	r0, r1, [r7, #16]
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 800229a:	4ba1      	ldr	r3, [pc, #644]	@ (8002520 <main_loop+0x2e8>)
 800229c:	691b      	ldr	r3, [r3, #16]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 800229e:	4618      	mov	r0, r3
 80022a0:	f7fe f952 	bl	8000548 <__aeabi_f2d>
 80022a4:	e9c7 0102 	strd	r0, r1, [r7, #8]
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 80022a8:	4b9d      	ldr	r3, [pc, #628]	@ (8002520 <main_loop+0x2e8>)
 80022aa:	7f1b      	ldrb	r3, [r3, #28]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 80022ac:	61bb      	str	r3, [r7, #24]
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 80022ae:	4b9c      	ldr	r3, [pc, #624]	@ (8002520 <main_loop+0x2e8>)
 80022b0:	699b      	ldr	r3, [r3, #24]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 80022b2:	4618      	mov	r0, r3
 80022b4:	f7fe f948 	bl	8000548 <__aeabi_f2d>
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 80022b8:	4b99      	ldr	r3, [pc, #612]	@ (8002520 <main_loop+0x2e8>)
 80022ba:	7d1b      	ldrb	r3, [r3, #20]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 80022bc:	607b      	str	r3, [r7, #4]
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 80022be:	4b98      	ldr	r3, [pc, #608]	@ (8002520 <main_loop+0x2e8>)
 80022c0:	7d5b      	ldrb	r3, [r3, #21]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 80022c2:	461e      	mov	r6, r3
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 80022c4:	4b96      	ldr	r3, [pc, #600]	@ (8002520 <main_loop+0x2e8>)
 80022c6:	7d9b      	ldrb	r3, [r3, #22]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 80022c8:	461a      	mov	r2, r3
	          NmeaData.Fix, NmeaData.Lat, NmeaData.Lon, NmeaData.Alt, NmeaData.Speed, NmeaData.AscentRate, NmeaData.Sats, NmeaData.HDOP, NmeaData.Hours, NmeaData.Minutes, NmeaData.Seconds, NmeaData.Corr);
 80022ca:	4b95      	ldr	r3, [pc, #596]	@ (8002520 <main_loop+0x2e8>)
 80022cc:	7f9b      	ldrb	r3, [r3, #30]
	  sprintf(str, "\r\nFix: %d, Lat: %f, Lon: %f, Alt: %f m, Speed: %f km/h, Ascent rate: %f, Satellites: %d HDOP: %f, Time: %d:%d:%d, correct frames: %d\r\n",
 80022ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80022d0:	9210      	str	r2, [sp, #64]	@ 0x40
 80022d2:	960f      	str	r6, [sp, #60]	@ 0x3c
 80022d4:	687e      	ldr	r6, [r7, #4]
 80022d6:	960e      	str	r6, [sp, #56]	@ 0x38
 80022d8:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
 80022dc:	69b9      	ldr	r1, [r7, #24]
 80022de:	910a      	str	r1, [sp, #40]	@ 0x28
 80022e0:	ed97 7b02 	vldr	d7, [r7, #8]
 80022e4:	ed8d 7b08 	vstr	d7, [sp, #32]
 80022e8:	ed97 7b04 	vldr	d7, [r7, #16]
 80022ec:	ed8d 7b06 	vstr	d7, [sp, #24]
 80022f0:	e9cd ab04 	strd	sl, fp, [sp, #16]
 80022f4:	e9cd 8902 	strd	r8, r9, [sp, #8]
 80022f8:	e9cd 4500 	strd	r4, r5, [sp]
 80022fc:	69fa      	ldr	r2, [r7, #28]
 80022fe:	4989      	ldr	r1, [pc, #548]	@ (8002524 <main_loop+0x2ec>)
 8002300:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8002302:	f008 f979 	bl	800a5f8 <siprintf>
	  HAL_UART_Transmit(&huart1, (uint8_t *)str, strlen(str), 1000);
 8002306:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8002308:	f7fd ffb2 	bl	8000270 <strlen>
 800230c:	4603      	mov	r3, r0
 800230e:	b29a      	uxth	r2, r3
 8002310:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002314:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8002316:	4884      	ldr	r0, [pc, #528]	@ (8002528 <main_loop+0x2f0>)
 8002318:	f005 fd4e 	bl	8007db8 <HAL_UART_Transmit>
	  free(str);
 800231c:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800231e:	f006 fc9d 	bl	8008c5c <free>

	  HAL_ADC_Start(&hadc1); // start the adc
 8002322:	4882      	ldr	r0, [pc, #520]	@ (800252c <main_loop+0x2f4>)
 8002324:	f002 fa2a 	bl	800477c <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc1, 100); // poll for conversion
 8002328:	2164      	movs	r1, #100	@ 0x64
 800232a:	4880      	ldr	r0, [pc, #512]	@ (800252c <main_loop+0x2f4>)
 800232c:	f002 fabc 	bl	80048a8 <HAL_ADC_PollForConversion>
	  ADC_VBat= HAL_ADC_GetValue(&hadc1);
 8002330:	487e      	ldr	r0, [pc, #504]	@ (800252c <main_loop+0x2f4>)
 8002332:	f002 fb48 	bl	80049c6 <HAL_ADC_GetValue>
 8002336:	4603      	mov	r3, r0
 8002338:	4a7d      	ldr	r2, [pc, #500]	@ (8002530 <main_loop+0x2f8>)
 800233a:	6013      	str	r3, [r2, #0]
	  HAL_ADC_PollForConversion(&hadc1, 100); // poll for conversion
 800233c:	2164      	movs	r1, #100	@ 0x64
 800233e:	487b      	ldr	r0, [pc, #492]	@ (800252c <main_loop+0x2f4>)
 8002340:	f002 fab2 	bl	80048a8 <HAL_ADC_PollForConversion>
	  ADC_Temp = HAL_ADC_GetValue(&hadc1);
 8002344:	4879      	ldr	r0, [pc, #484]	@ (800252c <main_loop+0x2f4>)
 8002346:	f002 fb3e 	bl	80049c6 <HAL_ADC_GetValue>
 800234a:	4603      	mov	r3, r0
 800234c:	4a79      	ldr	r2, [pc, #484]	@ (8002534 <main_loop+0x2fc>)
 800234e:	6013      	str	r3, [r2, #0]
	  HAL_ADC_Stop(&hadc1); // stop adc
 8002350:	4876      	ldr	r0, [pc, #472]	@ (800252c <main_loop+0x2f4>)
 8002352:	f002 fa76 	bl	8004842 <HAL_ADC_Stop>
	  str = (char*)malloc(sizeof(char)*48);
 8002356:	2030      	movs	r0, #48	@ 0x30
 8002358:	f006 fc78 	bl	8008c4c <malloc>
 800235c:	4603      	mov	r3, r0
 800235e:	62fb      	str	r3, [r7, #44]	@ 0x2c

	  sprintf(str, "ADCBAT: %d ADCTEMP: %d\r\n", ADC_VBat, ADC_Temp);
 8002360:	4b73      	ldr	r3, [pc, #460]	@ (8002530 <main_loop+0x2f8>)
 8002362:	681a      	ldr	r2, [r3, #0]
 8002364:	4b73      	ldr	r3, [pc, #460]	@ (8002534 <main_loop+0x2fc>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	4973      	ldr	r1, [pc, #460]	@ (8002538 <main_loop+0x300>)
 800236a:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 800236c:	f008 f944 	bl	800a5f8 <siprintf>
	  //HAL_UART_Transmit(&huart1, (uint8_t *)str, strlen(str), 1000);
	  free(str);
 8002370:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 8002372:	f006 fc73 	bl	8008c5c <free>
	  str = (char*)malloc(sizeof(char)*100);
 8002376:	2064      	movs	r0, #100	@ 0x64
 8002378:	f006 fc68 	bl	8008c4c <malloc>
 800237c:	4603      	mov	r3, r0
 800237e:	62fb      	str	r3, [r7, #44]	@ 0x2c
	  sprintf(str, "LPS22: temp: %f, press: %f\r\n", LPS22_GetTemperature(), LPS22_GetPressure());
 8002380:	f7ff ff36 	bl	80021f0 <LPS22_GetTemperature>
 8002384:	ee10 3a10 	vmov	r3, s0
 8002388:	4618      	mov	r0, r3
 800238a:	f7fe f8dd 	bl	8000548 <__aeabi_f2d>
 800238e:	4604      	mov	r4, r0
 8002390:	460d      	mov	r5, r1
 8002392:	f7ff ff01 	bl	8002198 <LPS22_GetPressure>
 8002396:	ee10 3a10 	vmov	r3, s0
 800239a:	4618      	mov	r0, r3
 800239c:	f7fe f8d4 	bl	8000548 <__aeabi_f2d>
 80023a0:	4602      	mov	r2, r0
 80023a2:	460b      	mov	r3, r1
 80023a4:	e9cd 2300 	strd	r2, r3, [sp]
 80023a8:	4622      	mov	r2, r4
 80023aa:	462b      	mov	r3, r5
 80023ac:	4963      	ldr	r1, [pc, #396]	@ (800253c <main_loop+0x304>)
 80023ae:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 80023b0:	f008 f922 	bl	800a5f8 <siprintf>
	  //HAL_UART_Transmit(&huart1, (uint8_t *)str, strlen(str), 1000);
	  free(str);
 80023b4:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 80023b6:	f006 fc51 	bl	8008c5c <free>


	  /* ------------- */
	  /* HORUS PACKAGE */
	  BinaryPacket.PayloadID = PAYLOAD_ID;
 80023ba:	4b61      	ldr	r3, [pc, #388]	@ (8002540 <main_loop+0x308>)
 80023bc:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80023c0:	801a      	strh	r2, [r3, #0]
	  BinaryPacket.PacketCount = counter;
 80023c2:	4b60      	ldr	r3, [pc, #384]	@ (8002544 <main_loop+0x30c>)
 80023c4:	881a      	ldrh	r2, [r3, #0]
 80023c6:	4b5e      	ldr	r3, [pc, #376]	@ (8002540 <main_loop+0x308>)
 80023c8:	805a      	strh	r2, [r3, #2]
	  BinaryPacket.Hours = NmeaData.Hours;
 80023ca:	4b55      	ldr	r3, [pc, #340]	@ (8002520 <main_loop+0x2e8>)
 80023cc:	7d1a      	ldrb	r2, [r3, #20]
 80023ce:	4b5c      	ldr	r3, [pc, #368]	@ (8002540 <main_loop+0x308>)
 80023d0:	711a      	strb	r2, [r3, #4]
	  BinaryPacket.Minutes = NmeaData.Minutes;
 80023d2:	4b53      	ldr	r3, [pc, #332]	@ (8002520 <main_loop+0x2e8>)
 80023d4:	7d5a      	ldrb	r2, [r3, #21]
 80023d6:	4b5a      	ldr	r3, [pc, #360]	@ (8002540 <main_loop+0x308>)
 80023d8:	715a      	strb	r2, [r3, #5]
	  BinaryPacket.Seconds = NmeaData.Seconds;
 80023da:	4b51      	ldr	r3, [pc, #324]	@ (8002520 <main_loop+0x2e8>)
 80023dc:	7d9a      	ldrb	r2, [r3, #22]
 80023de:	4b58      	ldr	r3, [pc, #352]	@ (8002540 <main_loop+0x308>)
 80023e0:	719a      	strb	r2, [r3, #6]
	  BinaryPacket.Lat = NmeaData.Lat;
 80023e2:	4b4f      	ldr	r3, [pc, #316]	@ (8002520 <main_loop+0x2e8>)
 80023e4:	681a      	ldr	r2, [r3, #0]
 80023e6:	4b56      	ldr	r3, [pc, #344]	@ (8002540 <main_loop+0x308>)
 80023e8:	f8c3 2007 	str.w	r2, [r3, #7]
	  BinaryPacket.Lon = NmeaData.Lon;
 80023ec:	4b4c      	ldr	r3, [pc, #304]	@ (8002520 <main_loop+0x2e8>)
 80023ee:	685a      	ldr	r2, [r3, #4]
 80023f0:	4b53      	ldr	r3, [pc, #332]	@ (8002540 <main_loop+0x308>)
 80023f2:	f8c3 200b 	str.w	r2, [r3, #11]
	  BinaryPacket.Speed = (uint16_t)round(NmeaData.Speed);
 80023f6:	4b4a      	ldr	r3, [pc, #296]	@ (8002520 <main_loop+0x2e8>)
 80023f8:	68db      	ldr	r3, [r3, #12]
 80023fa:	4618      	mov	r0, r3
 80023fc:	f7fe f8a4 	bl	8000548 <__aeabi_f2d>
 8002400:	4602      	mov	r2, r0
 8002402:	460b      	mov	r3, r1
 8002404:	ec43 2b10 	vmov	d0, r2, r3
 8002408:	f00a fe44 	bl	800d094 <round>
 800240c:	ec53 2b10 	vmov	r2, r3, d0
 8002410:	4610      	mov	r0, r2
 8002412:	4619      	mov	r1, r3
 8002414:	f7fe fbc8 	bl	8000ba8 <__aeabi_d2uiz>
 8002418:	4603      	mov	r3, r0
 800241a:	b29b      	uxth	r3, r3
 800241c:	b2da      	uxtb	r2, r3
 800241e:	4b48      	ldr	r3, [pc, #288]	@ (8002540 <main_loop+0x308>)
 8002420:	745a      	strb	r2, [r3, #17]
	  BinaryPacket.AscentRate = (uint16_t)round(NmeaData.AscentRate);
 8002422:	4b3f      	ldr	r3, [pc, #252]	@ (8002520 <main_loop+0x2e8>)
 8002424:	691b      	ldr	r3, [r3, #16]
 8002426:	4618      	mov	r0, r3
 8002428:	f7fe f88e 	bl	8000548 <__aeabi_f2d>
 800242c:	4602      	mov	r2, r0
 800242e:	460b      	mov	r3, r1
 8002430:	ec43 2b10 	vmov	d0, r2, r3
 8002434:	f00a fe2e 	bl	800d094 <round>
 8002438:	ec53 2b10 	vmov	r2, r3, d0
 800243c:	4610      	mov	r0, r2
 800243e:	4619      	mov	r1, r3
 8002440:	f7fe fbb2 	bl	8000ba8 <__aeabi_d2uiz>
 8002444:	4603      	mov	r3, r0
 8002446:	b29b      	uxth	r3, r3
 8002448:	b21a      	sxth	r2, r3
 800244a:	4b3d      	ldr	r3, [pc, #244]	@ (8002540 <main_loop+0x308>)
 800244c:	f8a3 2015 	strh.w	r2, [r3, #21]
	  BinaryPacket.Alt = (uint16_t)round(NmeaData.Alt);
 8002450:	4b33      	ldr	r3, [pc, #204]	@ (8002520 <main_loop+0x2e8>)
 8002452:	689b      	ldr	r3, [r3, #8]
 8002454:	4618      	mov	r0, r3
 8002456:	f7fe f877 	bl	8000548 <__aeabi_f2d>
 800245a:	4602      	mov	r2, r0
 800245c:	460b      	mov	r3, r1
 800245e:	ec43 2b10 	vmov	d0, r2, r3
 8002462:	f00a fe17 	bl	800d094 <round>
 8002466:	ec53 2b10 	vmov	r2, r3, d0
 800246a:	4610      	mov	r0, r2
 800246c:	4619      	mov	r1, r3
 800246e:	f7fe fb9b 	bl	8000ba8 <__aeabi_d2uiz>
 8002472:	4603      	mov	r3, r0
 8002474:	b29a      	uxth	r2, r3
 8002476:	4b32      	ldr	r3, [pc, #200]	@ (8002540 <main_loop+0x308>)
 8002478:	f8a3 200f 	strh.w	r2, [r3, #15]
	  BinaryPacket.Sats = NmeaData.Sats;
 800247c:	4b28      	ldr	r3, [pc, #160]	@ (8002520 <main_loop+0x2e8>)
 800247e:	7f1a      	ldrb	r2, [r3, #28]
 8002480:	4b2f      	ldr	r3, [pc, #188]	@ (8002540 <main_loop+0x308>)
 8002482:	749a      	strb	r2, [r3, #18]
	  BinaryPacket.BatVoltage = (uint16_t)round((float)(ADC_VBat*255)/5000);
 8002484:	4b2a      	ldr	r3, [pc, #168]	@ (8002530 <main_loop+0x2f8>)
 8002486:	681a      	ldr	r2, [r3, #0]
 8002488:	4613      	mov	r3, r2
 800248a:	021b      	lsls	r3, r3, #8
 800248c:	1a9b      	subs	r3, r3, r2
 800248e:	ee07 3a90 	vmov	s15, r3
 8002492:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002496:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8002548 <main_loop+0x310>
 800249a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800249e:	ee16 0a90 	vmov	r0, s13
 80024a2:	f7fe f851 	bl	8000548 <__aeabi_f2d>
 80024a6:	4602      	mov	r2, r0
 80024a8:	460b      	mov	r3, r1
 80024aa:	ec43 2b10 	vmov	d0, r2, r3
 80024ae:	f00a fdf1 	bl	800d094 <round>
 80024b2:	ec53 2b10 	vmov	r2, r3, d0
 80024b6:	4610      	mov	r0, r2
 80024b8:	4619      	mov	r1, r3
 80024ba:	f7fe fb75 	bl	8000ba8 <__aeabi_d2uiz>
 80024be:	4603      	mov	r3, r0
 80024c0:	b29b      	uxth	r3, r3
 80024c2:	b2da      	uxtb	r2, r3
 80024c4:	4b1e      	ldr	r3, [pc, #120]	@ (8002540 <main_loop+0x308>)
 80024c6:	751a      	strb	r2, [r3, #20]

	  BinaryPacket.Temp = LPS22_GetTemperature();
 80024c8:	f7ff fe92 	bl	80021f0 <LPS22_GetTemperature>
 80024cc:	eef0 7a40 	vmov.f32	s15, s0
 80024d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80024d4:	edc7 7a07 	vstr	s15, [r7, #28]
 80024d8:	7f3b      	ldrb	r3, [r7, #28]
 80024da:	b25a      	sxtb	r2, r3
 80024dc:	4b18      	ldr	r3, [pc, #96]	@ (8002540 <main_loop+0x308>)
 80024de:	74da      	strb	r2, [r3, #19]
	  BinaryPacket.ExtTemp = 0;
 80024e0:	4b17      	ldr	r3, [pc, #92]	@ (8002540 <main_loop+0x308>)
 80024e2:	2200      	movs	r2, #0
 80024e4:	75da      	strb	r2, [r3, #23]
 80024e6:	2200      	movs	r2, #0
 80024e8:	761a      	strb	r2, [r3, #24]
	  BinaryPacket.Press = LPS22_GetPressure()*10.0;
 80024ea:	f7ff fe55 	bl	8002198 <LPS22_GetPressure>
 80024ee:	ee10 3a10 	vmov	r3, s0
 80024f2:	4618      	mov	r0, r3
 80024f4:	f7fe f828 	bl	8000548 <__aeabi_f2d>
 80024f8:	f04f 0200 	mov.w	r2, #0
 80024fc:	4b13      	ldr	r3, [pc, #76]	@ (800254c <main_loop+0x314>)
 80024fe:	f7fe f87b 	bl	80005f8 <__aeabi_dmul>
 8002502:	4602      	mov	r2, r0
 8002504:	460b      	mov	r3, r1
 8002506:	4610      	mov	r0, r2
 8002508:	4619      	mov	r1, r3
 800250a:	f7fe fb4d 	bl	8000ba8 <__aeabi_d2uiz>
 800250e:	4603      	mov	r3, r0
 8002510:	b29a      	uxth	r2, r3
 8002512:	4b0b      	ldr	r3, [pc, #44]	@ (8002540 <main_loop+0x308>)
 8002514:	835a      	strh	r2, [r3, #26]
 8002516:	e01b      	b.n	8002550 <main_loop+0x318>
 8002518:	48000800 	.word	0x48000800
 800251c:	2000059c 	.word	0x2000059c
 8002520:	200009a0 	.word	0x200009a0
 8002524:	0800d17c 	.word	0x0800d17c
 8002528:	20000420 	.word	0x20000420
 800252c:	200002c0 	.word	0x200002c0
 8002530:	20000b70 	.word	0x20000b70
 8002534:	20000b74 	.word	0x20000b74
 8002538:	0800d204 	.word	0x0800d204
 800253c:	0800d220 	.word	0x0800d220
 8002540:	200009c0 	.word	0x200009c0
 8002544:	2000099c 	.word	0x2000099c
 8002548:	459c4000 	.word	0x459c4000
 800254c:	40240000 	.word	0x40240000
	  BinaryPacket.Hum = 0;
 8002550:	4b1a      	ldr	r3, [pc, #104]	@ (80025bc <main_loop+0x384>)
 8002552:	2200      	movs	r2, #0
 8002554:	765a      	strb	r2, [r3, #25]

	  BinaryPacket.Checksum = (uint16_t)crc16((char*)&BinaryPacket,sizeof(BinaryPacket)-2);
 8002556:	211e      	movs	r1, #30
 8002558:	4818      	ldr	r0, [pc, #96]	@ (80025bc <main_loop+0x384>)
 800255a:	f7ff f97b 	bl	8001854 <crc16>
 800255e:	4603      	mov	r3, r0
 8002560:	461a      	mov	r2, r3
 8002562:	4b16      	ldr	r3, [pc, #88]	@ (80025bc <main_loop+0x384>)
 8002564:	83da      	strh	r2, [r3, #30]

	  int pkt_len = sizeof(BinaryPacket);
 8002566:	2320      	movs	r3, #32
 8002568:	62bb      	str	r3, [r7, #40]	@ 0x28
	  //print_hex((char*)&BinaryPacket, pkt_len, buf_debug);

	  //HAL_UART_Transmit(&huart1, (uint8_t *)buf_debug, 128, 1000);
	  //HAL_UART_Transmit(&huart1, (uint8_t *)"\r\n", 2, 1000);

	  int coded_len = horus_l2_encode_tx_packet((unsigned char*)codedbuffer,(unsigned char*)&BinaryPacket,pkt_len);
 800256a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800256c:	4913      	ldr	r1, [pc, #76]	@ (80025bc <main_loop+0x384>)
 800256e:	4814      	ldr	r0, [pc, #80]	@ (80025c0 <main_loop+0x388>)
 8002570:	f7ff fb40 	bl	8001bf4 <horus_l2_encode_tx_packet>
 8002574:	6278      	str	r0, [r7, #36]	@ 0x24

	  memset(buf_debug, 0, sizeof(buf_debug));
 8002576:	22c8      	movs	r2, #200	@ 0xc8
 8002578:	2100      	movs	r1, #0
 800257a:	4812      	ldr	r0, [pc, #72]	@ (80025c4 <main_loop+0x38c>)
 800257c:	f008 f89f 	bl	800a6be <memset>
	  print_hex(codedbuffer, coded_len, buf_debug);
 8002580:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002582:	b2db      	uxtb	r3, r3
 8002584:	4a0f      	ldr	r2, [pc, #60]	@ (80025c4 <main_loop+0x38c>)
 8002586:	4619      	mov	r1, r3
 8002588:	480d      	ldr	r0, [pc, #52]	@ (80025c0 <main_loop+0x388>)
 800258a:	f7ff fc53 	bl	8001e34 <print_hex>

	  //HAL_UART_Transmit(&huart1, (uint8_t *)buf_debug, 200, 1000);
	  //HAL_UART_Transmit(&huart1, (uint8_t *)"\r\n", 2, 1000);
	  FSK4_start_TX(&codedbuffer[0], coded_len);
 800258e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002590:	b2db      	uxtb	r3, r3
 8002592:	4619      	mov	r1, r3
 8002594:	480a      	ldr	r0, [pc, #40]	@ (80025c0 <main_loop+0x388>)
 8002596:	f7ff f915 	bl	80017c4 <FSK4_start_TX>
	  counter++;
 800259a:	4b0b      	ldr	r3, [pc, #44]	@ (80025c8 <main_loop+0x390>)
 800259c:	881b      	ldrh	r3, [r3, #0]
 800259e:	3301      	adds	r3, #1
 80025a0:	b29a      	uxth	r2, r3
 80025a2:	4b09      	ldr	r3, [pc, #36]	@ (80025c8 <main_loop+0x390>)
 80025a4:	801a      	strh	r2, [r3, #0]
	  /* HORUS PACKAGE */
	  /* ------------- */

	  HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 80025a6:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 80025aa:	4808      	ldr	r0, [pc, #32]	@ (80025cc <main_loop+0x394>)
 80025ac:	f003 fcc4 	bl	8005f38 <HAL_GPIO_TogglePin>
}
 80025b0:	bf00      	nop
 80025b2:	3734      	adds	r7, #52	@ 0x34
 80025b4:	46bd      	mov	sp, r7
 80025b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025ba:	bf00      	nop
 80025bc:	200009c0 	.word	0x200009c0
 80025c0:	200009e0 	.word	0x200009e0
 80025c4:	20000aa8 	.word	0x20000aa8
 80025c8:	2000099c 	.word	0x2000099c
 80025cc:	48000800 	.word	0x48000800

080025d0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80025d0:	b580      	push	{r7, lr}
 80025d2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80025d4:	f001 fce1 	bl	8003f9a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80025d8:	f000 f856 	bl	8002688 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80025dc:	f000 fa84 	bl	8002ae8 <MX_GPIO_Init>
  MX_DMA_Init();
 80025e0:	f000 fa64 	bl	8002aac <MX_DMA_Init>
  MX_USART1_UART_Init();
 80025e4:	f000 fa02 	bl	80029ec <MX_USART1_UART_Init>
  MX_USART3_UART_Init();
 80025e8:	f000 fa30 	bl	8002a4c <MX_USART3_UART_Init>
  MX_SPI1_Init();
 80025ec:	f000 f91e 	bl	800282c <MX_SPI1_Init>
  MX_ADC1_Init();
 80025f0:	f000 f8a8 	bl	8002744 <MX_ADC1_Init>
  MX_TIM2_Init();
 80025f4:	f000 f9ac 	bl	8002950 <MX_TIM2_Init>
  MX_TIM1_Init();
 80025f8:	f000 f956 	bl	80028a8 <MX_TIM1_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(POWER_ON_GPIO_Port, POWER_ON_Pin, 1);
 80025fc:	2201      	movs	r2, #1
 80025fe:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002602:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002606:	f003 fc7f 	bl	8005f08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPS_ON_GPIO_Port, GPS_ON_Pin, 1);
 800260a:	2201      	movs	r2, #1
 800260c:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8002610:	4815      	ldr	r0, [pc, #84]	@ (8002668 <main+0x98>)
 8002612:	f003 fc79 	bl	8005f08 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(Temp_EN_GPIO_Port, Temp_EN_Pin, 1);
 8002616:	2201      	movs	r2, #1
 8002618:	2120      	movs	r1, #32
 800261a:	4814      	ldr	r0, [pc, #80]	@ (800266c <main+0x9c>)
 800261c:	f003 fc74 	bl	8005f08 <HAL_GPIO_WritePin>

  adf_setup();   //prepares radio chip - leaves radio enabled. Has to be called when radio is turned on
 8002620:	f7fe ffe2 	bl	80015e8 <adf_setup>

  HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 8002624:	217f      	movs	r1, #127	@ 0x7f
 8002626:	4812      	ldr	r0, [pc, #72]	@ (8002670 <main+0xa0>)
 8002628:	f002 ff8a 	bl	8005540 <HAL_ADCEx_Calibration_Start>

  __HAL_SPI_ENABLE(&hspi1);
 800262c:	4b11      	ldr	r3, [pc, #68]	@ (8002674 <main+0xa4>)
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	681a      	ldr	r2, [r3, #0]
 8002632:	4b10      	ldr	r3, [pc, #64]	@ (8002674 <main+0xa4>)
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800263a:	601a      	str	r2, [r3, #0]
  LPS22_Config();
 800263c:	f7ff fcfa 	bl	8002034 <LPS22_Config>
  LPS22_Init();
 8002640:	f7ff fd0a 	bl	8002058 <LPS22_Init>

  HAL_UARTEx_ReceiveToIdle_DMA(&huart3, (uint8_t *)RxBuffer, RxBuffer_SIZE); //re-enable the DMA interrupt
 8002644:	2220      	movs	r2, #32
 8002646:	490c      	ldr	r1, [pc, #48]	@ (8002678 <main+0xa8>)
 8002648:	480c      	ldr	r0, [pc, #48]	@ (800267c <main+0xac>)
 800264a:	f006 fa8d 	bl	8008b68 <HAL_UARTEx_ReceiveToIdle_DMA>
  __HAL_DMA_DISABLE_IT(&hdma_usart3_rx, DMA_IT_HT); //disable the half transfer interrupt
 800264e:	4b0c      	ldr	r3, [pc, #48]	@ (8002680 <main+0xb0>)
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	681a      	ldr	r2, [r3, #0]
 8002654:	4b0a      	ldr	r3, [pc, #40]	@ (8002680 <main+0xb0>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	f022 0204 	bic.w	r2, r2, #4
 800265c:	601a      	str	r2, [r3, #0]

  HAL_TIM_Base_Start_IT(&htim1);
 800265e:	4809      	ldr	r0, [pc, #36]	@ (8002684 <main+0xb4>)
 8002660:	f004 ff82 	bl	8007568 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8002664:	bf00      	nop
 8002666:	e7fd      	b.n	8002664 <main+0x94>
 8002668:	48000400 	.word	0x48000400
 800266c:	48000800 	.word	0x48000800
 8002670:	200002c0 	.word	0x200002c0
 8002674:	20000324 	.word	0x20000324
 8002678:	2000057c 	.word	0x2000057c
 800267c:	200004a8 	.word	0x200004a8
 8002680:	20000530 	.word	0x20000530
 8002684:	20000388 	.word	0x20000388

08002688 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002688:	b580      	push	{r7, lr}
 800268a:	b096      	sub	sp, #88	@ 0x58
 800268c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800268e:	f107 0314 	add.w	r3, r7, #20
 8002692:	2244      	movs	r2, #68	@ 0x44
 8002694:	2100      	movs	r1, #0
 8002696:	4618      	mov	r0, r3
 8002698:	f008 f811 	bl	800a6be <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800269c:	463b      	mov	r3, r7
 800269e:	2200      	movs	r2, #0
 80026a0:	601a      	str	r2, [r3, #0]
 80026a2:	605a      	str	r2, [r3, #4]
 80026a4:	609a      	str	r2, [r3, #8]
 80026a6:	60da      	str	r2, [r3, #12]
 80026a8:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80026aa:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80026ae:	f003 fc6b 	bl	8005f88 <HAL_PWREx_ControlVoltageScaling>
 80026b2:	4603      	mov	r3, r0
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d001      	beq.n	80026bc <SystemClock_Config+0x34>
  {
    Error_Handler();
 80026b8:	f000 fb58 	bl	8002d6c <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80026bc:	2301      	movs	r3, #1
 80026be:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80026c0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80026c4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80026c6:	2302      	movs	r3, #2
 80026c8:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80026ca:	2303      	movs	r3, #3
 80026cc:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 80026ce:	2301      	movs	r3, #1
 80026d0:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 36;
 80026d2:	2324      	movs	r3, #36	@ 0x24
 80026d4:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 80026d6:	2307      	movs	r3, #7
 80026d8:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80026da:	2302      	movs	r3, #2
 80026dc:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV8;
 80026de:	2308      	movs	r3, #8
 80026e0:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80026e2:	f107 0314 	add.w	r3, r7, #20
 80026e6:	4618      	mov	r0, r3
 80026e8:	f003 fca4 	bl	8006034 <HAL_RCC_OscConfig>
 80026ec:	4603      	mov	r3, r0
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d001      	beq.n	80026f6 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80026f2:	f000 fb3b 	bl	8002d6c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80026f6:	230f      	movs	r3, #15
 80026f8:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80026fa:	2303      	movs	r3, #3
 80026fc:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80026fe:	2300      	movs	r3, #0
 8002700:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002702:	2300      	movs	r3, #0
 8002704:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002706:	2300      	movs	r3, #0
 8002708:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800270a:	463b      	mov	r3, r7
 800270c:	2102      	movs	r1, #2
 800270e:	4618      	mov	r0, r3
 8002710:	f004 f8a4 	bl	800685c <HAL_RCC_ClockConfig>
 8002714:	4603      	mov	r3, r0
 8002716:	2b00      	cmp	r3, #0
 8002718:	d001      	beq.n	800271e <SystemClock_Config+0x96>
  {
    Error_Handler();
 800271a:	f000 fb27 	bl	8002d6c <Error_Handler>
  }
  __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 800271e:	4b08      	ldr	r3, [pc, #32]	@ (8002740 <SystemClock_Config+0xb8>)
 8002720:	68db      	ldr	r3, [r3, #12]
 8002722:	4a07      	ldr	r2, [pc, #28]	@ (8002740 <SystemClock_Config+0xb8>)
 8002724:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002728:	60d3      	str	r3, [r2, #12]
  HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_PLLCLK, RCC_MCODIV_4);
 800272a:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 800272e:	f04f 61a0 	mov.w	r1, #83886080	@ 0x5000000
 8002732:	2000      	movs	r0, #0
 8002734:	f004 f992 	bl	8006a5c <HAL_RCC_MCOConfig>
}
 8002738:	bf00      	nop
 800273a:	3758      	adds	r7, #88	@ 0x58
 800273c:	46bd      	mov	sp, r7
 800273e:	bd80      	pop	{r7, pc}
 8002740:	40021000 	.word	0x40021000

08002744 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8002744:	b580      	push	{r7, lr}
 8002746:	b086      	sub	sp, #24
 8002748:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800274a:	463b      	mov	r3, r7
 800274c:	2200      	movs	r2, #0
 800274e:	601a      	str	r2, [r3, #0]
 8002750:	605a      	str	r2, [r3, #4]
 8002752:	609a      	str	r2, [r3, #8]
 8002754:	60da      	str	r2, [r3, #12]
 8002756:	611a      	str	r2, [r3, #16]
 8002758:	615a      	str	r2, [r3, #20]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 800275a:	4b30      	ldr	r3, [pc, #192]	@ (800281c <MX_ADC1_Init+0xd8>)
 800275c:	4a30      	ldr	r2, [pc, #192]	@ (8002820 <MX_ADC1_Init+0xdc>)
 800275e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV128;
 8002760:	4b2e      	ldr	r3, [pc, #184]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002762:	f44f 1220 	mov.w	r2, #2621440	@ 0x280000
 8002766:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8002768:	4b2c      	ldr	r3, [pc, #176]	@ (800281c <MX_ADC1_Init+0xd8>)
 800276a:	2200      	movs	r2, #0
 800276c:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800276e:	4b2b      	ldr	r3, [pc, #172]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002770:	2200      	movs	r2, #0
 8002772:	60da      	str	r2, [r3, #12]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8002774:	4b29      	ldr	r3, [pc, #164]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002776:	2201      	movs	r2, #1
 8002778:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800277a:	4b28      	ldr	r3, [pc, #160]	@ (800281c <MX_ADC1_Init+0xd8>)
 800277c:	2204      	movs	r2, #4
 800277e:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8002780:	4b26      	ldr	r3, [pc, #152]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002782:	2200      	movs	r2, #0
 8002784:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8002786:	4b25      	ldr	r3, [pc, #148]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002788:	2200      	movs	r2, #0
 800278a:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 2;
 800278c:	4b23      	ldr	r3, [pc, #140]	@ (800281c <MX_ADC1_Init+0xd8>)
 800278e:	2202      	movs	r2, #2
 8002790:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002792:	4b22      	ldr	r3, [pc, #136]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002794:	2200      	movs	r2, #0
 8002796:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800279a:	4b20      	ldr	r3, [pc, #128]	@ (800281c <MX_ADC1_Init+0xd8>)
 800279c:	2200      	movs	r2, #0
 800279e:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80027a0:	4b1e      	ldr	r3, [pc, #120]	@ (800281c <MX_ADC1_Init+0xd8>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80027a6:	4b1d      	ldr	r3, [pc, #116]	@ (800281c <MX_ADC1_Init+0xd8>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80027ae:	4b1b      	ldr	r3, [pc, #108]	@ (800281c <MX_ADC1_Init+0xd8>)
 80027b0:	2200      	movs	r2, #0
 80027b2:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 80027b4:	4b19      	ldr	r3, [pc, #100]	@ (800281c <MX_ADC1_Init+0xd8>)
 80027b6:	2200      	movs	r2, #0
 80027b8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80027bc:	4817      	ldr	r0, [pc, #92]	@ (800281c <MX_ADC1_Init+0xd8>)
 80027be:	f001 fe9b 	bl	80044f8 <HAL_ADC_Init>
 80027c2:	4603      	mov	r3, r0
 80027c4:	2b00      	cmp	r3, #0
 80027c6:	d001      	beq.n	80027cc <MX_ADC1_Init+0x88>
  {
    Error_Handler();
 80027c8:	f000 fad0 	bl	8002d6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_15;
 80027cc:	4b15      	ldr	r3, [pc, #84]	@ (8002824 <MX_ADC1_Init+0xe0>)
 80027ce:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80027d0:	2306      	movs	r3, #6
 80027d2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES_5;
 80027d4:	2302      	movs	r3, #2
 80027d6:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80027d8:	237f      	movs	r3, #127	@ 0x7f
 80027da:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80027dc:	2304      	movs	r3, #4
 80027de:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 80027e0:	2300      	movs	r3, #0
 80027e2:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80027e4:	463b      	mov	r3, r7
 80027e6:	4619      	mov	r1, r3
 80027e8:	480c      	ldr	r0, [pc, #48]	@ (800281c <MX_ADC1_Init+0xd8>)
 80027ea:	f002 f8f9 	bl	80049e0 <HAL_ADC_ConfigChannel>
 80027ee:	4603      	mov	r3, r0
 80027f0:	2b00      	cmp	r3, #0
 80027f2:	d001      	beq.n	80027f8 <MX_ADC1_Init+0xb4>
  {
    Error_Handler();
 80027f4:	f000 faba 	bl	8002d6c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_13;
 80027f8:	4b0b      	ldr	r3, [pc, #44]	@ (8002828 <MX_ADC1_Init+0xe4>)
 80027fa:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80027fc:	230c      	movs	r3, #12
 80027fe:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002800:	463b      	mov	r3, r7
 8002802:	4619      	mov	r1, r3
 8002804:	4805      	ldr	r0, [pc, #20]	@ (800281c <MX_ADC1_Init+0xd8>)
 8002806:	f002 f8eb 	bl	80049e0 <HAL_ADC_ConfigChannel>
 800280a:	4603      	mov	r3, r0
 800280c:	2b00      	cmp	r3, #0
 800280e:	d001      	beq.n	8002814 <MX_ADC1_Init+0xd0>
  {
    Error_Handler();
 8002810:	f000 faac 	bl	8002d6c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8002814:	bf00      	nop
 8002816:	3718      	adds	r7, #24
 8002818:	46bd      	mov	sp, r7
 800281a:	bd80      	pop	{r7, pc}
 800281c:	200002c0 	.word	0x200002c0
 8002820:	50040000 	.word	0x50040000
 8002824:	3ef08000 	.word	0x3ef08000
 8002828:	36902000 	.word	0x36902000

0800282c <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 800282c:	b580      	push	{r7, lr}
 800282e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8002830:	4b1b      	ldr	r3, [pc, #108]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002832:	4a1c      	ldr	r2, [pc, #112]	@ (80028a4 <MX_SPI1_Init+0x78>)
 8002834:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8002836:	4b1a      	ldr	r3, [pc, #104]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002838:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800283c:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800283e:	4b18      	ldr	r3, [pc, #96]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002840:	2200      	movs	r2, #0
 8002842:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8002844:	4b16      	ldr	r3, [pc, #88]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002846:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 800284a:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 800284c:	4b14      	ldr	r3, [pc, #80]	@ (80028a0 <MX_SPI1_Init+0x74>)
 800284e:	2202      	movs	r2, #2
 8002850:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8002852:	4b13      	ldr	r3, [pc, #76]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002854:	2201      	movs	r2, #1
 8002856:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8002858:	4b11      	ldr	r3, [pc, #68]	@ (80028a0 <MX_SPI1_Init+0x74>)
 800285a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800285e:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 8002860:	4b0f      	ldr	r3, [pc, #60]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002862:	2238      	movs	r2, #56	@ 0x38
 8002864:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002866:	4b0e      	ldr	r3, [pc, #56]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002868:	2200      	movs	r2, #0
 800286a:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800286c:	4b0c      	ldr	r3, [pc, #48]	@ (80028a0 <MX_SPI1_Init+0x74>)
 800286e:	2200      	movs	r2, #0
 8002870:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 8002872:	4b0b      	ldr	r3, [pc, #44]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002874:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002878:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 7;
 800287a:	4b09      	ldr	r3, [pc, #36]	@ (80028a0 <MX_SPI1_Init+0x74>)
 800287c:	2207      	movs	r2, #7
 800287e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8002880:	4b07      	ldr	r3, [pc, #28]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002882:	2200      	movs	r2, #0
 8002884:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8002886:	4b06      	ldr	r3, [pc, #24]	@ (80028a0 <MX_SPI1_Init+0x74>)
 8002888:	2200      	movs	r2, #0
 800288a:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 800288c:	4804      	ldr	r0, [pc, #16]	@ (80028a0 <MX_SPI1_Init+0x74>)
 800288e:	f004 fd47 	bl	8007320 <HAL_SPI_Init>
 8002892:	4603      	mov	r3, r0
 8002894:	2b00      	cmp	r3, #0
 8002896:	d001      	beq.n	800289c <MX_SPI1_Init+0x70>
  {
    Error_Handler();
 8002898:	f000 fa68 	bl	8002d6c <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 800289c:	bf00      	nop
 800289e:	bd80      	pop	{r7, pc}
 80028a0:	20000324 	.word	0x20000324
 80028a4:	40013000 	.word	0x40013000

080028a8 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80028a8:	b580      	push	{r7, lr}
 80028aa:	b088      	sub	sp, #32
 80028ac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80028ae:	f107 0310 	add.w	r3, r7, #16
 80028b2:	2200      	movs	r2, #0
 80028b4:	601a      	str	r2, [r3, #0]
 80028b6:	605a      	str	r2, [r3, #4]
 80028b8:	609a      	str	r2, [r3, #8]
 80028ba:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80028bc:	1d3b      	adds	r3, r7, #4
 80028be:	2200      	movs	r2, #0
 80028c0:	601a      	str	r2, [r3, #0]
 80028c2:	605a      	str	r2, [r3, #4]
 80028c4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80028c6:	4b20      	ldr	r3, [pc, #128]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028c8:	4a20      	ldr	r2, [pc, #128]	@ (800294c <MX_TIM1_Init+0xa4>)
 80028ca:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 35999;
 80028cc:	4b1e      	ldr	r3, [pc, #120]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028ce:	f648 429f 	movw	r2, #35999	@ 0x8c9f
 80028d2:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028d4:	4b1c      	ldr	r3, [pc, #112]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028d6:	2200      	movs	r2, #0
 80028d8:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 5000;
 80028da:	4b1b      	ldr	r3, [pc, #108]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028dc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80028e0:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80028e2:	4b19      	ldr	r3, [pc, #100]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028e4:	2200      	movs	r2, #0
 80028e6:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80028e8:	4b17      	ldr	r3, [pc, #92]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028ea:	2200      	movs	r2, #0
 80028ec:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80028ee:	4b16      	ldr	r3, [pc, #88]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028f0:	2200      	movs	r2, #0
 80028f2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80028f4:	4814      	ldr	r0, [pc, #80]	@ (8002948 <MX_TIM1_Init+0xa0>)
 80028f6:	f004 fddf 	bl	80074b8 <HAL_TIM_Base_Init>
 80028fa:	4603      	mov	r3, r0
 80028fc:	2b00      	cmp	r3, #0
 80028fe:	d001      	beq.n	8002904 <MX_TIM1_Init+0x5c>
  {
    Error_Handler();
 8002900:	f000 fa34 	bl	8002d6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002904:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002908:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800290a:	f107 0310 	add.w	r3, r7, #16
 800290e:	4619      	mov	r1, r3
 8002910:	480d      	ldr	r0, [pc, #52]	@ (8002948 <MX_TIM1_Init+0xa0>)
 8002912:	f004 ff84 	bl	800781e <HAL_TIM_ConfigClockSource>
 8002916:	4603      	mov	r3, r0
 8002918:	2b00      	cmp	r3, #0
 800291a:	d001      	beq.n	8002920 <MX_TIM1_Init+0x78>
  {
    Error_Handler();
 800291c:	f000 fa26 	bl	8002d6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002920:	2300      	movs	r3, #0
 8002922:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8002924:	2300      	movs	r3, #0
 8002926:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002928:	2300      	movs	r3, #0
 800292a:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800292c:	1d3b      	adds	r3, r7, #4
 800292e:	4619      	mov	r1, r3
 8002930:	4805      	ldr	r0, [pc, #20]	@ (8002948 <MX_TIM1_Init+0xa0>)
 8002932:	f005 f96f 	bl	8007c14 <HAL_TIMEx_MasterConfigSynchronization>
 8002936:	4603      	mov	r3, r0
 8002938:	2b00      	cmp	r3, #0
 800293a:	d001      	beq.n	8002940 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 800293c:	f000 fa16 	bl	8002d6c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8002940:	bf00      	nop
 8002942:	3720      	adds	r7, #32
 8002944:	46bd      	mov	sp, r7
 8002946:	bd80      	pop	{r7, pc}
 8002948:	20000388 	.word	0x20000388
 800294c:	40012c00 	.word	0x40012c00

08002950 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002950:	b580      	push	{r7, lr}
 8002952:	b088      	sub	sp, #32
 8002954:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002956:	f107 0310 	add.w	r3, r7, #16
 800295a:	2200      	movs	r2, #0
 800295c:	601a      	str	r2, [r3, #0]
 800295e:	605a      	str	r2, [r3, #4]
 8002960:	609a      	str	r2, [r3, #8]
 8002962:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002964:	1d3b      	adds	r3, r7, #4
 8002966:	2200      	movs	r2, #0
 8002968:	601a      	str	r2, [r3, #0]
 800296a:	605a      	str	r2, [r3, #4]
 800296c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800296e:	4b1e      	ldr	r3, [pc, #120]	@ (80029e8 <MX_TIM2_Init+0x98>)
 8002970:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002974:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 359;
 8002976:	4b1c      	ldr	r3, [pc, #112]	@ (80029e8 <MX_TIM2_Init+0x98>)
 8002978:	f240 1267 	movw	r2, #359	@ 0x167
 800297c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800297e:	4b1a      	ldr	r3, [pc, #104]	@ (80029e8 <MX_TIM2_Init+0x98>)
 8002980:	2200      	movs	r2, #0
 8002982:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 999;
 8002984:	4b18      	ldr	r3, [pc, #96]	@ (80029e8 <MX_TIM2_Init+0x98>)
 8002986:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800298a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800298c:	4b16      	ldr	r3, [pc, #88]	@ (80029e8 <MX_TIM2_Init+0x98>)
 800298e:	2200      	movs	r2, #0
 8002990:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002992:	4b15      	ldr	r3, [pc, #84]	@ (80029e8 <MX_TIM2_Init+0x98>)
 8002994:	2200      	movs	r2, #0
 8002996:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002998:	4813      	ldr	r0, [pc, #76]	@ (80029e8 <MX_TIM2_Init+0x98>)
 800299a:	f004 fd8d 	bl	80074b8 <HAL_TIM_Base_Init>
 800299e:	4603      	mov	r3, r0
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d001      	beq.n	80029a8 <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 80029a4:	f000 f9e2 	bl	8002d6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80029a8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80029ac:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80029ae:	f107 0310 	add.w	r3, r7, #16
 80029b2:	4619      	mov	r1, r3
 80029b4:	480c      	ldr	r0, [pc, #48]	@ (80029e8 <MX_TIM2_Init+0x98>)
 80029b6:	f004 ff32 	bl	800781e <HAL_TIM_ConfigClockSource>
 80029ba:	4603      	mov	r3, r0
 80029bc:	2b00      	cmp	r3, #0
 80029be:	d001      	beq.n	80029c4 <MX_TIM2_Init+0x74>
  {
    Error_Handler();
 80029c0:	f000 f9d4 	bl	8002d6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80029c4:	2300      	movs	r3, #0
 80029c6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80029c8:	2300      	movs	r3, #0
 80029ca:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80029cc:	1d3b      	adds	r3, r7, #4
 80029ce:	4619      	mov	r1, r3
 80029d0:	4805      	ldr	r0, [pc, #20]	@ (80029e8 <MX_TIM2_Init+0x98>)
 80029d2:	f005 f91f 	bl	8007c14 <HAL_TIMEx_MasterConfigSynchronization>
 80029d6:	4603      	mov	r3, r0
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d001      	beq.n	80029e0 <MX_TIM2_Init+0x90>
  {
    Error_Handler();
 80029dc:	f000 f9c6 	bl	8002d6c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80029e0:	bf00      	nop
 80029e2:	3720      	adds	r7, #32
 80029e4:	46bd      	mov	sp, r7
 80029e6:	bd80      	pop	{r7, pc}
 80029e8:	200003d4 	.word	0x200003d4

080029ec <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80029ec:	b580      	push	{r7, lr}
 80029ee:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80029f0:	4b14      	ldr	r3, [pc, #80]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 80029f2:	4a15      	ldr	r2, [pc, #84]	@ (8002a48 <MX_USART1_UART_Init+0x5c>)
 80029f4:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80029f6:	4b13      	ldr	r3, [pc, #76]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 80029f8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80029fc:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80029fe:	4b11      	ldr	r3, [pc, #68]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a00:	2200      	movs	r2, #0
 8002a02:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002a04:	4b0f      	ldr	r3, [pc, #60]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a06:	2200      	movs	r2, #0
 8002a08:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002a0a:	4b0e      	ldr	r3, [pc, #56]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8002a10:	4b0c      	ldr	r3, [pc, #48]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a12:	220c      	movs	r2, #12
 8002a14:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002a16:	4b0b      	ldr	r3, [pc, #44]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a18:	2200      	movs	r2, #0
 8002a1a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002a1c:	4b09      	ldr	r3, [pc, #36]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a1e:	2200      	movs	r2, #0
 8002a20:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002a22:	4b08      	ldr	r3, [pc, #32]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a24:	2200      	movs	r2, #0
 8002a26:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002a28:	4b06      	ldr	r3, [pc, #24]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8002a2e:	4805      	ldr	r0, [pc, #20]	@ (8002a44 <MX_USART1_UART_Init+0x58>)
 8002a30:	f005 f974 	bl	8007d1c <HAL_UART_Init>
 8002a34:	4603      	mov	r3, r0
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d001      	beq.n	8002a3e <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 8002a3a:	f000 f997 	bl	8002d6c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8002a3e:	bf00      	nop
 8002a40:	bd80      	pop	{r7, pc}
 8002a42:	bf00      	nop
 8002a44:	20000420 	.word	0x20000420
 8002a48:	40013800 	.word	0x40013800

08002a4c <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8002a4c:	b580      	push	{r7, lr}
 8002a4e:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8002a50:	4b14      	ldr	r3, [pc, #80]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a52:	4a15      	ldr	r2, [pc, #84]	@ (8002aa8 <MX_USART3_UART_Init+0x5c>)
 8002a54:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 8002a56:	4b13      	ldr	r3, [pc, #76]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a58:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8002a5c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8002a5e:	4b11      	ldr	r3, [pc, #68]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a60:	2200      	movs	r2, #0
 8002a62:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8002a64:	4b0f      	ldr	r3, [pc, #60]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a66:	2200      	movs	r2, #0
 8002a68:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8002a6a:	4b0e      	ldr	r3, [pc, #56]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a6c:	2200      	movs	r2, #0
 8002a6e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_RX;
 8002a70:	4b0c      	ldr	r3, [pc, #48]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a72:	2204      	movs	r2, #4
 8002a74:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002a76:	4b0b      	ldr	r3, [pc, #44]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a78:	2200      	movs	r2, #0
 8002a7a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8002a7c:	4b09      	ldr	r3, [pc, #36]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a7e:	2200      	movs	r2, #0
 8002a80:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002a82:	4b08      	ldr	r3, [pc, #32]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a84:	2200      	movs	r2, #0
 8002a86:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002a88:	4b06      	ldr	r3, [pc, #24]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a8a:	2200      	movs	r2, #0
 8002a8c:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8002a8e:	4805      	ldr	r0, [pc, #20]	@ (8002aa4 <MX_USART3_UART_Init+0x58>)
 8002a90:	f005 f944 	bl	8007d1c <HAL_UART_Init>
 8002a94:	4603      	mov	r3, r0
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d001      	beq.n	8002a9e <MX_USART3_UART_Init+0x52>
  {
    Error_Handler();
 8002a9a:	f000 f967 	bl	8002d6c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8002a9e:	bf00      	nop
 8002aa0:	bd80      	pop	{r7, pc}
 8002aa2:	bf00      	nop
 8002aa4:	200004a8 	.word	0x200004a8
 8002aa8:	40004800 	.word	0x40004800

08002aac <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002aac:	b580      	push	{r7, lr}
 8002aae:	b082      	sub	sp, #8
 8002ab0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002ab2:	4b0c      	ldr	r3, [pc, #48]	@ (8002ae4 <MX_DMA_Init+0x38>)
 8002ab4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002ab6:	4a0b      	ldr	r2, [pc, #44]	@ (8002ae4 <MX_DMA_Init+0x38>)
 8002ab8:	f043 0301 	orr.w	r3, r3, #1
 8002abc:	6493      	str	r3, [r2, #72]	@ 0x48
 8002abe:	4b09      	ldr	r3, [pc, #36]	@ (8002ae4 <MX_DMA_Init+0x38>)
 8002ac0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002ac2:	f003 0301 	and.w	r3, r3, #1
 8002ac6:	607b      	str	r3, [r7, #4]
 8002ac8:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 8002aca:	2200      	movs	r2, #0
 8002acc:	2100      	movs	r1, #0
 8002ace:	200d      	movs	r0, #13
 8002ad0:	f002 fe71 	bl	80057b6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8002ad4:	200d      	movs	r0, #13
 8002ad6:	f002 fe8a 	bl	80057ee <HAL_NVIC_EnableIRQ>

}
 8002ada:	bf00      	nop
 8002adc:	3708      	adds	r7, #8
 8002ade:	46bd      	mov	sp, r7
 8002ae0:	bd80      	pop	{r7, pc}
 8002ae2:	bf00      	nop
 8002ae4:	40021000 	.word	0x40021000

08002ae8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002ae8:	b580      	push	{r7, lr}
 8002aea:	b08a      	sub	sp, #40	@ 0x28
 8002aec:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002aee:	f107 0314 	add.w	r3, r7, #20
 8002af2:	2200      	movs	r2, #0
 8002af4:	601a      	str	r2, [r3, #0]
 8002af6:	605a      	str	r2, [r3, #4]
 8002af8:	609a      	str	r2, [r3, #8]
 8002afa:	60da      	str	r2, [r3, #12]
 8002afc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002afe:	4b54      	ldr	r3, [pc, #336]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b02:	4a53      	ldr	r2, [pc, #332]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b04:	f043 0304 	orr.w	r3, r3, #4
 8002b08:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002b0a:	4b51      	ldr	r3, [pc, #324]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b0e:	f003 0304 	and.w	r3, r3, #4
 8002b12:	613b      	str	r3, [r7, #16]
 8002b14:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002b16:	4b4e      	ldr	r3, [pc, #312]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b18:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b1a:	4a4d      	ldr	r2, [pc, #308]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b1c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002b20:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002b22:	4b4b      	ldr	r3, [pc, #300]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b24:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b26:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002b2a:	60fb      	str	r3, [r7, #12]
 8002b2c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b2e:	4b48      	ldr	r3, [pc, #288]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b30:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b32:	4a47      	ldr	r2, [pc, #284]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b34:	f043 0301 	orr.w	r3, r3, #1
 8002b38:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002b3a:	4b45      	ldr	r3, [pc, #276]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b3c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b3e:	f003 0301 	and.w	r3, r3, #1
 8002b42:	60bb      	str	r3, [r7, #8]
 8002b44:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002b46:	4b42      	ldr	r3, [pc, #264]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b48:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b4a:	4a41      	ldr	r2, [pc, #260]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b4c:	f043 0302 	orr.w	r3, r3, #2
 8002b50:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8002b52:	4b3f      	ldr	r3, [pc, #252]	@ (8002c50 <MX_GPIO_Init+0x168>)
 8002b54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002b56:	f003 0302 	and.w	r3, r3, #2
 8002b5a:	607b      	str	r3, [r7, #4]
 8002b5c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LED_Pin|Temp_EN_Pin|ADF_CLK_Pin|ADF_Data_Pin
 8002b5e:	2200      	movs	r2, #0
 8002b60:	f245 31a0 	movw	r1, #21408	@ 0x53a0
 8002b64:	483b      	ldr	r0, [pc, #236]	@ (8002c54 <MX_GPIO_Init+0x16c>)
 8002b66:	f003 f9cf 	bl	8005f08 <HAL_GPIO_WritePin>
                          |ADF_LE_Pin|GPIO_PIN_12, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LPS_CS_Pin|POWER_ON_Pin, GPIO_PIN_RESET);
 8002b6a:	2200      	movs	r2, #0
 8002b6c:	f241 0110 	movw	r1, #4112	@ 0x1010
 8002b70:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002b74:	f003 f9c8 	bl	8005f08 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, RF_Boost_Pin|ADF_TX_Data_Pin|GPS_ON_Pin|RADIO_EN_Pin
 8002b78:	2200      	movs	r2, #0
 8002b7a:	f24f 0108 	movw	r1, #61448	@ 0xf008
 8002b7e:	4836      	ldr	r0, [pc, #216]	@ (8002c58 <MX_GPIO_Init+0x170>)
 8002b80:	f003 f9c2 	bl	8005f08 <HAL_GPIO_WritePin>
                          |ADF_CE_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Temp_475k_Pin|Temp_36_5k_Pin|Temp_12_1k_Pin|Temp_2M_Pin
 8002b84:	2201      	movs	r2, #1
 8002b86:	f44f 715c 	mov.w	r1, #880	@ 0x370
 8002b8a:	4833      	ldr	r0, [pc, #204]	@ (8002c58 <MX_GPIO_Init+0x170>)
 8002b8c:	f003 f9bc 	bl	8005f08 <HAL_GPIO_WritePin>
                          |Temp_330k_Pin, GPIO_PIN_SET);

  /*Configure GPIO pin : BUTTON_Pin */
  GPIO_InitStruct.Pin = BUTTON_Pin;
 8002b90:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002b94:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002b96:	2300      	movs	r3, #0
 8002b98:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b9a:	2300      	movs	r3, #0
 8002b9c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(BUTTON_GPIO_Port, &GPIO_InitStruct);
 8002b9e:	f107 0314 	add.w	r3, r7, #20
 8002ba2:	4619      	mov	r1, r3
 8002ba4:	482b      	ldr	r0, [pc, #172]	@ (8002c54 <MX_GPIO_Init+0x16c>)
 8002ba6:	f003 f835 	bl	8005c14 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_Pin Temp_EN_Pin ADF_CLK_Pin ADF_Data_Pin
                           ADF_LE_Pin PC12 */
  GPIO_InitStruct.Pin = LED_Pin|Temp_EN_Pin|ADF_CLK_Pin|ADF_Data_Pin
 8002baa:	f245 33a0 	movw	r3, #21408	@ 0x53a0
 8002bae:	617b      	str	r3, [r7, #20]
                          |ADF_LE_Pin|GPIO_PIN_12;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bb0:	2301      	movs	r3, #1
 8002bb2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bb4:	2300      	movs	r3, #0
 8002bb6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bb8:	2300      	movs	r3, #0
 8002bba:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002bbc:	f107 0314 	add.w	r3, r7, #20
 8002bc0:	4619      	mov	r1, r3
 8002bc2:	4824      	ldr	r0, [pc, #144]	@ (8002c54 <MX_GPIO_Init+0x16c>)
 8002bc4:	f003 f826 	bl	8005c14 <HAL_GPIO_Init>

  /*Configure GPIO pins : LPS_CS_Pin POWER_ON_Pin */
  GPIO_InitStruct.Pin = LPS_CS_Pin|POWER_ON_Pin;
 8002bc8:	f241 0310 	movw	r3, #4112	@ 0x1010
 8002bcc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bce:	2301      	movs	r3, #1
 8002bd0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bd6:	2300      	movs	r3, #0
 8002bd8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002bda:	f107 0314 	add.w	r3, r7, #20
 8002bde:	4619      	mov	r1, r3
 8002be0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002be4:	f003 f816 	bl	8005c14 <HAL_GPIO_Init>

  /*Configure GPIO pins : RF_Boost_Pin ADF_TX_Data_Pin GPS_ON_Pin RADIO_EN_Pin
                           ADF_CE_Pin */
  GPIO_InitStruct.Pin = RF_Boost_Pin|ADF_TX_Data_Pin|GPS_ON_Pin|RADIO_EN_Pin
 8002be8:	f24f 0308 	movw	r3, #61448	@ 0xf008
 8002bec:	617b      	str	r3, [r7, #20]
                          |ADF_CE_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002bee:	2301      	movs	r3, #1
 8002bf0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bf2:	2300      	movs	r3, #0
 8002bf4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bf6:	2300      	movs	r3, #0
 8002bf8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002bfa:	f107 0314 	add.w	r3, r7, #20
 8002bfe:	4619      	mov	r1, r3
 8002c00:	4815      	ldr	r0, [pc, #84]	@ (8002c58 <MX_GPIO_Init+0x170>)
 8002c02:	f003 f807 	bl	8005c14 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002c06:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002c0a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c0c:	2302      	movs	r3, #2
 8002c0e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c10:	2300      	movs	r3, #0
 8002c12:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c14:	2300      	movs	r3, #0
 8002c16:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8002c18:	2300      	movs	r3, #0
 8002c1a:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c1c:	f107 0314 	add.w	r3, r7, #20
 8002c20:	4619      	mov	r1, r3
 8002c22:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002c26:	f002 fff5 	bl	8005c14 <HAL_GPIO_Init>

  /*Configure GPIO pins : Temp_475k_Pin Temp_36_5k_Pin Temp_12_1k_Pin Temp_2M_Pin
                           Temp_330k_Pin */
  GPIO_InitStruct.Pin = Temp_475k_Pin|Temp_36_5k_Pin|Temp_12_1k_Pin|Temp_2M_Pin
 8002c2a:	f44f 735c 	mov.w	r3, #880	@ 0x370
 8002c2e:	617b      	str	r3, [r7, #20]
                          |Temp_330k_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8002c30:	2311      	movs	r3, #17
 8002c32:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c34:	2300      	movs	r3, #0
 8002c36:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c38:	2300      	movs	r3, #0
 8002c3a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002c3c:	f107 0314 	add.w	r3, r7, #20
 8002c40:	4619      	mov	r1, r3
 8002c42:	4805      	ldr	r0, [pc, #20]	@ (8002c58 <MX_GPIO_Init+0x170>)
 8002c44:	f002 ffe6 	bl	8005c14 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8002c48:	bf00      	nop
 8002c4a:	3728      	adds	r7, #40	@ 0x28
 8002c4c:	46bd      	mov	sp, r7
 8002c4e:	bd80      	pop	{r7, pc}
 8002c50:	40021000 	.word	0x40021000
 8002c54:	48000800 	.word	0x48000800
 8002c58:	48000400 	.word	0x48000400

08002c5c <HAL_UARTEx_RxEventCallback>:

/* USER CODE BEGIN 4 */
void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8002c5c:	b580      	push	{r7, lr}
 8002c5e:	b084      	sub	sp, #16
 8002c60:	af00      	add	r7, sp, #0
 8002c62:	6078      	str	r0, [r7, #4]
 8002c64:	460b      	mov	r3, r1
 8002c66:	807b      	strh	r3, [r7, #2]
	if(huart->Instance == USART3){
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	4a29      	ldr	r2, [pc, #164]	@ (8002d14 <HAL_UARTEx_RxEventCallback+0xb8>)
 8002c6e:	4293      	cmp	r3, r2
 8002c70:	d14c      	bne.n	8002d0c <HAL_UARTEx_RxEventCallback+0xb0>
		oldPos = newPos; //keep track of the last position in the buffer
 8002c72:	4b29      	ldr	r3, [pc, #164]	@ (8002d18 <HAL_UARTEx_RxEventCallback+0xbc>)
 8002c74:	881a      	ldrh	r2, [r3, #0]
 8002c76:	4b29      	ldr	r3, [pc, #164]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002c78:	801a      	strh	r2, [r3, #0]
    	if(oldPos + Size > DataBuffer_SIZE){ //if the buffer is full, parse it, then reset the buffer
 8002c7a:	4b28      	ldr	r3, [pc, #160]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002c7c:	881b      	ldrh	r3, [r3, #0]
 8002c7e:	461a      	mov	r2, r3
 8002c80:	887b      	ldrh	r3, [r7, #2]
 8002c82:	4413      	add	r3, r2
 8002c84:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002c88:	dd22      	ble.n	8002cd0 <HAL_UARTEx_RxEventCallback+0x74>

        	uint16_t datatocopy = DataBuffer_SIZE-oldPos;  // find out how much space is left in the main buffer
 8002c8a:	4b24      	ldr	r3, [pc, #144]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002c8c:	881b      	ldrh	r3, [r3, #0]
 8002c8e:	f5c3 6380 	rsb	r3, r3, #1024	@ 0x400
 8002c92:	81fb      	strh	r3, [r7, #14]
        	memcpy ((uint8_t *)DataBuffer+oldPos, RxBuffer, datatocopy);  // copy data in that remaining space
 8002c94:	4b21      	ldr	r3, [pc, #132]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002c96:	881b      	ldrh	r3, [r3, #0]
 8002c98:	461a      	mov	r2, r3
 8002c9a:	4b21      	ldr	r3, [pc, #132]	@ (8002d20 <HAL_UARTEx_RxEventCallback+0xc4>)
 8002c9c:	4413      	add	r3, r2
 8002c9e:	89fa      	ldrh	r2, [r7, #14]
 8002ca0:	4920      	ldr	r1, [pc, #128]	@ (8002d24 <HAL_UARTEx_RxEventCallback+0xc8>)
 8002ca2:	4618      	mov	r0, r3
 8002ca4:	f007 fe27 	bl	800a8f6 <memcpy>

        	oldPos = 0;  // point to the start of the buffer
 8002ca8:	4b1c      	ldr	r3, [pc, #112]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002caa:	2200      	movs	r2, #0
 8002cac:	801a      	strh	r2, [r3, #0]
        	memcpy ((uint8_t *)DataBuffer, (uint8_t *)RxBuffer+datatocopy, (Size-datatocopy));  // copy the remaining data
 8002cae:	89fb      	ldrh	r3, [r7, #14]
 8002cb0:	4a1c      	ldr	r2, [pc, #112]	@ (8002d24 <HAL_UARTEx_RxEventCallback+0xc8>)
 8002cb2:	1899      	adds	r1, r3, r2
 8002cb4:	887a      	ldrh	r2, [r7, #2]
 8002cb6:	89fb      	ldrh	r3, [r7, #14]
 8002cb8:	1ad3      	subs	r3, r2, r3
 8002cba:	461a      	mov	r2, r3
 8002cbc:	4818      	ldr	r0, [pc, #96]	@ (8002d20 <HAL_UARTEx_RxEventCallback+0xc4>)
 8002cbe:	f007 fe1a 	bl	800a8f6 <memcpy>
        	newPos = (Size-datatocopy);  // update the position
 8002cc2:	887a      	ldrh	r2, [r7, #2]
 8002cc4:	89fb      	ldrh	r3, [r7, #14]
 8002cc6:	1ad3      	subs	r3, r2, r3
 8002cc8:	b29a      	uxth	r2, r3
 8002cca:	4b13      	ldr	r3, [pc, #76]	@ (8002d18 <HAL_UARTEx_RxEventCallback+0xbc>)
 8002ccc:	801a      	strh	r2, [r3, #0]
 8002cce:	e010      	b.n	8002cf2 <HAL_UARTEx_RxEventCallback+0x96>
    	}else{
        	memcpy((uint8_t *)DataBuffer+oldPos, RxBuffer, Size); //copy received data to the buffer
 8002cd0:	4b12      	ldr	r3, [pc, #72]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002cd2:	881b      	ldrh	r3, [r3, #0]
 8002cd4:	461a      	mov	r2, r3
 8002cd6:	4b12      	ldr	r3, [pc, #72]	@ (8002d20 <HAL_UARTEx_RxEventCallback+0xc4>)
 8002cd8:	4413      	add	r3, r2
 8002cda:	887a      	ldrh	r2, [r7, #2]
 8002cdc:	4911      	ldr	r1, [pc, #68]	@ (8002d24 <HAL_UARTEx_RxEventCallback+0xc8>)
 8002cde:	4618      	mov	r0, r3
 8002ce0:	f007 fe09 	bl	800a8f6 <memcpy>
        	newPos = Size+oldPos; //update buffer position
 8002ce4:	4b0d      	ldr	r3, [pc, #52]	@ (8002d1c <HAL_UARTEx_RxEventCallback+0xc0>)
 8002ce6:	881a      	ldrh	r2, [r3, #0]
 8002ce8:	887b      	ldrh	r3, [r7, #2]
 8002cea:	4413      	add	r3, r2
 8002cec:	b29a      	uxth	r2, r3
 8002cee:	4b0a      	ldr	r3, [pc, #40]	@ (8002d18 <HAL_UARTEx_RxEventCallback+0xbc>)
 8002cf0:	801a      	strh	r2, [r3, #0]

    	}
    	HAL_UARTEx_ReceiveToIdle_DMA(&huart3, (uint8_t *)RxBuffer, RxBuffer_SIZE); //re-enable the DMA interrupt
 8002cf2:	2220      	movs	r2, #32
 8002cf4:	490b      	ldr	r1, [pc, #44]	@ (8002d24 <HAL_UARTEx_RxEventCallback+0xc8>)
 8002cf6:	480c      	ldr	r0, [pc, #48]	@ (8002d28 <HAL_UARTEx_RxEventCallback+0xcc>)
 8002cf8:	f005 ff36 	bl	8008b68 <HAL_UARTEx_ReceiveToIdle_DMA>
    	__HAL_DMA_DISABLE_IT(&hdma_usart3_rx, DMA_IT_HT); //disable the half transfer interrupt
 8002cfc:	4b0b      	ldr	r3, [pc, #44]	@ (8002d2c <HAL_UARTEx_RxEventCallback+0xd0>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	681a      	ldr	r2, [r3, #0]
 8002d02:	4b0a      	ldr	r3, [pc, #40]	@ (8002d2c <HAL_UARTEx_RxEventCallback+0xd0>)
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	f022 0204 	bic.w	r2, r2, #4
 8002d0a:	601a      	str	r2, [r3, #0]
	}
}
 8002d0c:	bf00      	nop
 8002d0e:	3710      	adds	r7, #16
 8002d10:	46bd      	mov	sp, r7
 8002d12:	bd80      	pop	{r7, pc}
 8002d14:	40004800 	.word	0x40004800
 8002d18:	20000578 	.word	0x20000578
 8002d1c:	2000057a 	.word	0x2000057a
 8002d20:	2000059c 	.word	0x2000059c
 8002d24:	2000057c 	.word	0x2000057c
 8002d28:	200004a8 	.word	0x200004a8
 8002d2c:	20000530 	.word	0x20000530

08002d30 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8002d30:	b580      	push	{r7, lr}
 8002d32:	b082      	sub	sp, #8
 8002d34:	af00      	add	r7, sp, #0
 8002d36:	6078      	str	r0, [r7, #4]
    if(htim->Instance == TIM2)  //timer responsible for baudrate generation
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002d40:	d107      	bne.n	8002d52 <HAL_TIM_PeriodElapsedCallback+0x22>
    {
        if (FSK4_is_active()) {     //check if we are transmitting in 4FSK mode
 8002d42:	f7fe fccd 	bl	80016e0 <FSK4_is_active>
 8002d46:	4603      	mov	r3, r0
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d009      	beq.n	8002d60 <HAL_TIM_PeriodElapsedCallback+0x30>

              FSK4_timer_handler();
 8002d4c:	f7fe fcfa 	bl	8001744 <FSK4_timer_handler>
        }
    }else if(htim->Instance == TIM1){
    	main_loop();
    }
}
 8002d50:	e006      	b.n	8002d60 <HAL_TIM_PeriodElapsedCallback+0x30>
    }else if(htim->Instance == TIM1){
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	4a04      	ldr	r2, [pc, #16]	@ (8002d68 <HAL_TIM_PeriodElapsedCallback+0x38>)
 8002d58:	4293      	cmp	r3, r2
 8002d5a:	d101      	bne.n	8002d60 <HAL_TIM_PeriodElapsedCallback+0x30>
    	main_loop();
 8002d5c:	f7ff fa6c 	bl	8002238 <main_loop>
}
 8002d60:	bf00      	nop
 8002d62:	3708      	adds	r7, #8
 8002d64:	46bd      	mov	sp, r7
 8002d66:	bd80      	pop	{r7, pc}
 8002d68:	40012c00 	.word	0x40012c00

08002d6c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002d6c:	b480      	push	{r7}
 8002d6e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002d70:	b672      	cpsid	i
}
 8002d72:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002d74:	bf00      	nop
 8002d76:	e7fd      	b.n	8002d74 <Error_Handler+0x8>

08002d78 <checksum>:
	uint32_t OldTick;
	float OldAlt;
}ascent_data;

uint8_t checksum(char *nmea_frame)
{
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	b086      	sub	sp, #24
 8002d7c:	af00      	add	r7, sp, #0
 8002d7e:	6078      	str	r0, [r7, #4]
    //if you point a string with less than 5 characters the function will read outside of scope and crash the mcu.
    if(strlen(nmea_frame) < 5) return 0;
 8002d80:	6878      	ldr	r0, [r7, #4]
 8002d82:	f7fd fa75 	bl	8000270 <strlen>
 8002d86:	4603      	mov	r3, r0
 8002d88:	2b04      	cmp	r3, #4
 8002d8a:	d801      	bhi.n	8002d90 <checksum+0x18>
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	e038      	b.n	8002e02 <checksum+0x8a>
    char recv_crc[2];
    recv_crc[0] = nmea_frame[strlen(nmea_frame) - 4];
 8002d90:	6878      	ldr	r0, [r7, #4]
 8002d92:	f7fd fa6d 	bl	8000270 <strlen>
 8002d96:	4603      	mov	r3, r0
 8002d98:	3b04      	subs	r3, #4
 8002d9a:	687a      	ldr	r2, [r7, #4]
 8002d9c:	4413      	add	r3, r2
 8002d9e:	781b      	ldrb	r3, [r3, #0]
 8002da0:	723b      	strb	r3, [r7, #8]
    recv_crc[1] = nmea_frame[strlen(nmea_frame) - 3];
 8002da2:	6878      	ldr	r0, [r7, #4]
 8002da4:	f7fd fa64 	bl	8000270 <strlen>
 8002da8:	4603      	mov	r3, r0
 8002daa:	3b03      	subs	r3, #3
 8002dac:	687a      	ldr	r2, [r7, #4]
 8002dae:	4413      	add	r3, r2
 8002db0:	781b      	ldrb	r3, [r3, #0]
 8002db2:	727b      	strb	r3, [r7, #9]
    int crc = 0;
 8002db4:	2300      	movs	r3, #0
 8002db6:	617b      	str	r3, [r7, #20]
    int i;

    //exclude the CRLF plus CRC with an * from the end
    for (i = 0; i < strlen(nmea_frame) - 5; i ++) {
 8002db8:	2300      	movs	r3, #0
 8002dba:	613b      	str	r3, [r7, #16]
 8002dbc:	e00a      	b.n	8002dd4 <checksum+0x5c>
        crc ^= nmea_frame[i];
 8002dbe:	693b      	ldr	r3, [r7, #16]
 8002dc0:	687a      	ldr	r2, [r7, #4]
 8002dc2:	4413      	add	r3, r2
 8002dc4:	781b      	ldrb	r3, [r3, #0]
 8002dc6:	461a      	mov	r2, r3
 8002dc8:	697b      	ldr	r3, [r7, #20]
 8002dca:	4053      	eors	r3, r2
 8002dcc:	617b      	str	r3, [r7, #20]
    for (i = 0; i < strlen(nmea_frame) - 5; i ++) {
 8002dce:	693b      	ldr	r3, [r7, #16]
 8002dd0:	3301      	adds	r3, #1
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	6878      	ldr	r0, [r7, #4]
 8002dd6:	f7fd fa4b 	bl	8000270 <strlen>
 8002dda:	4603      	mov	r3, r0
 8002ddc:	1f5a      	subs	r2, r3, #5
 8002dde:	693b      	ldr	r3, [r7, #16]
 8002de0:	429a      	cmp	r2, r3
 8002de2:	d8ec      	bhi.n	8002dbe <checksum+0x46>
    }
    int receivedHash = strtol(recv_crc, NULL, 16);
 8002de4:	f107 0308 	add.w	r3, r7, #8
 8002de8:	2210      	movs	r2, #16
 8002dea:	2100      	movs	r1, #0
 8002dec:	4618      	mov	r0, r3
 8002dee:	f006 fecd 	bl	8009b8c <strtol>
 8002df2:	60f8      	str	r0, [r7, #12]
    if (crc == receivedHash) {
 8002df4:	697a      	ldr	r2, [r7, #20]
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	429a      	cmp	r2, r3
 8002dfa:	d101      	bne.n	8002e00 <checksum+0x88>
        return 1;
 8002dfc:	2301      	movs	r3, #1
 8002dfe:	e000      	b.n	8002e02 <checksum+0x8a>
    }
    else{
        return 0;
 8002e00:	2300      	movs	r3, #0
    }
}
 8002e02:	4618      	mov	r0, r3
 8002e04:	3718      	adds	r7, #24
 8002e06:	46bd      	mov	sp, r7
 8002e08:	bd80      	pop	{r7, pc}
	...

08002e0c <getValues>:

int getValues(char*inputString, char *values[]){
 8002e0c:	b590      	push	{r4, r7, lr}
 8002e0e:	b085      	sub	sp, #20
 8002e10:	af00      	add	r7, sp, #0
 8002e12:	6078      	str	r0, [r7, #4]
 8002e14:	6039      	str	r1, [r7, #0]
    char *marker = strtok(inputString, ",");
 8002e16:	4918      	ldr	r1, [pc, #96]	@ (8002e78 <getValues+0x6c>)
 8002e18:	6878      	ldr	r0, [r7, #4]
 8002e1a:	f007 fc6b 	bl	800a6f4 <strtok>
 8002e1e:	60f8      	str	r0, [r7, #12]
    int counter = 0;
 8002e20:	2300      	movs	r3, #0
 8002e22:	60bb      	str	r3, [r7, #8]
    while (marker != NULL) {
 8002e24:	e020      	b.n	8002e68 <getValues+0x5c>
        values[counter++] = malloc(strlen(marker) + 1); //free later!!!!!!
 8002e26:	68f8      	ldr	r0, [r7, #12]
 8002e28:	f7fd fa22 	bl	8000270 <strlen>
 8002e2c:	4603      	mov	r3, r0
 8002e2e:	1c59      	adds	r1, r3, #1
 8002e30:	68bb      	ldr	r3, [r7, #8]
 8002e32:	1c5a      	adds	r2, r3, #1
 8002e34:	60ba      	str	r2, [r7, #8]
 8002e36:	009b      	lsls	r3, r3, #2
 8002e38:	683a      	ldr	r2, [r7, #0]
 8002e3a:	18d4      	adds	r4, r2, r3
 8002e3c:	4608      	mov	r0, r1
 8002e3e:	f005 ff05 	bl	8008c4c <malloc>
 8002e42:	4603      	mov	r3, r0
 8002e44:	6023      	str	r3, [r4, #0]
        strcpy(values[counter - 1], marker);
 8002e46:	68bb      	ldr	r3, [r7, #8]
 8002e48:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8002e4c:	3b01      	subs	r3, #1
 8002e4e:	009b      	lsls	r3, r3, #2
 8002e50:	683a      	ldr	r2, [r7, #0]
 8002e52:	4413      	add	r3, r2
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	68f9      	ldr	r1, [r7, #12]
 8002e58:	4618      	mov	r0, r3
 8002e5a:	f007 fd44 	bl	800a8e6 <strcpy>
        marker = strtok(NULL, ",");
 8002e5e:	4906      	ldr	r1, [pc, #24]	@ (8002e78 <getValues+0x6c>)
 8002e60:	2000      	movs	r0, #0
 8002e62:	f007 fc47 	bl	800a6f4 <strtok>
 8002e66:	60f8      	str	r0, [r7, #12]
    while (marker != NULL) {
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d1db      	bne.n	8002e26 <getValues+0x1a>
    }
    return counter;
 8002e6e:	68bb      	ldr	r3, [r7, #8]
}
 8002e70:	4618      	mov	r0, r3
 8002e72:	3714      	adds	r7, #20
 8002e74:	46bd      	mov	sp, r7
 8002e76:	bd90      	pop	{r4, r7, pc}
 8002e78:	0800d240 	.word	0x0800d240

08002e7c <nmea_GGA>:

int nmea_GGA(NMEA *nmea_data, char*inputString){
 8002e7c:	b580      	push	{r7, lr}
 8002e7e:	b0b8      	sub	sp, #224	@ 0xe0
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	6078      	str	r0, [r7, #4]
 8002e84:	6039      	str	r1, [r7, #0]
	char *values[25];
    memset(values, 0, sizeof(values));
 8002e86:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8002e8a:	2264      	movs	r2, #100	@ 0x64
 8002e8c:	2100      	movs	r1, #0
 8002e8e:	4618      	mov	r0, r3
 8002e90:	f007 fc15 	bl	800a6be <memset>
	int counter = getValues(inputString, values);
 8002e94:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8002e98:	4619      	mov	r1, r3
 8002e9a:	6838      	ldr	r0, [r7, #0]
 8002e9c:	f7ff ffb6 	bl	8002e0c <getValues>
 8002ea0:	f8c7 00c4 	str.w	r0, [r7, #196]	@ 0xc4

    char lonSide = values[5][0];
 8002ea4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8002ea6:	781b      	ldrb	r3, [r3, #0]
 8002ea8:	f887 30c3 	strb.w	r3, [r7, #195]	@ 0xc3
    char latSide = values[3][0];
 8002eac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002eae:	781b      	ldrb	r3, [r3, #0]
 8002eb0:	f887 30c2 	strb.w	r3, [r7, #194]	@ 0xc2

    char hoursc[3];
    char minutesc[3];
    char secondsc[3];

    sprintf(hoursc, "%c%c", values[1][0], values[1][1]);
 8002eb4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002eb6:	781b      	ldrb	r3, [r3, #0]
 8002eb8:	461a      	mov	r2, r3
 8002eba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002ebc:	3301      	adds	r3, #1
 8002ebe:	781b      	ldrb	r3, [r3, #0]
 8002ec0:	f107 0028 	add.w	r0, r7, #40	@ 0x28
 8002ec4:	49bb      	ldr	r1, [pc, #748]	@ (80031b4 <nmea_GGA+0x338>)
 8002ec6:	f007 fb97 	bl	800a5f8 <siprintf>
    sprintf(minutesc, "%c%c", values[1][2], values[1][3]);
 8002eca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002ecc:	3302      	adds	r3, #2
 8002ece:	781b      	ldrb	r3, [r3, #0]
 8002ed0:	461a      	mov	r2, r3
 8002ed2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002ed4:	3303      	adds	r3, #3
 8002ed6:	781b      	ldrb	r3, [r3, #0]
 8002ed8:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8002edc:	49b5      	ldr	r1, [pc, #724]	@ (80031b4 <nmea_GGA+0x338>)
 8002ede:	f007 fb8b 	bl	800a5f8 <siprintf>
    sprintf(secondsc, "%c%c", values[1][4], values[1][5]);
 8002ee2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002ee4:	3304      	adds	r3, #4
 8002ee6:	781b      	ldrb	r3, [r3, #0]
 8002ee8:	461a      	mov	r2, r3
 8002eea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002eec:	3305      	adds	r3, #5
 8002eee:	781b      	ldrb	r3, [r3, #0]
 8002ef0:	f107 0020 	add.w	r0, r7, #32
 8002ef4:	49af      	ldr	r1, [pc, #700]	@ (80031b4 <nmea_GGA+0x338>)
 8002ef6:	f007 fb7f 	bl	800a5f8 <siprintf>

    nmea_data->Hours = strtol(hoursc, NULL, 10);
 8002efa:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8002efe:	220a      	movs	r2, #10
 8002f00:	2100      	movs	r1, #0
 8002f02:	4618      	mov	r0, r3
 8002f04:	f006 fe42 	bl	8009b8c <strtol>
 8002f08:	4603      	mov	r3, r0
 8002f0a:	b2da      	uxtb	r2, r3
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	751a      	strb	r2, [r3, #20]
    nmea_data->Minutes = strtol(minutesc, NULL, 10);
 8002f10:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002f14:	220a      	movs	r2, #10
 8002f16:	2100      	movs	r1, #0
 8002f18:	4618      	mov	r0, r3
 8002f1a:	f006 fe37 	bl	8009b8c <strtol>
 8002f1e:	4603      	mov	r3, r0
 8002f20:	b2da      	uxtb	r2, r3
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	755a      	strb	r2, [r3, #21]
    nmea_data->Seconds = strtol(secondsc, NULL, 10);
 8002f26:	f107 0320 	add.w	r3, r7, #32
 8002f2a:	220a      	movs	r2, #10
 8002f2c:	2100      	movs	r1, #0
 8002f2e:	4618      	mov	r0, r3
 8002f30:	f006 fe2c 	bl	8009b8c <strtol>
 8002f34:	4603      	mov	r3, r0
 8002f36:	b2da      	uxtb	r2, r3
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	759a      	strb	r2, [r3, #22]

    if(latSide == 'S' || latSide == 'N'){
 8002f3c:	f897 30c2 	ldrb.w	r3, [r7, #194]	@ 0xc2
 8002f40:	2b53      	cmp	r3, #83	@ 0x53
 8002f42:	d004      	beq.n	8002f4e <nmea_GGA+0xd2>
 8002f44:	f897 30c2 	ldrb.w	r3, [r7, #194]	@ 0xc2
 8002f48:	2b4e      	cmp	r3, #78	@ 0x4e
 8002f4a:	f040 81c5 	bne.w	80032d8 <nmea_GGA+0x45c>
        char lat_d[2];
        char lat_m[7];
        for (int z = 0; z < 2; z++) lat_d[z] = values[2][z];
 8002f4e:	2300      	movs	r3, #0
 8002f50:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8002f54:	e010      	b.n	8002f78 <nmea_GGA+0xfc>
 8002f56:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8002f58:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f5c:	4413      	add	r3, r2
 8002f5e:	7819      	ldrb	r1, [r3, #0]
 8002f60:	f107 021c 	add.w	r2, r7, #28
 8002f64:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f68:	4413      	add	r3, r2
 8002f6a:	460a      	mov	r2, r1
 8002f6c:	701a      	strb	r2, [r3, #0]
 8002f6e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f72:	3301      	adds	r3, #1
 8002f74:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8002f78:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002f7c:	2b01      	cmp	r3, #1
 8002f7e:	ddea      	ble.n	8002f56 <nmea_GGA+0xda>
        for (int z = 0; z < 6; z++) lat_m[z] = values[2][z + 2];
 8002f80:	2300      	movs	r3, #0
 8002f82:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002f86:	e011      	b.n	8002fac <nmea_GGA+0x130>
 8002f88:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8002f8a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002f8e:	3302      	adds	r3, #2
 8002f90:	4413      	add	r3, r2
 8002f92:	7819      	ldrb	r1, [r3, #0]
 8002f94:	f107 0214 	add.w	r2, r7, #20
 8002f98:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002f9c:	4413      	add	r3, r2
 8002f9e:	460a      	mov	r2, r1
 8002fa0:	701a      	strb	r2, [r3, #0]
 8002fa2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002fa6:	3301      	adds	r3, #1
 8002fa8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002fac:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002fb0:	2b05      	cmp	r3, #5
 8002fb2:	dde9      	ble.n	8002f88 <nmea_GGA+0x10c>

        int lat_deg_strtol = strtol(lat_d, NULL, 10);
 8002fb4:	f107 031c 	add.w	r3, r7, #28
 8002fb8:	220a      	movs	r2, #10
 8002fba:	2100      	movs	r1, #0
 8002fbc:	4618      	mov	r0, r3
 8002fbe:	f006 fde5 	bl	8009b8c <strtol>
 8002fc2:	f8c7 00bc 	str.w	r0, [r7, #188]	@ 0xbc
        float lat_min_strtof = strtof(lat_m, NULL);
 8002fc6:	f107 0314 	add.w	r3, r7, #20
 8002fca:	2100      	movs	r1, #0
 8002fcc:	4618      	mov	r0, r3
 8002fce:	f006 fcff 	bl	80099d0 <strtof>
 8002fd2:	ed87 0a2e 	vstr	s0, [r7, #184]	@ 0xb8
        double lat_deg = lat_deg_strtol + lat_min_strtof / 60;
 8002fd6:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002fda:	ee07 3a90 	vmov	s15, r3
 8002fde:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002fe2:	edd7 6a2e 	vldr	s13, [r7, #184]	@ 0xb8
 8002fe6:	ed9f 6a74 	vldr	s12, [pc, #464]	@ 80031b8 <nmea_GGA+0x33c>
 8002fea:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8002fee:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002ff2:	ee17 0a90 	vmov	r0, s15
 8002ff6:	f7fd faa7 	bl	8000548 <__aeabi_f2d>
 8002ffa:	4602      	mov	r2, r0
 8002ffc:	460b      	mov	r3, r1
 8002ffe:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0

        char lon_d[3];
        char lon_m[7];

        for (int z = 0; z < 3; z++) lon_d[z] = values[4][z];
 8003002:	2300      	movs	r3, #0
 8003004:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003008:	e010      	b.n	800302c <nmea_GGA+0x1b0>
 800300a:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800300c:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003010:	4413      	add	r3, r2
 8003012:	7819      	ldrb	r1, [r3, #0]
 8003014:	f107 0210 	add.w	r2, r7, #16
 8003018:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800301c:	4413      	add	r3, r2
 800301e:	460a      	mov	r2, r1
 8003020:	701a      	strb	r2, [r3, #0]
 8003022:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003026:	3301      	adds	r3, #1
 8003028:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800302c:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003030:	2b02      	cmp	r3, #2
 8003032:	ddea      	ble.n	800300a <nmea_GGA+0x18e>
        for (int z = 0; z < 6; z++) lon_m[z] = values[4][z + 3];
 8003034:	2300      	movs	r3, #0
 8003036:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800303a:	e011      	b.n	8003060 <nmea_GGA+0x1e4>
 800303c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800303e:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8003042:	3303      	adds	r3, #3
 8003044:	4413      	add	r3, r2
 8003046:	7819      	ldrb	r1, [r3, #0]
 8003048:	f107 0208 	add.w	r2, r7, #8
 800304c:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8003050:	4413      	add	r3, r2
 8003052:	460a      	mov	r2, r1
 8003054:	701a      	strb	r2, [r3, #0]
 8003056:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800305a:	3301      	adds	r3, #1
 800305c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003060:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 8003064:	2b05      	cmp	r3, #5
 8003066:	dde9      	ble.n	800303c <nmea_GGA+0x1c0>

        int lon_deg_strtol = strtol(lon_d, NULL, 10);
 8003068:	f107 0310 	add.w	r3, r7, #16
 800306c:	220a      	movs	r2, #10
 800306e:	2100      	movs	r1, #0
 8003070:	4618      	mov	r0, r3
 8003072:	f006 fd8b 	bl	8009b8c <strtol>
 8003076:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
        float lon_min_strtof = strtof(lon_m, NULL);
 800307a:	f107 0308 	add.w	r3, r7, #8
 800307e:	2100      	movs	r1, #0
 8003080:	4618      	mov	r0, r3
 8003082:	f006 fca5 	bl	80099d0 <strtof>
 8003086:	ed87 0a2a 	vstr	s0, [r7, #168]	@ 0xa8
        double lon_deg = lon_deg_strtol + lon_min_strtof / 60;
 800308a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800308e:	ee07 3a90 	vmov	s15, r3
 8003092:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003096:	edd7 6a2a 	vldr	s13, [r7, #168]	@ 0xa8
 800309a:	ed9f 6a47 	vldr	s12, [pc, #284]	@ 80031b8 <nmea_GGA+0x33c>
 800309e:	eec6 7a86 	vdiv.f32	s15, s13, s12
 80030a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80030a6:	ee17 0a90 	vmov	r0, s15
 80030aa:	f7fd fa4d 	bl	8000548 <__aeabi_f2d>
 80030ae:	4602      	mov	r2, r0
 80030b0:	460b      	mov	r3, r1
 80030b2:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0

        if(lon_deg_strtol != 0 && lon_min_strtof != 0 && lat_deg_strtol != 0 && lat_min_strtof != 0 && lat_deg!=0 && lon_deg!=0 && lat_deg<90 && lon_deg<180){
 80030b6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	f000 80f1 	beq.w	80032a2 <nmea_GGA+0x426>
 80030c0:	edd7 7a2a 	vldr	s15, [r7, #168]	@ 0xa8
 80030c4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80030c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80030cc:	f000 80e9 	beq.w	80032a2 <nmea_GGA+0x426>
 80030d0:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 80030d4:	2b00      	cmp	r3, #0
 80030d6:	f000 80e4 	beq.w	80032a2 <nmea_GGA+0x426>
 80030da:	edd7 7a2e 	vldr	s15, [r7, #184]	@ 0xb8
 80030de:	eef5 7a40 	vcmp.f32	s15, #0.0
 80030e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80030e6:	f000 80dc 	beq.w	80032a2 <nmea_GGA+0x426>
 80030ea:	f04f 0200 	mov.w	r2, #0
 80030ee:	f04f 0300 	mov.w	r3, #0
 80030f2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80030f6:	f7fd fce7 	bl	8000ac8 <__aeabi_dcmpeq>
 80030fa:	4603      	mov	r3, r0
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	f040 80d0 	bne.w	80032a2 <nmea_GGA+0x426>
 8003102:	f04f 0200 	mov.w	r2, #0
 8003106:	f04f 0300 	mov.w	r3, #0
 800310a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800310e:	f7fd fcdb 	bl	8000ac8 <__aeabi_dcmpeq>
 8003112:	4603      	mov	r3, r0
 8003114:	2b00      	cmp	r3, #0
 8003116:	f040 80c4 	bne.w	80032a2 <nmea_GGA+0x426>
 800311a:	f04f 0200 	mov.w	r2, #0
 800311e:	4b27      	ldr	r3, [pc, #156]	@ (80031bc <nmea_GGA+0x340>)
 8003120:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8003124:	f7fd fcda 	bl	8000adc <__aeabi_dcmplt>
 8003128:	4603      	mov	r3, r0
 800312a:	2b00      	cmp	r3, #0
 800312c:	f000 80b9 	beq.w	80032a2 <nmea_GGA+0x426>
 8003130:	f04f 0200 	mov.w	r2, #0
 8003134:	4b22      	ldr	r3, [pc, #136]	@ (80031c0 <nmea_GGA+0x344>)
 8003136:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800313a:	f7fd fccf 	bl	8000adc <__aeabi_dcmplt>
 800313e:	4603      	mov	r3, r0
 8003140:	2b00      	cmp	r3, #0
 8003142:	f000 80ae 	beq.w	80032a2 <nmea_GGA+0x426>
            nmea_data->Lat = lat_deg;
 8003146:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800314a:	f7fd fd4d 	bl	8000be8 <__aeabi_d2f>
 800314e:	4602      	mov	r2, r0
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	601a      	str	r2, [r3, #0]
            nmea_data->Lon = lon_deg;
 8003154:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8003158:	f7fd fd46 	bl	8000be8 <__aeabi_d2f>
 800315c:	4602      	mov	r2, r0
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	605a      	str	r2, [r3, #4]
            if(latSide == 'S') nmea_data->Lat *= -1;
 8003162:	f897 30c2 	ldrb.w	r3, [r7, #194]	@ 0xc2
 8003166:	2b53      	cmp	r3, #83	@ 0x53
 8003168:	d107      	bne.n	800317a <nmea_GGA+0x2fe>
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	edd3 7a00 	vldr	s15, [r3]
 8003170:	eef1 7a67 	vneg.f32	s15, s15
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	edc3 7a00 	vstr	s15, [r3]
            if(lonSide == 'W') nmea_data->Lon *= -1;
 800317a:	f897 30c3 	ldrb.w	r3, [r7, #195]	@ 0xc3
 800317e:	2b57      	cmp	r3, #87	@ 0x57
 8003180:	d107      	bne.n	8003192 <nmea_GGA+0x316>
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	edd3 7a01 	vldr	s15, [r3, #4]
 8003188:	eef1 7a67 	vneg.f32	s15, s15
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	edc3 7a01 	vstr	s15, [r3, #4]

            float altitude = strtof(values[9], NULL);
 8003192:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003194:	2100      	movs	r1, #0
 8003196:	4618      	mov	r0, r3
 8003198:	f006 fc1a 	bl	80099d0 <strtof>
 800319c:	ed87 0a27 	vstr	s0, [r7, #156]	@ 0x9c

            nmea_data->Alt = altitude !=0 ? altitude : nmea_data->Alt;
 80031a0:	edd7 7a27 	vldr	s15, [r7, #156]	@ 0x9c
 80031a4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80031a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80031ac:	d10a      	bne.n	80031c4 <nmea_GGA+0x348>
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	689b      	ldr	r3, [r3, #8]
 80031b2:	e009      	b.n	80031c8 <nmea_GGA+0x34c>
 80031b4:	0800d244 	.word	0x0800d244
 80031b8:	42700000 	.word	0x42700000
 80031bc:	40568000 	.word	0x40568000
 80031c0:	40668000 	.word	0x40668000
 80031c4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80031c8:	687a      	ldr	r2, [r7, #4]
 80031ca:	6093      	str	r3, [r2, #8]

            uint32_t tick = HAL_GetTick();
 80031cc:	f000 ff4e 	bl	800406c <HAL_GetTick>
 80031d0:	f8c7 0098 	str.w	r0, [r7, #152]	@ 0x98
            if(ascent_data.OldTick !=0 && altitude != 0 && (tick-ascent_data.OldTick)>10000){
 80031d4:	4b4f      	ldr	r3, [pc, #316]	@ (8003314 <nmea_GGA+0x498>)
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d030      	beq.n	800323e <nmea_GGA+0x3c2>
 80031dc:	edd7 7a27 	vldr	s15, [r7, #156]	@ 0x9c
 80031e0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80031e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80031e8:	d029      	beq.n	800323e <nmea_GGA+0x3c2>
 80031ea:	4b4a      	ldr	r3, [pc, #296]	@ (8003314 <nmea_GGA+0x498>)
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	f8d7 2098 	ldr.w	r2, [r7, #152]	@ 0x98
 80031f2:	1ad3      	subs	r3, r2, r3
 80031f4:	f242 7210 	movw	r2, #10000	@ 0x2710
 80031f8:	4293      	cmp	r3, r2
 80031fa:	d920      	bls.n	800323e <nmea_GGA+0x3c2>
            	nmea_data->AscentRate = (altitude-ascent_data.OldAlt)/((tick-ascent_data.OldTick)/1000);
 80031fc:	4b45      	ldr	r3, [pc, #276]	@ (8003314 <nmea_GGA+0x498>)
 80031fe:	edd3 7a01 	vldr	s15, [r3, #4]
 8003202:	ed97 7a27 	vldr	s14, [r7, #156]	@ 0x9c
 8003206:	ee77 6a67 	vsub.f32	s13, s14, s15
 800320a:	4b42      	ldr	r3, [pc, #264]	@ (8003314 <nmea_GGA+0x498>)
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	f8d7 2098 	ldr.w	r2, [r7, #152]	@ 0x98
 8003212:	1ad3      	subs	r3, r2, r3
 8003214:	4a40      	ldr	r2, [pc, #256]	@ (8003318 <nmea_GGA+0x49c>)
 8003216:	fba2 2303 	umull	r2, r3, r2, r3
 800321a:	099b      	lsrs	r3, r3, #6
 800321c:	ee07 3a90 	vmov	s15, r3
 8003220:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003224:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	edc3 7a04 	vstr	s15, [r3, #16]
            	ascent_data.OldTick = tick;
 800322e:	4a39      	ldr	r2, [pc, #228]	@ (8003314 <nmea_GGA+0x498>)
 8003230:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003234:	6013      	str	r3, [r2, #0]
            	ascent_data.OldAlt = nmea_data->Alt;
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	689b      	ldr	r3, [r3, #8]
 800323a:	4a36      	ldr	r2, [pc, #216]	@ (8003314 <nmea_GGA+0x498>)
 800323c:	6053      	str	r3, [r2, #4]
            }

            nmea_data->Sats = strtol(values[7], NULL, 10);
 800323e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003240:	220a      	movs	r2, #10
 8003242:	2100      	movs	r1, #0
 8003244:	4618      	mov	r0, r3
 8003246:	f006 fca1 	bl	8009b8c <strtol>
 800324a:	4603      	mov	r3, r0
 800324c:	b2da      	uxtb	r2, r3
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	771a      	strb	r2, [r3, #28]

            int fixQuality = strtol(values[6], NULL, 10);
 8003252:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003254:	220a      	movs	r2, #10
 8003256:	2100      	movs	r1, #0
 8003258:	4618      	mov	r0, r3
 800325a:	f006 fc97 	bl	8009b8c <strtol>
 800325e:	f8c7 0094 	str.w	r0, [r7, #148]	@ 0x94
            nmea_data->Fix = fixQuality > 0 ? 1 : 0;
 8003262:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8003266:	2b00      	cmp	r3, #0
 8003268:	bfcc      	ite	gt
 800326a:	2301      	movgt	r3, #1
 800326c:	2300      	movle	r3, #0
 800326e:	b2db      	uxtb	r3, r3
 8003270:	461a      	mov	r2, r3
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	775a      	strb	r2, [r3, #29]

            float hdop = strtof(values[8], NULL);
 8003276:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003278:	2100      	movs	r1, #0
 800327a:	4618      	mov	r0, r3
 800327c:	f006 fba8 	bl	80099d0 <strtof>
 8003280:	ed87 0a24 	vstr	s0, [r7, #144]	@ 0x90
            nmea_data->HDOP = hdop!=0 ? hdop : nmea_data->HDOP;
 8003284:	edd7 7a24 	vldr	s15, [r7, #144]	@ 0x90
 8003288:	eef5 7a40 	vcmp.f32	s15, #0.0
 800328c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003290:	d102      	bne.n	8003298 <nmea_GGA+0x41c>
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	699b      	ldr	r3, [r3, #24]
 8003296:	e001      	b.n	800329c <nmea_GGA+0x420>
 8003298:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800329c:	687a      	ldr	r2, [r7, #4]
 800329e:	6193      	str	r3, [r2, #24]
        if(lon_deg_strtol != 0 && lon_min_strtof != 0 && lat_deg_strtol != 0 && lat_min_strtof != 0 && lat_deg!=0 && lon_deg!=0 && lat_deg<90 && lon_deg<180){
 80032a0:	e01a      	b.n	80032d8 <nmea_GGA+0x45c>
        }
        else {
            for(int i=0; i<counter; i++) free(values[i]);
 80032a2:	2300      	movs	r3, #0
 80032a4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80032a8:	e00e      	b.n	80032c8 <nmea_GGA+0x44c>
 80032aa:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80032ae:	009b      	lsls	r3, r3, #2
 80032b0:	33e0      	adds	r3, #224	@ 0xe0
 80032b2:	443b      	add	r3, r7
 80032b4:	f853 3cb4 	ldr.w	r3, [r3, #-180]
 80032b8:	4618      	mov	r0, r3
 80032ba:	f005 fccf 	bl	8008c5c <free>
 80032be:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80032c2:	3301      	adds	r3, #1
 80032c4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80032c8:	f8d7 20cc 	ldr.w	r2, [r7, #204]	@ 0xcc
 80032cc:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80032d0:	429a      	cmp	r2, r3
 80032d2:	dbea      	blt.n	80032aa <nmea_GGA+0x42e>
            return 0;
 80032d4:	2300      	movs	r3, #0
 80032d6:	e019      	b.n	800330c <nmea_GGA+0x490>
        }

    }

    for(int i=0; i<counter; i++) free(values[i]);
 80032d8:	2300      	movs	r3, #0
 80032da:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80032de:	e00e      	b.n	80032fe <nmea_GGA+0x482>
 80032e0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80032e4:	009b      	lsls	r3, r3, #2
 80032e6:	33e0      	adds	r3, #224	@ 0xe0
 80032e8:	443b      	add	r3, r7
 80032ea:	f853 3cb4 	ldr.w	r3, [r3, #-180]
 80032ee:	4618      	mov	r0, r3
 80032f0:	f005 fcb4 	bl	8008c5c <free>
 80032f4:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80032f8:	3301      	adds	r3, #1
 80032fa:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80032fe:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8003302:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8003306:	429a      	cmp	r2, r3
 8003308:	dbea      	blt.n	80032e0 <nmea_GGA+0x464>
    return 1;
 800330a:	2301      	movs	r3, #1
}
 800330c:	4618      	mov	r0, r3
 800330e:	37e0      	adds	r7, #224	@ 0xe0
 8003310:	46bd      	mov	sp, r7
 8003312:	bd80      	pop	{r7, pc}
 8003314:	20000c08 	.word	0x20000c08
 8003318:	10624dd3 	.word	0x10624dd3

0800331c <nmea_GSA>:


int nmea_GSA(NMEA *nmea_data, char*inputString){
 800331c:	b580      	push	{r7, lr}
 800331e:	b0a0      	sub	sp, #128	@ 0x80
 8003320:	af00      	add	r7, sp, #0
 8003322:	6078      	str	r0, [r7, #4]
 8003324:	6039      	str	r1, [r7, #0]
	char *values[25];
    memset(values, 0, sizeof(values));
 8003326:	f107 0308 	add.w	r3, r7, #8
 800332a:	2264      	movs	r2, #100	@ 0x64
 800332c:	2100      	movs	r1, #0
 800332e:	4618      	mov	r0, r3
 8003330:	f007 f9c5 	bl	800a6be <memset>
	int counter = getValues(inputString, values);
 8003334:	f107 0308 	add.w	r3, r7, #8
 8003338:	4619      	mov	r1, r3
 800333a:	6838      	ldr	r0, [r7, #0]
 800333c:	f7ff fd66 	bl	8002e0c <getValues>
 8003340:	6738      	str	r0, [r7, #112]	@ 0x70

    int fix = strtol(values[2], NULL, 10);
 8003342:	693b      	ldr	r3, [r7, #16]
 8003344:	220a      	movs	r2, #10
 8003346:	2100      	movs	r1, #0
 8003348:	4618      	mov	r0, r3
 800334a:	f006 fc1f 	bl	8009b8c <strtol>
 800334e:	66f8      	str	r0, [r7, #108]	@ 0x6c
    nmea_data->Fix = fix > 1 ? 1 : 0;
 8003350:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003352:	2b01      	cmp	r3, #1
 8003354:	bfcc      	ite	gt
 8003356:	2301      	movgt	r3, #1
 8003358:	2300      	movle	r3, #0
 800335a:	b2db      	uxtb	r3, r3
 800335c:	461a      	mov	r2, r3
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	775a      	strb	r2, [r3, #29]
    int satelliteCount = 0;
 8003362:	2300      	movs	r3, #0
 8003364:	67fb      	str	r3, [r7, #124]	@ 0x7c
    for(int i=3; i<15; i++){
 8003366:	2303      	movs	r3, #3
 8003368:	67bb      	str	r3, [r7, #120]	@ 0x78
 800336a:	e00e      	b.n	800338a <nmea_GSA+0x6e>
        if(values[i][0] != '\0'){
 800336c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800336e:	009b      	lsls	r3, r3, #2
 8003370:	3380      	adds	r3, #128	@ 0x80
 8003372:	443b      	add	r3, r7
 8003374:	f853 3c78 	ldr.w	r3, [r3, #-120]
 8003378:	781b      	ldrb	r3, [r3, #0]
 800337a:	2b00      	cmp	r3, #0
 800337c:	d002      	beq.n	8003384 <nmea_GSA+0x68>
            satelliteCount++;
 800337e:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8003380:	3301      	adds	r3, #1
 8003382:	67fb      	str	r3, [r7, #124]	@ 0x7c
    for(int i=3; i<15; i++){
 8003384:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003386:	3301      	adds	r3, #1
 8003388:	67bb      	str	r3, [r7, #120]	@ 0x78
 800338a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800338c:	2b0e      	cmp	r3, #14
 800338e:	dded      	ble.n	800336c <nmea_GSA+0x50>
        }
    }
    //nmea_data->Sats = satelliteCount;
    for(int i=0; i<counter; i++) free(values[i]);
 8003390:	2300      	movs	r3, #0
 8003392:	677b      	str	r3, [r7, #116]	@ 0x74
 8003394:	e00b      	b.n	80033ae <nmea_GSA+0x92>
 8003396:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003398:	009b      	lsls	r3, r3, #2
 800339a:	3380      	adds	r3, #128	@ 0x80
 800339c:	443b      	add	r3, r7
 800339e:	f853 3c78 	ldr.w	r3, [r3, #-120]
 80033a2:	4618      	mov	r0, r3
 80033a4:	f005 fc5a 	bl	8008c5c <free>
 80033a8:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80033aa:	3301      	adds	r3, #1
 80033ac:	677b      	str	r3, [r7, #116]	@ 0x74
 80033ae:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 80033b0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80033b2:	429a      	cmp	r2, r3
 80033b4:	dbef      	blt.n	8003396 <nmea_GSA+0x7a>
    return 1;
 80033b6:	2301      	movs	r3, #1
}
 80033b8:	4618      	mov	r0, r3
 80033ba:	3780      	adds	r7, #128	@ 0x80
 80033bc:	46bd      	mov	sp, r7
 80033be:	bd80      	pop	{r7, pc}

080033c0 <nmea_GLL>:



int nmea_GLL(NMEA *nmea_data, char*inputString) {
 80033c0:	b580      	push	{r7, lr}
 80033c2:	b0b4      	sub	sp, #208	@ 0xd0
 80033c4:	af00      	add	r7, sp, #0
 80033c6:	6078      	str	r0, [r7, #4]
 80033c8:	6039      	str	r1, [r7, #0]
	char *values[25];
    memset(values, 0, sizeof(values));
 80033ca:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033ce:	2264      	movs	r2, #100	@ 0x64
 80033d0:	2100      	movs	r1, #0
 80033d2:	4618      	mov	r0, r3
 80033d4:	f007 f973 	bl	800a6be <memset>
	int counter = getValues(inputString, values);
 80033d8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033dc:	4619      	mov	r1, r3
 80033de:	6838      	ldr	r0, [r7, #0]
 80033e0:	f7ff fd14 	bl	8002e0c <getValues>
 80033e4:	f8c7 00b4 	str.w	r0, [r7, #180]	@ 0xb4

    char latSide = values[2][0];
 80033e8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80033ea:	781b      	ldrb	r3, [r3, #0]
 80033ec:	f887 30b3 	strb.w	r3, [r7, #179]	@ 0xb3
    if (latSide == 'S' || latSide == 'N') { //check if data is sorta intact
 80033f0:	f897 30b3 	ldrb.w	r3, [r7, #179]	@ 0xb3
 80033f4:	2b53      	cmp	r3, #83	@ 0x53
 80033f6:	d004      	beq.n	8003402 <nmea_GLL+0x42>
 80033f8:	f897 30b3 	ldrb.w	r3, [r7, #179]	@ 0xb3
 80033fc:	2b4e      	cmp	r3, #78	@ 0x4e
 80033fe:	f040 8139 	bne.w	8003674 <nmea_GLL+0x2b4>
        char lat_d[2];
        char lat_m[7];
        for (int z = 0; z < 2; z++) lat_d[z] = values[1][z];
 8003402:	2300      	movs	r3, #0
 8003404:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8003408:	e010      	b.n	800342c <nmea_GLL+0x6c>
 800340a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800340c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8003410:	4413      	add	r3, r2
 8003412:	7819      	ldrb	r1, [r3, #0]
 8003414:	f107 0220 	add.w	r2, r7, #32
 8003418:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 800341c:	4413      	add	r3, r2
 800341e:	460a      	mov	r2, r1
 8003420:	701a      	strb	r2, [r3, #0]
 8003422:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8003426:	3301      	adds	r3, #1
 8003428:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800342c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8003430:	2b01      	cmp	r3, #1
 8003432:	ddea      	ble.n	800340a <nmea_GLL+0x4a>
        for (int z = 0; z < 6; z++) lat_m[z] = values[1][z + 2];
 8003434:	2300      	movs	r3, #0
 8003436:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800343a:	e011      	b.n	8003460 <nmea_GLL+0xa0>
 800343c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800343e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8003442:	3302      	adds	r3, #2
 8003444:	4413      	add	r3, r2
 8003446:	7819      	ldrb	r1, [r3, #0]
 8003448:	f107 0218 	add.w	r2, r7, #24
 800344c:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8003450:	4413      	add	r3, r2
 8003452:	460a      	mov	r2, r1
 8003454:	701a      	strb	r2, [r3, #0]
 8003456:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800345a:	3301      	adds	r3, #1
 800345c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003460:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8003464:	2b05      	cmp	r3, #5
 8003466:	dde9      	ble.n	800343c <nmea_GLL+0x7c>

        int lat_deg_strtol = strtol(lat_d, NULL, 10);
 8003468:	f107 0320 	add.w	r3, r7, #32
 800346c:	220a      	movs	r2, #10
 800346e:	2100      	movs	r1, #0
 8003470:	4618      	mov	r0, r3
 8003472:	f006 fb8b 	bl	8009b8c <strtol>
 8003476:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
        float lat_min_strtof = strtof(lat_m, NULL);
 800347a:	f107 0318 	add.w	r3, r7, #24
 800347e:	2100      	movs	r1, #0
 8003480:	4618      	mov	r0, r3
 8003482:	f006 faa5 	bl	80099d0 <strtof>
 8003486:	ed87 0a2a 	vstr	s0, [r7, #168]	@ 0xa8
        double lat_deg = lat_deg_strtol + lat_min_strtof / 60;
 800348a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800348e:	ee07 3a90 	vmov	s15, r3
 8003492:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003496:	edd7 6a2a 	vldr	s13, [r7, #168]	@ 0xa8
 800349a:	ed9f 6a85 	vldr	s12, [pc, #532]	@ 80036b0 <nmea_GLL+0x2f0>
 800349e:	eec6 7a86 	vdiv.f32	s15, s13, s12
 80034a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80034a6:	ee17 0a90 	vmov	r0, s15
 80034aa:	f7fd f84d 	bl	8000548 <__aeabi_f2d>
 80034ae:	4602      	mov	r2, r0
 80034b0:	460b      	mov	r3, r1
 80034b2:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0

        char lon_d[3];
        char lon_m[7];
        char lonSide = values[4][0];
 80034b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80034b8:	781b      	ldrb	r3, [r3, #0]
 80034ba:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
        for (int z = 0; z < 3; z++) lon_d[z] = values[3][z];
 80034be:	2300      	movs	r3, #0
 80034c0:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80034c4:	e010      	b.n	80034e8 <nmea_GLL+0x128>
 80034c6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80034c8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80034cc:	4413      	add	r3, r2
 80034ce:	7819      	ldrb	r1, [r3, #0]
 80034d0:	f107 0214 	add.w	r2, r7, #20
 80034d4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80034d8:	4413      	add	r3, r2
 80034da:	460a      	mov	r2, r1
 80034dc:	701a      	strb	r2, [r3, #0]
 80034de:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80034e2:	3301      	adds	r3, #1
 80034e4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80034e8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80034ec:	2b02      	cmp	r3, #2
 80034ee:	ddea      	ble.n	80034c6 <nmea_GLL+0x106>
        for (int z = 0; z < 6; z++) lon_m[z] = values[3][z + 3];
 80034f0:	2300      	movs	r3, #0
 80034f2:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80034f6:	e011      	b.n	800351c <nmea_GLL+0x15c>
 80034f8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80034fa:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80034fe:	3303      	adds	r3, #3
 8003500:	4413      	add	r3, r2
 8003502:	7819      	ldrb	r1, [r3, #0]
 8003504:	f107 020c 	add.w	r2, r7, #12
 8003508:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800350c:	4413      	add	r3, r2
 800350e:	460a      	mov	r2, r1
 8003510:	701a      	strb	r2, [r3, #0]
 8003512:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003516:	3301      	adds	r3, #1
 8003518:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800351c:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003520:	2b05      	cmp	r3, #5
 8003522:	dde9      	ble.n	80034f8 <nmea_GLL+0x138>

        int lon_deg_strtol = strtol(lon_d, NULL, 10);
 8003524:	f107 0314 	add.w	r3, r7, #20
 8003528:	220a      	movs	r2, #10
 800352a:	2100      	movs	r1, #0
 800352c:	4618      	mov	r0, r3
 800352e:	f006 fb2d 	bl	8009b8c <strtol>
 8003532:	f8c7 0098 	str.w	r0, [r7, #152]	@ 0x98
        float lon_min_strtof = strtof(lon_m, NULL);
 8003536:	f107 030c 	add.w	r3, r7, #12
 800353a:	2100      	movs	r1, #0
 800353c:	4618      	mov	r0, r3
 800353e:	f006 fa47 	bl	80099d0 <strtof>
 8003542:	ed87 0a25 	vstr	s0, [r7, #148]	@ 0x94
        double lon_deg = lon_deg_strtol + lon_min_strtof / 60;
 8003546:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800354a:	ee07 3a90 	vmov	s15, r3
 800354e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003552:	edd7 6a25 	vldr	s13, [r7, #148]	@ 0x94
 8003556:	ed9f 6a56 	vldr	s12, [pc, #344]	@ 80036b0 <nmea_GLL+0x2f0>
 800355a:	eec6 7a86 	vdiv.f32	s15, s13, s12
 800355e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003562:	ee17 0a90 	vmov	r0, s15
 8003566:	f7fc ffef 	bl	8000548 <__aeabi_f2d>
 800356a:	4602      	mov	r2, r0
 800356c:	460b      	mov	r3, r1
 800356e:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
        //confirm that we aren't on null island
        if(lon_deg_strtol != 0 && lon_min_strtof != 0 && lat_deg_strtol != 0 && lat_min_strtof != 0 && lat_deg!=0 && lon_deg!=0 && lat_deg<90 && lon_deg<180){
 8003572:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003576:	2b00      	cmp	r3, #0
 8003578:	d061      	beq.n	800363e <nmea_GLL+0x27e>
 800357a:	edd7 7a25 	vldr	s15, [r7, #148]	@ 0x94
 800357e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003586:	d05a      	beq.n	800363e <nmea_GLL+0x27e>
 8003588:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800358c:	2b00      	cmp	r3, #0
 800358e:	d056      	beq.n	800363e <nmea_GLL+0x27e>
 8003590:	edd7 7a2a 	vldr	s15, [r7, #168]	@ 0xa8
 8003594:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800359c:	d04f      	beq.n	800363e <nmea_GLL+0x27e>
 800359e:	f04f 0200 	mov.w	r2, #0
 80035a2:	f04f 0300 	mov.w	r3, #0
 80035a6:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 80035aa:	f7fd fa8d 	bl	8000ac8 <__aeabi_dcmpeq>
 80035ae:	4603      	mov	r3, r0
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	d144      	bne.n	800363e <nmea_GLL+0x27e>
 80035b4:	f04f 0200 	mov.w	r2, #0
 80035b8:	f04f 0300 	mov.w	r3, #0
 80035bc:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 80035c0:	f7fd fa82 	bl	8000ac8 <__aeabi_dcmpeq>
 80035c4:	4603      	mov	r3, r0
 80035c6:	2b00      	cmp	r3, #0
 80035c8:	d139      	bne.n	800363e <nmea_GLL+0x27e>
 80035ca:	f04f 0200 	mov.w	r2, #0
 80035ce:	4b39      	ldr	r3, [pc, #228]	@ (80036b4 <nmea_GLL+0x2f4>)
 80035d0:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 80035d4:	f7fd fa82 	bl	8000adc <__aeabi_dcmplt>
 80035d8:	4603      	mov	r3, r0
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d02f      	beq.n	800363e <nmea_GLL+0x27e>
 80035de:	f04f 0200 	mov.w	r2, #0
 80035e2:	4b35      	ldr	r3, [pc, #212]	@ (80036b8 <nmea_GLL+0x2f8>)
 80035e4:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 80035e8:	f7fd fa78 	bl	8000adc <__aeabi_dcmplt>
 80035ec:	4603      	mov	r3, r0
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d025      	beq.n	800363e <nmea_GLL+0x27e>
            nmea_data->Lat = lat_deg;
 80035f2:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 80035f6:	f7fd faf7 	bl	8000be8 <__aeabi_d2f>
 80035fa:	4602      	mov	r2, r0
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	601a      	str	r2, [r3, #0]
            nmea_data->Lon = lon_deg;
 8003600:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8003604:	f7fd faf0 	bl	8000be8 <__aeabi_d2f>
 8003608:	4602      	mov	r2, r0
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	605a      	str	r2, [r3, #4]
            if(latSide == 'S') nmea_data->Lat *= -1;
 800360e:	f897 30b3 	ldrb.w	r3, [r7, #179]	@ 0xb3
 8003612:	2b53      	cmp	r3, #83	@ 0x53
 8003614:	d107      	bne.n	8003626 <nmea_GLL+0x266>
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	edd3 7a00 	vldr	s15, [r3]
 800361c:	eef1 7a67 	vneg.f32	s15, s15
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	edc3 7a00 	vstr	s15, [r3]
            if(lonSide == 'W') nmea_data->Lon *= -1;
 8003626:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800362a:	2b57      	cmp	r3, #87	@ 0x57
 800362c:	d107      	bne.n	800363e <nmea_GLL+0x27e>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	edd3 7a01 	vldr	s15, [r3, #4]
 8003634:	eef1 7a67 	vneg.f32	s15, s15
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	edc3 7a01 	vstr	s15, [r3, #4]
        }
        for(int i = 0; i<counter; i++) free(values[i]);
 800363e:	2300      	movs	r3, #0
 8003640:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8003644:	e00e      	b.n	8003664 <nmea_GLL+0x2a4>
 8003646:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	33d0      	adds	r3, #208	@ 0xd0
 800364e:	443b      	add	r3, r7
 8003650:	f853 3cac 	ldr.w	r3, [r3, #-172]
 8003654:	4618      	mov	r0, r3
 8003656:	f005 fb01 	bl	8008c5c <free>
 800365a:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800365e:	3301      	adds	r3, #1
 8003660:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8003664:	f8d7 20bc 	ldr.w	r2, [r7, #188]	@ 0xbc
 8003668:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800366c:	429a      	cmp	r2, r3
 800366e:	dbea      	blt.n	8003646 <nmea_GLL+0x286>
        return 1;
 8003670:	2301      	movs	r3, #1
 8003672:	e019      	b.n	80036a8 <nmea_GLL+0x2e8>
    }
    else{
    	for(int i = 0; i<counter; i++) free(values[i]);
 8003674:	2300      	movs	r3, #0
 8003676:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800367a:	e00e      	b.n	800369a <nmea_GLL+0x2da>
 800367c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8003680:	009b      	lsls	r3, r3, #2
 8003682:	33d0      	adds	r3, #208	@ 0xd0
 8003684:	443b      	add	r3, r7
 8003686:	f853 3cac 	ldr.w	r3, [r3, #-172]
 800368a:	4618      	mov	r0, r3
 800368c:	f005 fae6 	bl	8008c5c <free>
 8003690:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8003694:	3301      	adds	r3, #1
 8003696:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800369a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800369e:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 80036a2:	429a      	cmp	r2, r3
 80036a4:	dbea      	blt.n	800367c <nmea_GLL+0x2bc>
    	return 0;
 80036a6:	2300      	movs	r3, #0
    }
}
 80036a8:	4618      	mov	r0, r3
 80036aa:	37d0      	adds	r7, #208	@ 0xd0
 80036ac:	46bd      	mov	sp, r7
 80036ae:	bd80      	pop	{r7, pc}
 80036b0:	42700000 	.word	0x42700000
 80036b4:	40568000 	.word	0x40568000
 80036b8:	40668000 	.word	0x40668000

080036bc <nmea_VTG>:

int nmea_VTG(NMEA *nmea_data, char*inputString) {
 80036bc:	b580      	push	{r7, lr}
 80036be:	b09e      	sub	sp, #120	@ 0x78
 80036c0:	af00      	add	r7, sp, #0
 80036c2:	6078      	str	r0, [r7, #4]
 80036c4:	6039      	str	r1, [r7, #0]
	char *values[25];
    memset(values, 0, sizeof(values));
 80036c6:	f107 0308 	add.w	r3, r7, #8
 80036ca:	2264      	movs	r2, #100	@ 0x64
 80036cc:	2100      	movs	r1, #0
 80036ce:	4618      	mov	r0, r3
 80036d0:	f006 fff5 	bl	800a6be <memset>
	int counter = getValues(inputString, values);
 80036d4:	f107 0308 	add.w	r3, r7, #8
 80036d8:	4619      	mov	r1, r3
 80036da:	6838      	ldr	r0, [r7, #0]
 80036dc:	f7ff fb96 	bl	8002e0c <getValues>
 80036e0:	6738      	str	r0, [r7, #112]	@ 0x70

    float speed = strtof(values[5], NULL); // 5 for kph, 3 for knots
 80036e2:	69fb      	ldr	r3, [r7, #28]
 80036e4:	2100      	movs	r1, #0
 80036e6:	4618      	mov	r0, r3
 80036e8:	f006 f972 	bl	80099d0 <strtof>
 80036ec:	ed87 0a1b 	vstr	s0, [r7, #108]	@ 0x6c
    nmea_data->Speed = speed;
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80036f4:	60da      	str	r2, [r3, #12]

    for(int i=0; i<counter; i++) free(values[i]);
 80036f6:	2300      	movs	r3, #0
 80036f8:	677b      	str	r3, [r7, #116]	@ 0x74
 80036fa:	e00b      	b.n	8003714 <nmea_VTG+0x58>
 80036fc:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80036fe:	009b      	lsls	r3, r3, #2
 8003700:	3378      	adds	r3, #120	@ 0x78
 8003702:	443b      	add	r3, r7
 8003704:	f853 3c70 	ldr.w	r3, [r3, #-112]
 8003708:	4618      	mov	r0, r3
 800370a:	f005 faa7 	bl	8008c5c <free>
 800370e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003710:	3301      	adds	r3, #1
 8003712:	677b      	str	r3, [r7, #116]	@ 0x74
 8003714:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8003716:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003718:	429a      	cmp	r2, r3
 800371a:	dbef      	blt.n	80036fc <nmea_VTG+0x40>
    return 1;
 800371c:	2301      	movs	r3, #1
}
 800371e:	4618      	mov	r0, r3
 8003720:	3778      	adds	r7, #120	@ 0x78
 8003722:	46bd      	mov	sp, r7
 8003724:	bd80      	pop	{r7, pc}
	...

08003728 <ParseNMEA>:

void ParseNMEA(NMEA *nmea_data, uint8_t *buffer){
 8003728:	b590      	push	{r4, r7, lr}
 800372a:	b085      	sub	sp, #20
 800372c:	af00      	add	r7, sp, #0
 800372e:	6078      	str	r0, [r7, #4]
 8003730:	6039      	str	r1, [r7, #0]
	memset(data, 0, sizeof(data));
 8003732:	228c      	movs	r2, #140	@ 0x8c
 8003734:	2100      	movs	r1, #0
 8003736:	486f      	ldr	r0, [pc, #444]	@ (80038f4 <ParseNMEA+0x1cc>)
 8003738:	f006 ffc1 	bl	800a6be <memset>
	char * token = strtok(buffer, "$");
 800373c:	496e      	ldr	r1, [pc, #440]	@ (80038f8 <ParseNMEA+0x1d0>)
 800373e:	6838      	ldr	r0, [r7, #0]
 8003740:	f006 ffd8 	bl	800a6f4 <strtok>
 8003744:	60f8      	str	r0, [r7, #12]
	uint8_t cnt = 0;
 8003746:	2300      	movs	r3, #0
 8003748:	72fb      	strb	r3, [r7, #11]
	while( token != NULL && cnt < DATA_SIZE) {
 800374a:	e01d      	b.n	8003788 <ParseNMEA+0x60>
		data[cnt] = malloc(strlen(token)+1);
 800374c:	68f8      	ldr	r0, [r7, #12]
 800374e:	f7fc fd8f 	bl	8000270 <strlen>
 8003752:	4603      	mov	r3, r0
 8003754:	3301      	adds	r3, #1
 8003756:	7afc      	ldrb	r4, [r7, #11]
 8003758:	4618      	mov	r0, r3
 800375a:	f005 fa77 	bl	8008c4c <malloc>
 800375e:	4603      	mov	r3, r0
 8003760:	461a      	mov	r2, r3
 8003762:	4b64      	ldr	r3, [pc, #400]	@ (80038f4 <ParseNMEA+0x1cc>)
 8003764:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
		strcpy(data[cnt], token);
 8003768:	7afb      	ldrb	r3, [r7, #11]
 800376a:	4a62      	ldr	r2, [pc, #392]	@ (80038f4 <ParseNMEA+0x1cc>)
 800376c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003770:	68f9      	ldr	r1, [r7, #12]
 8003772:	4618      	mov	r0, r3
 8003774:	f007 f8b7 	bl	800a8e6 <strcpy>
		cnt++;
 8003778:	7afb      	ldrb	r3, [r7, #11]
 800377a:	3301      	adds	r3, #1
 800377c:	72fb      	strb	r3, [r7, #11]

		token = strtok(NULL, "$");
 800377e:	495e      	ldr	r1, [pc, #376]	@ (80038f8 <ParseNMEA+0x1d0>)
 8003780:	2000      	movs	r0, #0
 8003782:	f006 ffb7 	bl	800a6f4 <strtok>
 8003786:	60f8      	str	r0, [r7, #12]
	while( token != NULL && cnt < DATA_SIZE) {
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	2b00      	cmp	r3, #0
 800378c:	d002      	beq.n	8003794 <ParseNMEA+0x6c>
 800378e:	7afb      	ldrb	r3, [r7, #11]
 8003790:	2b22      	cmp	r3, #34	@ 0x22
 8003792:	d9db      	bls.n	800374c <ParseNMEA+0x24>
	}
	correct = 0;
 8003794:	4b59      	ldr	r3, [pc, #356]	@ (80038fc <ParseNMEA+0x1d4>)
 8003796:	2200      	movs	r2, #0
 8003798:	701a      	strb	r2, [r3, #0]
    for(uint8_t i = 0; i<cnt; i++){
 800379a:	2300      	movs	r3, #0
 800379c:	72bb      	strb	r3, [r7, #10]
 800379e:	e08d      	b.n	80038bc <ParseNMEA+0x194>
    	if(strstr(data[i], "GN")!=NULL && strstr(data[i], "\r\n")!=NULL && checksum(data[i])){
 80037a0:	7abb      	ldrb	r3, [r7, #10]
 80037a2:	4a54      	ldr	r2, [pc, #336]	@ (80038f4 <ParseNMEA+0x1cc>)
 80037a4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037a8:	4955      	ldr	r1, [pc, #340]	@ (8003900 <ParseNMEA+0x1d8>)
 80037aa:	4618      	mov	r0, r3
 80037ac:	f006 fffe 	bl	800a7ac <strstr>
 80037b0:	4603      	mov	r3, r0
 80037b2:	2b00      	cmp	r3, #0
 80037b4:	d07b      	beq.n	80038ae <ParseNMEA+0x186>
 80037b6:	7abb      	ldrb	r3, [r7, #10]
 80037b8:	4a4e      	ldr	r2, [pc, #312]	@ (80038f4 <ParseNMEA+0x1cc>)
 80037ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037be:	4951      	ldr	r1, [pc, #324]	@ (8003904 <ParseNMEA+0x1dc>)
 80037c0:	4618      	mov	r0, r3
 80037c2:	f006 fff3 	bl	800a7ac <strstr>
 80037c6:	4603      	mov	r3, r0
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d070      	beq.n	80038ae <ParseNMEA+0x186>
 80037cc:	7abb      	ldrb	r3, [r7, #10]
 80037ce:	4a49      	ldr	r2, [pc, #292]	@ (80038f4 <ParseNMEA+0x1cc>)
 80037d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037d4:	4618      	mov	r0, r3
 80037d6:	f7ff facf 	bl	8002d78 <checksum>
 80037da:	4603      	mov	r3, r0
 80037dc:	2b00      	cmp	r3, #0
 80037de:	d066      	beq.n	80038ae <ParseNMEA+0x186>
    		if(strstr(data[i], "GNGLL")!=NULL){
 80037e0:	7abb      	ldrb	r3, [r7, #10]
 80037e2:	4a44      	ldr	r2, [pc, #272]	@ (80038f4 <ParseNMEA+0x1cc>)
 80037e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037e8:	4947      	ldr	r1, [pc, #284]	@ (8003908 <ParseNMEA+0x1e0>)
 80037ea:	4618      	mov	r0, r3
 80037ec:	f006 ffde 	bl	800a7ac <strstr>
 80037f0:	4603      	mov	r3, r0
 80037f2:	2b00      	cmp	r3, #0
 80037f4:	d00e      	beq.n	8003814 <ParseNMEA+0xec>
    			nmea_GLL(nmea_data, data[i]);
 80037f6:	7abb      	ldrb	r3, [r7, #10]
 80037f8:	4a3e      	ldr	r2, [pc, #248]	@ (80038f4 <ParseNMEA+0x1cc>)
 80037fa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037fe:	4619      	mov	r1, r3
 8003800:	6878      	ldr	r0, [r7, #4]
 8003802:	f7ff fddd 	bl	80033c0 <nmea_GLL>
        		correct++;
 8003806:	4b3d      	ldr	r3, [pc, #244]	@ (80038fc <ParseNMEA+0x1d4>)
 8003808:	781b      	ldrb	r3, [r3, #0]
 800380a:	3301      	adds	r3, #1
 800380c:	b2da      	uxtb	r2, r3
 800380e:	4b3b      	ldr	r3, [pc, #236]	@ (80038fc <ParseNMEA+0x1d4>)
 8003810:	701a      	strb	r2, [r3, #0]
 8003812:	e04c      	b.n	80038ae <ParseNMEA+0x186>
    	    }else if(strstr(data[i], "GNGSA")!=NULL){
 8003814:	7abb      	ldrb	r3, [r7, #10]
 8003816:	4a37      	ldr	r2, [pc, #220]	@ (80038f4 <ParseNMEA+0x1cc>)
 8003818:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800381c:	493b      	ldr	r1, [pc, #236]	@ (800390c <ParseNMEA+0x1e4>)
 800381e:	4618      	mov	r0, r3
 8003820:	f006 ffc4 	bl	800a7ac <strstr>
 8003824:	4603      	mov	r3, r0
 8003826:	2b00      	cmp	r3, #0
 8003828:	d00e      	beq.n	8003848 <ParseNMEA+0x120>
    	    	nmea_GSA(nmea_data, data[i]);
 800382a:	7abb      	ldrb	r3, [r7, #10]
 800382c:	4a31      	ldr	r2, [pc, #196]	@ (80038f4 <ParseNMEA+0x1cc>)
 800382e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003832:	4619      	mov	r1, r3
 8003834:	6878      	ldr	r0, [r7, #4]
 8003836:	f7ff fd71 	bl	800331c <nmea_GSA>
        		correct++;
 800383a:	4b30      	ldr	r3, [pc, #192]	@ (80038fc <ParseNMEA+0x1d4>)
 800383c:	781b      	ldrb	r3, [r3, #0]
 800383e:	3301      	adds	r3, #1
 8003840:	b2da      	uxtb	r2, r3
 8003842:	4b2e      	ldr	r3, [pc, #184]	@ (80038fc <ParseNMEA+0x1d4>)
 8003844:	701a      	strb	r2, [r3, #0]
 8003846:	e032      	b.n	80038ae <ParseNMEA+0x186>
    	    }else if(strstr(data[i], "GNGGA")!=NULL){
 8003848:	7abb      	ldrb	r3, [r7, #10]
 800384a:	4a2a      	ldr	r2, [pc, #168]	@ (80038f4 <ParseNMEA+0x1cc>)
 800384c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003850:	492f      	ldr	r1, [pc, #188]	@ (8003910 <ParseNMEA+0x1e8>)
 8003852:	4618      	mov	r0, r3
 8003854:	f006 ffaa 	bl	800a7ac <strstr>
 8003858:	4603      	mov	r3, r0
 800385a:	2b00      	cmp	r3, #0
 800385c:	d00e      	beq.n	800387c <ParseNMEA+0x154>
    	    	nmea_GGA(nmea_data, data[i]);
 800385e:	7abb      	ldrb	r3, [r7, #10]
 8003860:	4a24      	ldr	r2, [pc, #144]	@ (80038f4 <ParseNMEA+0x1cc>)
 8003862:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003866:	4619      	mov	r1, r3
 8003868:	6878      	ldr	r0, [r7, #4]
 800386a:	f7ff fb07 	bl	8002e7c <nmea_GGA>
        		correct++;
 800386e:	4b23      	ldr	r3, [pc, #140]	@ (80038fc <ParseNMEA+0x1d4>)
 8003870:	781b      	ldrb	r3, [r3, #0]
 8003872:	3301      	adds	r3, #1
 8003874:	b2da      	uxtb	r2, r3
 8003876:	4b21      	ldr	r3, [pc, #132]	@ (80038fc <ParseNMEA+0x1d4>)
 8003878:	701a      	strb	r2, [r3, #0]
 800387a:	e018      	b.n	80038ae <ParseNMEA+0x186>
    	    }else if(strstr(data[i], "GNVTG")!=NULL){
 800387c:	7abb      	ldrb	r3, [r7, #10]
 800387e:	4a1d      	ldr	r2, [pc, #116]	@ (80038f4 <ParseNMEA+0x1cc>)
 8003880:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003884:	4923      	ldr	r1, [pc, #140]	@ (8003914 <ParseNMEA+0x1ec>)
 8003886:	4618      	mov	r0, r3
 8003888:	f006 ff90 	bl	800a7ac <strstr>
 800388c:	4603      	mov	r3, r0
 800388e:	2b00      	cmp	r3, #0
 8003890:	d00d      	beq.n	80038ae <ParseNMEA+0x186>
    	    	nmea_VTG(nmea_data, data[i]);
 8003892:	7abb      	ldrb	r3, [r7, #10]
 8003894:	4a17      	ldr	r2, [pc, #92]	@ (80038f4 <ParseNMEA+0x1cc>)
 8003896:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800389a:	4619      	mov	r1, r3
 800389c:	6878      	ldr	r0, [r7, #4]
 800389e:	f7ff ff0d 	bl	80036bc <nmea_VTG>
        		correct++;
 80038a2:	4b16      	ldr	r3, [pc, #88]	@ (80038fc <ParseNMEA+0x1d4>)
 80038a4:	781b      	ldrb	r3, [r3, #0]
 80038a6:	3301      	adds	r3, #1
 80038a8:	b2da      	uxtb	r2, r3
 80038aa:	4b14      	ldr	r3, [pc, #80]	@ (80038fc <ParseNMEA+0x1d4>)
 80038ac:	701a      	strb	r2, [r3, #0]
    	    }
    	}
    	nmea_data->Corr = correct;
 80038ae:	4b13      	ldr	r3, [pc, #76]	@ (80038fc <ParseNMEA+0x1d4>)
 80038b0:	781a      	ldrb	r2, [r3, #0]
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	779a      	strb	r2, [r3, #30]
    for(uint8_t i = 0; i<cnt; i++){
 80038b6:	7abb      	ldrb	r3, [r7, #10]
 80038b8:	3301      	adds	r3, #1
 80038ba:	72bb      	strb	r3, [r7, #10]
 80038bc:	7aba      	ldrb	r2, [r7, #10]
 80038be:	7afb      	ldrb	r3, [r7, #11]
 80038c0:	429a      	cmp	r2, r3
 80038c2:	f4ff af6d 	bcc.w	80037a0 <ParseNMEA+0x78>
    }
    for(uint8_t i = 0; i<cnt; i++) free(data[i]);
 80038c6:	2300      	movs	r3, #0
 80038c8:	727b      	strb	r3, [r7, #9]
 80038ca:	e009      	b.n	80038e0 <ParseNMEA+0x1b8>
 80038cc:	7a7b      	ldrb	r3, [r7, #9]
 80038ce:	4a09      	ldr	r2, [pc, #36]	@ (80038f4 <ParseNMEA+0x1cc>)
 80038d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80038d4:	4618      	mov	r0, r3
 80038d6:	f005 f9c1 	bl	8008c5c <free>
 80038da:	7a7b      	ldrb	r3, [r7, #9]
 80038dc:	3301      	adds	r3, #1
 80038de:	727b      	strb	r3, [r7, #9]
 80038e0:	7a7a      	ldrb	r2, [r7, #9]
 80038e2:	7afb      	ldrb	r3, [r7, #11]
 80038e4:	429a      	cmp	r2, r3
 80038e6:	d3f1      	bcc.n	80038cc <ParseNMEA+0x1a4>
}
 80038e8:	bf00      	nop
 80038ea:	bf00      	nop
 80038ec:	3714      	adds	r7, #20
 80038ee:	46bd      	mov	sp, r7
 80038f0:	bd90      	pop	{r4, r7, pc}
 80038f2:	bf00      	nop
 80038f4:	20000b78 	.word	0x20000b78
 80038f8:	0800d24c 	.word	0x0800d24c
 80038fc:	20000c04 	.word	0x20000c04
 8003900:	0800d250 	.word	0x0800d250
 8003904:	0800d254 	.word	0x0800d254
 8003908:	0800d258 	.word	0x0800d258
 800390c:	0800d260 	.word	0x0800d260
 8003910:	0800d268 	.word	0x0800d268
 8003914:	0800d270 	.word	0x0800d270

08003918 <HAL_MspInit>:
 8003918:	b480      	push	{r7}
 800391a:	b083      	sub	sp, #12
 800391c:	af00      	add	r7, sp, #0
 800391e:	4b0f      	ldr	r3, [pc, #60]	@ (800395c <HAL_MspInit+0x44>)
 8003920:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003922:	4a0e      	ldr	r2, [pc, #56]	@ (800395c <HAL_MspInit+0x44>)
 8003924:	f043 0301 	orr.w	r3, r3, #1
 8003928:	6613      	str	r3, [r2, #96]	@ 0x60
 800392a:	4b0c      	ldr	r3, [pc, #48]	@ (800395c <HAL_MspInit+0x44>)
 800392c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800392e:	f003 0301 	and.w	r3, r3, #1
 8003932:	607b      	str	r3, [r7, #4]
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	4b09      	ldr	r3, [pc, #36]	@ (800395c <HAL_MspInit+0x44>)
 8003938:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800393a:	4a08      	ldr	r2, [pc, #32]	@ (800395c <HAL_MspInit+0x44>)
 800393c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003940:	6593      	str	r3, [r2, #88]	@ 0x58
 8003942:	4b06      	ldr	r3, [pc, #24]	@ (800395c <HAL_MspInit+0x44>)
 8003944:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003946:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800394a:	603b      	str	r3, [r7, #0]
 800394c:	683b      	ldr	r3, [r7, #0]
 800394e:	bf00      	nop
 8003950:	370c      	adds	r7, #12
 8003952:	46bd      	mov	sp, r7
 8003954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003958:	4770      	bx	lr
 800395a:	bf00      	nop
 800395c:	40021000 	.word	0x40021000

08003960 <HAL_ADC_MspInit>:
 8003960:	b580      	push	{r7, lr}
 8003962:	b0a2      	sub	sp, #136	@ 0x88
 8003964:	af00      	add	r7, sp, #0
 8003966:	6078      	str	r0, [r7, #4]
 8003968:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800396c:	2200      	movs	r2, #0
 800396e:	601a      	str	r2, [r3, #0]
 8003970:	605a      	str	r2, [r3, #4]
 8003972:	609a      	str	r2, [r3, #8]
 8003974:	60da      	str	r2, [r3, #12]
 8003976:	611a      	str	r2, [r3, #16]
 8003978:	f107 0318 	add.w	r3, r7, #24
 800397c:	225c      	movs	r2, #92	@ 0x5c
 800397e:	2100      	movs	r1, #0
 8003980:	4618      	mov	r0, r3
 8003982:	f006 fe9c 	bl	800a6be <memset>
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	4a31      	ldr	r2, [pc, #196]	@ (8003a50 <HAL_ADC_MspInit+0xf0>)
 800398c:	4293      	cmp	r3, r2
 800398e:	d15a      	bne.n	8003a46 <HAL_ADC_MspInit+0xe6>
 8003990:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8003994:	61bb      	str	r3, [r7, #24]
 8003996:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 800399a:	66bb      	str	r3, [r7, #104]	@ 0x68
 800399c:	2303      	movs	r3, #3
 800399e:	61fb      	str	r3, [r7, #28]
 80039a0:	2301      	movs	r3, #1
 80039a2:	623b      	str	r3, [r7, #32]
 80039a4:	2308      	movs	r3, #8
 80039a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80039a8:	2307      	movs	r3, #7
 80039aa:	62bb      	str	r3, [r7, #40]	@ 0x28
 80039ac:	2302      	movs	r3, #2
 80039ae:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80039b0:	2302      	movs	r3, #2
 80039b2:	633b      	str	r3, [r7, #48]	@ 0x30
 80039b4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80039b8:	637b      	str	r3, [r7, #52]	@ 0x34
 80039ba:	f107 0318 	add.w	r3, r7, #24
 80039be:	4618      	mov	r0, r3
 80039c0:	f003 f9a4 	bl	8006d0c <HAL_RCCEx_PeriphCLKConfig>
 80039c4:	4603      	mov	r3, r0
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d001      	beq.n	80039ce <HAL_ADC_MspInit+0x6e>
 80039ca:	f7ff f9cf 	bl	8002d6c <Error_Handler>
 80039ce:	4b21      	ldr	r3, [pc, #132]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 80039d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80039d2:	4a20      	ldr	r2, [pc, #128]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 80039d4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80039d8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80039da:	4b1e      	ldr	r3, [pc, #120]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 80039dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80039de:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80039e2:	617b      	str	r3, [r7, #20]
 80039e4:	697b      	ldr	r3, [r7, #20]
 80039e6:	4b1b      	ldr	r3, [pc, #108]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 80039e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80039ea:	4a1a      	ldr	r2, [pc, #104]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 80039ec:	f043 0304 	orr.w	r3, r3, #4
 80039f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80039f2:	4b18      	ldr	r3, [pc, #96]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 80039f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80039f6:	f003 0304 	and.w	r3, r3, #4
 80039fa:	613b      	str	r3, [r7, #16]
 80039fc:	693b      	ldr	r3, [r7, #16]
 80039fe:	4b15      	ldr	r3, [pc, #84]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 8003a00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003a02:	4a14      	ldr	r2, [pc, #80]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 8003a04:	f043 0302 	orr.w	r3, r3, #2
 8003a08:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003a0a:	4b12      	ldr	r3, [pc, #72]	@ (8003a54 <HAL_ADC_MspInit+0xf4>)
 8003a0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003a0e:	f003 0302 	and.w	r3, r3, #2
 8003a12:	60fb      	str	r3, [r7, #12]
 8003a14:	68fb      	ldr	r3, [r7, #12]
 8003a16:	2310      	movs	r3, #16
 8003a18:	677b      	str	r3, [r7, #116]	@ 0x74
 8003a1a:	230b      	movs	r3, #11
 8003a1c:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003a1e:	2300      	movs	r3, #0
 8003a20:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003a22:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8003a26:	4619      	mov	r1, r3
 8003a28:	480b      	ldr	r0, [pc, #44]	@ (8003a58 <HAL_ADC_MspInit+0xf8>)
 8003a2a:	f002 f8f3 	bl	8005c14 <HAL_GPIO_Init>
 8003a2e:	2301      	movs	r3, #1
 8003a30:	677b      	str	r3, [r7, #116]	@ 0x74
 8003a32:	230b      	movs	r3, #11
 8003a34:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003a36:	2300      	movs	r3, #0
 8003a38:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003a3a:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8003a3e:	4619      	mov	r1, r3
 8003a40:	4806      	ldr	r0, [pc, #24]	@ (8003a5c <HAL_ADC_MspInit+0xfc>)
 8003a42:	f002 f8e7 	bl	8005c14 <HAL_GPIO_Init>
 8003a46:	bf00      	nop
 8003a48:	3788      	adds	r7, #136	@ 0x88
 8003a4a:	46bd      	mov	sp, r7
 8003a4c:	bd80      	pop	{r7, pc}
 8003a4e:	bf00      	nop
 8003a50:	50040000 	.word	0x50040000
 8003a54:	40021000 	.word	0x40021000
 8003a58:	48000800 	.word	0x48000800
 8003a5c:	48000400 	.word	0x48000400

08003a60 <HAL_SPI_MspInit>:
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b08a      	sub	sp, #40	@ 0x28
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	6078      	str	r0, [r7, #4]
 8003a68:	f107 0314 	add.w	r3, r7, #20
 8003a6c:	2200      	movs	r2, #0
 8003a6e:	601a      	str	r2, [r3, #0]
 8003a70:	605a      	str	r2, [r3, #4]
 8003a72:	609a      	str	r2, [r3, #8]
 8003a74:	60da      	str	r2, [r3, #12]
 8003a76:	611a      	str	r2, [r3, #16]
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	4a17      	ldr	r2, [pc, #92]	@ (8003adc <HAL_SPI_MspInit+0x7c>)
 8003a7e:	4293      	cmp	r3, r2
 8003a80:	d128      	bne.n	8003ad4 <HAL_SPI_MspInit+0x74>
 8003a82:	4b17      	ldr	r3, [pc, #92]	@ (8003ae0 <HAL_SPI_MspInit+0x80>)
 8003a84:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003a86:	4a16      	ldr	r2, [pc, #88]	@ (8003ae0 <HAL_SPI_MspInit+0x80>)
 8003a88:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003a8c:	6613      	str	r3, [r2, #96]	@ 0x60
 8003a8e:	4b14      	ldr	r3, [pc, #80]	@ (8003ae0 <HAL_SPI_MspInit+0x80>)
 8003a90:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003a92:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003a96:	613b      	str	r3, [r7, #16]
 8003a98:	693b      	ldr	r3, [r7, #16]
 8003a9a:	4b11      	ldr	r3, [pc, #68]	@ (8003ae0 <HAL_SPI_MspInit+0x80>)
 8003a9c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003a9e:	4a10      	ldr	r2, [pc, #64]	@ (8003ae0 <HAL_SPI_MspInit+0x80>)
 8003aa0:	f043 0301 	orr.w	r3, r3, #1
 8003aa4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003aa6:	4b0e      	ldr	r3, [pc, #56]	@ (8003ae0 <HAL_SPI_MspInit+0x80>)
 8003aa8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003aaa:	f003 0301 	and.w	r3, r3, #1
 8003aae:	60fb      	str	r3, [r7, #12]
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	23e0      	movs	r3, #224	@ 0xe0
 8003ab4:	617b      	str	r3, [r7, #20]
 8003ab6:	2302      	movs	r3, #2
 8003ab8:	61bb      	str	r3, [r7, #24]
 8003aba:	2300      	movs	r3, #0
 8003abc:	61fb      	str	r3, [r7, #28]
 8003abe:	2303      	movs	r3, #3
 8003ac0:	623b      	str	r3, [r7, #32]
 8003ac2:	2305      	movs	r3, #5
 8003ac4:	627b      	str	r3, [r7, #36]	@ 0x24
 8003ac6:	f107 0314 	add.w	r3, r7, #20
 8003aca:	4619      	mov	r1, r3
 8003acc:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8003ad0:	f002 f8a0 	bl	8005c14 <HAL_GPIO_Init>
 8003ad4:	bf00      	nop
 8003ad6:	3728      	adds	r7, #40	@ 0x28
 8003ad8:	46bd      	mov	sp, r7
 8003ada:	bd80      	pop	{r7, pc}
 8003adc:	40013000 	.word	0x40013000
 8003ae0:	40021000 	.word	0x40021000

08003ae4 <HAL_TIM_Base_MspInit>:
 8003ae4:	b580      	push	{r7, lr}
 8003ae6:	b084      	sub	sp, #16
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	6078      	str	r0, [r7, #4]
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	4a1a      	ldr	r2, [pc, #104]	@ (8003b5c <HAL_TIM_Base_MspInit+0x78>)
 8003af2:	4293      	cmp	r3, r2
 8003af4:	d114      	bne.n	8003b20 <HAL_TIM_Base_MspInit+0x3c>
 8003af6:	4b1a      	ldr	r3, [pc, #104]	@ (8003b60 <HAL_TIM_Base_MspInit+0x7c>)
 8003af8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003afa:	4a19      	ldr	r2, [pc, #100]	@ (8003b60 <HAL_TIM_Base_MspInit+0x7c>)
 8003afc:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8003b00:	6613      	str	r3, [r2, #96]	@ 0x60
 8003b02:	4b17      	ldr	r3, [pc, #92]	@ (8003b60 <HAL_TIM_Base_MspInit+0x7c>)
 8003b04:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003b06:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003b0a:	60fb      	str	r3, [r7, #12]
 8003b0c:	68fb      	ldr	r3, [r7, #12]
 8003b0e:	2200      	movs	r2, #0
 8003b10:	2100      	movs	r1, #0
 8003b12:	2019      	movs	r0, #25
 8003b14:	f001 fe4f 	bl	80057b6 <HAL_NVIC_SetPriority>
 8003b18:	2019      	movs	r0, #25
 8003b1a:	f001 fe68 	bl	80057ee <HAL_NVIC_EnableIRQ>
 8003b1e:	e018      	b.n	8003b52 <HAL_TIM_Base_MspInit+0x6e>
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003b28:	d113      	bne.n	8003b52 <HAL_TIM_Base_MspInit+0x6e>
 8003b2a:	4b0d      	ldr	r3, [pc, #52]	@ (8003b60 <HAL_TIM_Base_MspInit+0x7c>)
 8003b2c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b2e:	4a0c      	ldr	r2, [pc, #48]	@ (8003b60 <HAL_TIM_Base_MspInit+0x7c>)
 8003b30:	f043 0301 	orr.w	r3, r3, #1
 8003b34:	6593      	str	r3, [r2, #88]	@ 0x58
 8003b36:	4b0a      	ldr	r3, [pc, #40]	@ (8003b60 <HAL_TIM_Base_MspInit+0x7c>)
 8003b38:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003b3a:	f003 0301 	and.w	r3, r3, #1
 8003b3e:	60bb      	str	r3, [r7, #8]
 8003b40:	68bb      	ldr	r3, [r7, #8]
 8003b42:	2200      	movs	r2, #0
 8003b44:	2100      	movs	r1, #0
 8003b46:	201c      	movs	r0, #28
 8003b48:	f001 fe35 	bl	80057b6 <HAL_NVIC_SetPriority>
 8003b4c:	201c      	movs	r0, #28
 8003b4e:	f001 fe4e 	bl	80057ee <HAL_NVIC_EnableIRQ>
 8003b52:	bf00      	nop
 8003b54:	3710      	adds	r7, #16
 8003b56:	46bd      	mov	sp, r7
 8003b58:	bd80      	pop	{r7, pc}
 8003b5a:	bf00      	nop
 8003b5c:	40012c00 	.word	0x40012c00
 8003b60:	40021000 	.word	0x40021000

08003b64 <HAL_UART_MspInit>:
 8003b64:	b580      	push	{r7, lr}
 8003b66:	b0a2      	sub	sp, #136	@ 0x88
 8003b68:	af00      	add	r7, sp, #0
 8003b6a:	6078      	str	r0, [r7, #4]
 8003b6c:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8003b70:	2200      	movs	r2, #0
 8003b72:	601a      	str	r2, [r3, #0]
 8003b74:	605a      	str	r2, [r3, #4]
 8003b76:	609a      	str	r2, [r3, #8]
 8003b78:	60da      	str	r2, [r3, #12]
 8003b7a:	611a      	str	r2, [r3, #16]
 8003b7c:	f107 0318 	add.w	r3, r7, #24
 8003b80:	225c      	movs	r2, #92	@ 0x5c
 8003b82:	2100      	movs	r1, #0
 8003b84:	4618      	mov	r0, r3
 8003b86:	f006 fd9a 	bl	800a6be <memset>
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	4a55      	ldr	r2, [pc, #340]	@ (8003ce4 <HAL_UART_MspInit+0x180>)
 8003b90:	4293      	cmp	r3, r2
 8003b92:	d13a      	bne.n	8003c0a <HAL_UART_MspInit+0xa6>
 8003b94:	2301      	movs	r3, #1
 8003b96:	61bb      	str	r3, [r7, #24]
 8003b98:	2300      	movs	r3, #0
 8003b9a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003b9c:	f107 0318 	add.w	r3, r7, #24
 8003ba0:	4618      	mov	r0, r3
 8003ba2:	f003 f8b3 	bl	8006d0c <HAL_RCCEx_PeriphCLKConfig>
 8003ba6:	4603      	mov	r3, r0
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d001      	beq.n	8003bb0 <HAL_UART_MspInit+0x4c>
 8003bac:	f7ff f8de 	bl	8002d6c <Error_Handler>
 8003bb0:	4b4d      	ldr	r3, [pc, #308]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003bb2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003bb4:	4a4c      	ldr	r2, [pc, #304]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003bb6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003bba:	6613      	str	r3, [r2, #96]	@ 0x60
 8003bbc:	4b4a      	ldr	r3, [pc, #296]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003bbe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003bc0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003bc4:	617b      	str	r3, [r7, #20]
 8003bc6:	697b      	ldr	r3, [r7, #20]
 8003bc8:	4b47      	ldr	r3, [pc, #284]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003bca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003bcc:	4a46      	ldr	r2, [pc, #280]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003bce:	f043 0301 	orr.w	r3, r3, #1
 8003bd2:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003bd4:	4b44      	ldr	r3, [pc, #272]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003bd6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003bd8:	f003 0301 	and.w	r3, r3, #1
 8003bdc:	613b      	str	r3, [r7, #16]
 8003bde:	693b      	ldr	r3, [r7, #16]
 8003be0:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8003be4:	677b      	str	r3, [r7, #116]	@ 0x74
 8003be6:	2302      	movs	r3, #2
 8003be8:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003bea:	2300      	movs	r3, #0
 8003bec:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003bee:	2303      	movs	r3, #3
 8003bf0:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003bf4:	2307      	movs	r3, #7
 8003bf6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003bfa:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8003bfe:	4619      	mov	r1, r3
 8003c00:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8003c04:	f002 f806 	bl	8005c14 <HAL_GPIO_Init>
 8003c08:	e067      	b.n	8003cda <HAL_UART_MspInit+0x176>
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	4a37      	ldr	r2, [pc, #220]	@ (8003cec <HAL_UART_MspInit+0x188>)
 8003c10:	4293      	cmp	r3, r2
 8003c12:	d162      	bne.n	8003cda <HAL_UART_MspInit+0x176>
 8003c14:	2304      	movs	r3, #4
 8003c16:	61bb      	str	r3, [r7, #24]
 8003c18:	2300      	movs	r3, #0
 8003c1a:	643b      	str	r3, [r7, #64]	@ 0x40
 8003c1c:	f107 0318 	add.w	r3, r7, #24
 8003c20:	4618      	mov	r0, r3
 8003c22:	f003 f873 	bl	8006d0c <HAL_RCCEx_PeriphCLKConfig>
 8003c26:	4603      	mov	r3, r0
 8003c28:	2b00      	cmp	r3, #0
 8003c2a:	d001      	beq.n	8003c30 <HAL_UART_MspInit+0xcc>
 8003c2c:	f7ff f89e 	bl	8002d6c <Error_Handler>
 8003c30:	4b2d      	ldr	r3, [pc, #180]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003c32:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003c34:	4a2c      	ldr	r2, [pc, #176]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003c36:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003c3a:	6593      	str	r3, [r2, #88]	@ 0x58
 8003c3c:	4b2a      	ldr	r3, [pc, #168]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003c3e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003c40:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003c44:	60fb      	str	r3, [r7, #12]
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	4b27      	ldr	r3, [pc, #156]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003c4a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c4c:	4a26      	ldr	r2, [pc, #152]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003c4e:	f043 0304 	orr.w	r3, r3, #4
 8003c52:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003c54:	4b24      	ldr	r3, [pc, #144]	@ (8003ce8 <HAL_UART_MspInit+0x184>)
 8003c56:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c58:	f003 0304 	and.w	r3, r3, #4
 8003c5c:	60bb      	str	r3, [r7, #8]
 8003c5e:	68bb      	ldr	r3, [r7, #8]
 8003c60:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8003c64:	677b      	str	r3, [r7, #116]	@ 0x74
 8003c66:	2302      	movs	r3, #2
 8003c68:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003c6e:	2303      	movs	r3, #3
 8003c70:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003c74:	2307      	movs	r3, #7
 8003c76:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003c7a:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 8003c7e:	4619      	mov	r1, r3
 8003c80:	481b      	ldr	r0, [pc, #108]	@ (8003cf0 <HAL_UART_MspInit+0x18c>)
 8003c82:	f001 ffc7 	bl	8005c14 <HAL_GPIO_Init>
 8003c86:	4b1b      	ldr	r3, [pc, #108]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003c88:	4a1b      	ldr	r2, [pc, #108]	@ (8003cf8 <HAL_UART_MspInit+0x194>)
 8003c8a:	601a      	str	r2, [r3, #0]
 8003c8c:	4b19      	ldr	r3, [pc, #100]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003c8e:	2202      	movs	r2, #2
 8003c90:	605a      	str	r2, [r3, #4]
 8003c92:	4b18      	ldr	r3, [pc, #96]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003c94:	2200      	movs	r2, #0
 8003c96:	609a      	str	r2, [r3, #8]
 8003c98:	4b16      	ldr	r3, [pc, #88]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003c9a:	2200      	movs	r2, #0
 8003c9c:	60da      	str	r2, [r3, #12]
 8003c9e:	4b15      	ldr	r3, [pc, #84]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003ca0:	2280      	movs	r2, #128	@ 0x80
 8003ca2:	611a      	str	r2, [r3, #16]
 8003ca4:	4b13      	ldr	r3, [pc, #76]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003ca6:	2200      	movs	r2, #0
 8003ca8:	615a      	str	r2, [r3, #20]
 8003caa:	4b12      	ldr	r3, [pc, #72]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003cac:	2200      	movs	r2, #0
 8003cae:	619a      	str	r2, [r3, #24]
 8003cb0:	4b10      	ldr	r3, [pc, #64]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003cb2:	2200      	movs	r2, #0
 8003cb4:	61da      	str	r2, [r3, #28]
 8003cb6:	4b0f      	ldr	r3, [pc, #60]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003cb8:	f44f 5240 	mov.w	r2, #12288	@ 0x3000
 8003cbc:	621a      	str	r2, [r3, #32]
 8003cbe:	480d      	ldr	r0, [pc, #52]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003cc0:	f001 fdb0 	bl	8005824 <HAL_DMA_Init>
 8003cc4:	4603      	mov	r3, r0
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d001      	beq.n	8003cce <HAL_UART_MspInit+0x16a>
 8003cca:	f7ff f84f 	bl	8002d6c <Error_Handler>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	4a08      	ldr	r2, [pc, #32]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003cd2:	675a      	str	r2, [r3, #116]	@ 0x74
 8003cd4:	4a07      	ldr	r2, [pc, #28]	@ (8003cf4 <HAL_UART_MspInit+0x190>)
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	6293      	str	r3, [r2, #40]	@ 0x28
 8003cda:	bf00      	nop
 8003cdc:	3788      	adds	r7, #136	@ 0x88
 8003cde:	46bd      	mov	sp, r7
 8003ce0:	bd80      	pop	{r7, pc}
 8003ce2:	bf00      	nop
 8003ce4:	40013800 	.word	0x40013800
 8003ce8:	40021000 	.word	0x40021000
 8003cec:	40004800 	.word	0x40004800
 8003cf0:	48000800 	.word	0x48000800
 8003cf4:	20000530 	.word	0x20000530
 8003cf8:	40020030 	.word	0x40020030

08003cfc <NMI_Handler>:
 8003cfc:	b480      	push	{r7}
 8003cfe:	af00      	add	r7, sp, #0
 8003d00:	bf00      	nop
 8003d02:	e7fd      	b.n	8003d00 <NMI_Handler+0x4>

08003d04 <HardFault_Handler>:
 8003d04:	b480      	push	{r7}
 8003d06:	af00      	add	r7, sp, #0
 8003d08:	bf00      	nop
 8003d0a:	e7fd      	b.n	8003d08 <HardFault_Handler+0x4>

08003d0c <MemManage_Handler>:
 8003d0c:	b480      	push	{r7}
 8003d0e:	af00      	add	r7, sp, #0
 8003d10:	bf00      	nop
 8003d12:	e7fd      	b.n	8003d10 <MemManage_Handler+0x4>

08003d14 <BusFault_Handler>:
 8003d14:	b480      	push	{r7}
 8003d16:	af00      	add	r7, sp, #0
 8003d18:	bf00      	nop
 8003d1a:	e7fd      	b.n	8003d18 <BusFault_Handler+0x4>

08003d1c <UsageFault_Handler>:
 8003d1c:	b480      	push	{r7}
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	bf00      	nop
 8003d22:	e7fd      	b.n	8003d20 <UsageFault_Handler+0x4>

08003d24 <SVC_Handler>:
 8003d24:	b480      	push	{r7}
 8003d26:	af00      	add	r7, sp, #0
 8003d28:	bf00      	nop
 8003d2a:	46bd      	mov	sp, r7
 8003d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d30:	4770      	bx	lr

08003d32 <DebugMon_Handler>:
 8003d32:	b480      	push	{r7}
 8003d34:	af00      	add	r7, sp, #0
 8003d36:	bf00      	nop
 8003d38:	46bd      	mov	sp, r7
 8003d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d3e:	4770      	bx	lr

08003d40 <PendSV_Handler>:
 8003d40:	b480      	push	{r7}
 8003d42:	af00      	add	r7, sp, #0
 8003d44:	bf00      	nop
 8003d46:	46bd      	mov	sp, r7
 8003d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d4c:	4770      	bx	lr

08003d4e <SysTick_Handler>:
 8003d4e:	b580      	push	{r7, lr}
 8003d50:	af00      	add	r7, sp, #0
 8003d52:	f000 f977 	bl	8004044 <HAL_IncTick>
 8003d56:	bf00      	nop
 8003d58:	bd80      	pop	{r7, pc}
	...

08003d5c <DMA1_Channel3_IRQHandler>:
 8003d5c:	b580      	push	{r7, lr}
 8003d5e:	af00      	add	r7, sp, #0
 8003d60:	4802      	ldr	r0, [pc, #8]	@ (8003d6c <DMA1_Channel3_IRQHandler+0x10>)
 8003d62:	f001 fe77 	bl	8005a54 <HAL_DMA_IRQHandler>
 8003d66:	bf00      	nop
 8003d68:	bd80      	pop	{r7, pc}
 8003d6a:	bf00      	nop
 8003d6c:	20000530 	.word	0x20000530

08003d70 <TIM1_UP_TIM16_IRQHandler>:
 8003d70:	b580      	push	{r7, lr}
 8003d72:	af00      	add	r7, sp, #0
 8003d74:	4802      	ldr	r0, [pc, #8]	@ (8003d80 <TIM1_UP_TIM16_IRQHandler+0x10>)
 8003d76:	f003 fc4b 	bl	8007610 <HAL_TIM_IRQHandler>
 8003d7a:	bf00      	nop
 8003d7c:	bd80      	pop	{r7, pc}
 8003d7e:	bf00      	nop
 8003d80:	20000388 	.word	0x20000388

08003d84 <TIM2_IRQHandler>:
 8003d84:	b580      	push	{r7, lr}
 8003d86:	af00      	add	r7, sp, #0
 8003d88:	4802      	ldr	r0, [pc, #8]	@ (8003d94 <TIM2_IRQHandler+0x10>)
 8003d8a:	f003 fc41 	bl	8007610 <HAL_TIM_IRQHandler>
 8003d8e:	bf00      	nop
 8003d90:	bd80      	pop	{r7, pc}
 8003d92:	bf00      	nop
 8003d94:	200003d4 	.word	0x200003d4

08003d98 <_getpid>:
 8003d98:	b480      	push	{r7}
 8003d9a:	af00      	add	r7, sp, #0
 8003d9c:	2301      	movs	r3, #1
 8003d9e:	4618      	mov	r0, r3
 8003da0:	46bd      	mov	sp, r7
 8003da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003da6:	4770      	bx	lr

08003da8 <_kill>:
 8003da8:	b580      	push	{r7, lr}
 8003daa:	b082      	sub	sp, #8
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	6078      	str	r0, [r7, #4]
 8003db0:	6039      	str	r1, [r7, #0]
 8003db2:	f006 fd6b 	bl	800a88c <__errno>
 8003db6:	4603      	mov	r3, r0
 8003db8:	2216      	movs	r2, #22
 8003dba:	601a      	str	r2, [r3, #0]
 8003dbc:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8003dc0:	4618      	mov	r0, r3
 8003dc2:	3708      	adds	r7, #8
 8003dc4:	46bd      	mov	sp, r7
 8003dc6:	bd80      	pop	{r7, pc}

08003dc8 <_exit>:
 8003dc8:	b580      	push	{r7, lr}
 8003dca:	b082      	sub	sp, #8
 8003dcc:	af00      	add	r7, sp, #0
 8003dce:	6078      	str	r0, [r7, #4]
 8003dd0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8003dd4:	6878      	ldr	r0, [r7, #4]
 8003dd6:	f7ff ffe7 	bl	8003da8 <_kill>
 8003dda:	bf00      	nop
 8003ddc:	e7fd      	b.n	8003dda <_exit+0x12>

08003dde <_read>:
 8003dde:	b580      	push	{r7, lr}
 8003de0:	b086      	sub	sp, #24
 8003de2:	af00      	add	r7, sp, #0
 8003de4:	60f8      	str	r0, [r7, #12]
 8003de6:	60b9      	str	r1, [r7, #8]
 8003de8:	607a      	str	r2, [r7, #4]
 8003dea:	2300      	movs	r3, #0
 8003dec:	617b      	str	r3, [r7, #20]
 8003dee:	e00a      	b.n	8003e06 <_read+0x28>
 8003df0:	f3af 8000 	nop.w
 8003df4:	4601      	mov	r1, r0
 8003df6:	68bb      	ldr	r3, [r7, #8]
 8003df8:	1c5a      	adds	r2, r3, #1
 8003dfa:	60ba      	str	r2, [r7, #8]
 8003dfc:	b2ca      	uxtb	r2, r1
 8003dfe:	701a      	strb	r2, [r3, #0]
 8003e00:	697b      	ldr	r3, [r7, #20]
 8003e02:	3301      	adds	r3, #1
 8003e04:	617b      	str	r3, [r7, #20]
 8003e06:	697a      	ldr	r2, [r7, #20]
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	429a      	cmp	r2, r3
 8003e0c:	dbf0      	blt.n	8003df0 <_read+0x12>
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	4618      	mov	r0, r3
 8003e12:	3718      	adds	r7, #24
 8003e14:	46bd      	mov	sp, r7
 8003e16:	bd80      	pop	{r7, pc}

08003e18 <_write>:
 8003e18:	b580      	push	{r7, lr}
 8003e1a:	b086      	sub	sp, #24
 8003e1c:	af00      	add	r7, sp, #0
 8003e1e:	60f8      	str	r0, [r7, #12]
 8003e20:	60b9      	str	r1, [r7, #8]
 8003e22:	607a      	str	r2, [r7, #4]
 8003e24:	2300      	movs	r3, #0
 8003e26:	617b      	str	r3, [r7, #20]
 8003e28:	e009      	b.n	8003e3e <_write+0x26>
 8003e2a:	68bb      	ldr	r3, [r7, #8]
 8003e2c:	1c5a      	adds	r2, r3, #1
 8003e2e:	60ba      	str	r2, [r7, #8]
 8003e30:	781b      	ldrb	r3, [r3, #0]
 8003e32:	4618      	mov	r0, r3
 8003e34:	f3af 8000 	nop.w
 8003e38:	697b      	ldr	r3, [r7, #20]
 8003e3a:	3301      	adds	r3, #1
 8003e3c:	617b      	str	r3, [r7, #20]
 8003e3e:	697a      	ldr	r2, [r7, #20]
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	429a      	cmp	r2, r3
 8003e44:	dbf1      	blt.n	8003e2a <_write+0x12>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	4618      	mov	r0, r3
 8003e4a:	3718      	adds	r7, #24
 8003e4c:	46bd      	mov	sp, r7
 8003e4e:	bd80      	pop	{r7, pc}

08003e50 <_close>:
 8003e50:	b480      	push	{r7}
 8003e52:	b083      	sub	sp, #12
 8003e54:	af00      	add	r7, sp, #0
 8003e56:	6078      	str	r0, [r7, #4]
 8003e58:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8003e5c:	4618      	mov	r0, r3
 8003e5e:	370c      	adds	r7, #12
 8003e60:	46bd      	mov	sp, r7
 8003e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e66:	4770      	bx	lr

08003e68 <_fstat>:
 8003e68:	b480      	push	{r7}
 8003e6a:	b083      	sub	sp, #12
 8003e6c:	af00      	add	r7, sp, #0
 8003e6e:	6078      	str	r0, [r7, #4]
 8003e70:	6039      	str	r1, [r7, #0]
 8003e72:	683b      	ldr	r3, [r7, #0]
 8003e74:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003e78:	605a      	str	r2, [r3, #4]
 8003e7a:	2300      	movs	r3, #0
 8003e7c:	4618      	mov	r0, r3
 8003e7e:	370c      	adds	r7, #12
 8003e80:	46bd      	mov	sp, r7
 8003e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e86:	4770      	bx	lr

08003e88 <_isatty>:
 8003e88:	b480      	push	{r7}
 8003e8a:	b083      	sub	sp, #12
 8003e8c:	af00      	add	r7, sp, #0
 8003e8e:	6078      	str	r0, [r7, #4]
 8003e90:	2301      	movs	r3, #1
 8003e92:	4618      	mov	r0, r3
 8003e94:	370c      	adds	r7, #12
 8003e96:	46bd      	mov	sp, r7
 8003e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e9c:	4770      	bx	lr

08003e9e <_lseek>:
 8003e9e:	b480      	push	{r7}
 8003ea0:	b085      	sub	sp, #20
 8003ea2:	af00      	add	r7, sp, #0
 8003ea4:	60f8      	str	r0, [r7, #12]
 8003ea6:	60b9      	str	r1, [r7, #8]
 8003ea8:	607a      	str	r2, [r7, #4]
 8003eaa:	2300      	movs	r3, #0
 8003eac:	4618      	mov	r0, r3
 8003eae:	3714      	adds	r7, #20
 8003eb0:	46bd      	mov	sp, r7
 8003eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eb6:	4770      	bx	lr

08003eb8 <_sbrk>:
 8003eb8:	b580      	push	{r7, lr}
 8003eba:	b086      	sub	sp, #24
 8003ebc:	af00      	add	r7, sp, #0
 8003ebe:	6078      	str	r0, [r7, #4]
 8003ec0:	4a14      	ldr	r2, [pc, #80]	@ (8003f14 <_sbrk+0x5c>)
 8003ec2:	4b15      	ldr	r3, [pc, #84]	@ (8003f18 <_sbrk+0x60>)
 8003ec4:	1ad3      	subs	r3, r2, r3
 8003ec6:	617b      	str	r3, [r7, #20]
 8003ec8:	697b      	ldr	r3, [r7, #20]
 8003eca:	613b      	str	r3, [r7, #16]
 8003ecc:	4b13      	ldr	r3, [pc, #76]	@ (8003f1c <_sbrk+0x64>)
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d102      	bne.n	8003eda <_sbrk+0x22>
 8003ed4:	4b11      	ldr	r3, [pc, #68]	@ (8003f1c <_sbrk+0x64>)
 8003ed6:	4a12      	ldr	r2, [pc, #72]	@ (8003f20 <_sbrk+0x68>)
 8003ed8:	601a      	str	r2, [r3, #0]
 8003eda:	4b10      	ldr	r3, [pc, #64]	@ (8003f1c <_sbrk+0x64>)
 8003edc:	681a      	ldr	r2, [r3, #0]
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	4413      	add	r3, r2
 8003ee2:	693a      	ldr	r2, [r7, #16]
 8003ee4:	429a      	cmp	r2, r3
 8003ee6:	d207      	bcs.n	8003ef8 <_sbrk+0x40>
 8003ee8:	f006 fcd0 	bl	800a88c <__errno>
 8003eec:	4603      	mov	r3, r0
 8003eee:	220c      	movs	r2, #12
 8003ef0:	601a      	str	r2, [r3, #0]
 8003ef2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8003ef6:	e009      	b.n	8003f0c <_sbrk+0x54>
 8003ef8:	4b08      	ldr	r3, [pc, #32]	@ (8003f1c <_sbrk+0x64>)
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	60fb      	str	r3, [r7, #12]
 8003efe:	4b07      	ldr	r3, [pc, #28]	@ (8003f1c <_sbrk+0x64>)
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4413      	add	r3, r2
 8003f06:	4a05      	ldr	r2, [pc, #20]	@ (8003f1c <_sbrk+0x64>)
 8003f08:	6013      	str	r3, [r2, #0]
 8003f0a:	68fb      	ldr	r3, [r7, #12]
 8003f0c:	4618      	mov	r0, r3
 8003f0e:	3718      	adds	r7, #24
 8003f10:	46bd      	mov	sp, r7
 8003f12:	bd80      	pop	{r7, pc}
 8003f14:	2000c000 	.word	0x2000c000
 8003f18:	00000400 	.word	0x00000400
 8003f1c:	20000c10 	.word	0x20000c10
 8003f20:	20000d68 	.word	0x20000d68

08003f24 <SystemInit>:
 8003f24:	b480      	push	{r7}
 8003f26:	af00      	add	r7, sp, #0
 8003f28:	4b06      	ldr	r3, [pc, #24]	@ (8003f44 <SystemInit+0x20>)
 8003f2a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003f2e:	4a05      	ldr	r2, [pc, #20]	@ (8003f44 <SystemInit+0x20>)
 8003f30:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003f34:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003f38:	bf00      	nop
 8003f3a:	46bd      	mov	sp, r7
 8003f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f40:	4770      	bx	lr
 8003f42:	bf00      	nop
 8003f44:	e000ed00 	.word	0xe000ed00

08003f48 <Reset_Handler>:
 8003f48:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8003f80 <LoopForever+0x2>
 8003f4c:	f7ff ffea 	bl	8003f24 <SystemInit>
 8003f50:	480c      	ldr	r0, [pc, #48]	@ (8003f84 <LoopForever+0x6>)
 8003f52:	490d      	ldr	r1, [pc, #52]	@ (8003f88 <LoopForever+0xa>)
 8003f54:	4a0d      	ldr	r2, [pc, #52]	@ (8003f8c <LoopForever+0xe>)
 8003f56:	2300      	movs	r3, #0
 8003f58:	e002      	b.n	8003f60 <LoopCopyDataInit>

08003f5a <CopyDataInit>:
 8003f5a:	58d4      	ldr	r4, [r2, r3]
 8003f5c:	50c4      	str	r4, [r0, r3]
 8003f5e:	3304      	adds	r3, #4

08003f60 <LoopCopyDataInit>:
 8003f60:	18c4      	adds	r4, r0, r3
 8003f62:	428c      	cmp	r4, r1
 8003f64:	d3f9      	bcc.n	8003f5a <CopyDataInit>
 8003f66:	4a0a      	ldr	r2, [pc, #40]	@ (8003f90 <LoopForever+0x12>)
 8003f68:	4c0a      	ldr	r4, [pc, #40]	@ (8003f94 <LoopForever+0x16>)
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	e001      	b.n	8003f72 <LoopFillZerobss>

08003f6e <FillZerobss>:
 8003f6e:	6013      	str	r3, [r2, #0]
 8003f70:	3204      	adds	r2, #4

08003f72 <LoopFillZerobss>:
 8003f72:	42a2      	cmp	r2, r4
 8003f74:	d3fb      	bcc.n	8003f6e <FillZerobss>
 8003f76:	f006 fc8f 	bl	800a898 <__libc_init_array>
 8003f7a:	f7fe fb29 	bl	80025d0 <main>

08003f7e <LoopForever>:
 8003f7e:	e7fe      	b.n	8003f7e <LoopForever>
 8003f80:	2000c000 	.word	0x2000c000
 8003f84:	20000000 	.word	0x20000000
 8003f88:	20000274 	.word	0x20000274
 8003f8c:	0800d774 	.word	0x0800d774
 8003f90:	20000274 	.word	0x20000274
 8003f94:	20000d64 	.word	0x20000d64

08003f98 <ADC1_IRQHandler>:
 8003f98:	e7fe      	b.n	8003f98 <ADC1_IRQHandler>

08003f9a <HAL_Init>:
 8003f9a:	b580      	push	{r7, lr}
 8003f9c:	b082      	sub	sp, #8
 8003f9e:	af00      	add	r7, sp, #0
 8003fa0:	2300      	movs	r3, #0
 8003fa2:	71fb      	strb	r3, [r7, #7]
 8003fa4:	2003      	movs	r0, #3
 8003fa6:	f001 fbfb 	bl	80057a0 <HAL_NVIC_SetPriorityGrouping>
 8003faa:	200f      	movs	r0, #15
 8003fac:	f000 f80e 	bl	8003fcc <HAL_InitTick>
 8003fb0:	4603      	mov	r3, r0
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d002      	beq.n	8003fbc <HAL_Init+0x22>
 8003fb6:	2301      	movs	r3, #1
 8003fb8:	71fb      	strb	r3, [r7, #7]
 8003fba:	e001      	b.n	8003fc0 <HAL_Init+0x26>
 8003fbc:	f7ff fcac 	bl	8003918 <HAL_MspInit>
 8003fc0:	79fb      	ldrb	r3, [r7, #7]
 8003fc2:	4618      	mov	r0, r3
 8003fc4:	3708      	adds	r7, #8
 8003fc6:	46bd      	mov	sp, r7
 8003fc8:	bd80      	pop	{r7, pc}
	...

08003fcc <HAL_InitTick>:
 8003fcc:	b580      	push	{r7, lr}
 8003fce:	b084      	sub	sp, #16
 8003fd0:	af00      	add	r7, sp, #0
 8003fd2:	6078      	str	r0, [r7, #4]
 8003fd4:	2300      	movs	r3, #0
 8003fd6:	73fb      	strb	r3, [r7, #15]
 8003fd8:	4b17      	ldr	r3, [pc, #92]	@ (8004038 <HAL_InitTick+0x6c>)
 8003fda:	781b      	ldrb	r3, [r3, #0]
 8003fdc:	2b00      	cmp	r3, #0
 8003fde:	d023      	beq.n	8004028 <HAL_InitTick+0x5c>
 8003fe0:	4b16      	ldr	r3, [pc, #88]	@ (800403c <HAL_InitTick+0x70>)
 8003fe2:	681a      	ldr	r2, [r3, #0]
 8003fe4:	4b14      	ldr	r3, [pc, #80]	@ (8004038 <HAL_InitTick+0x6c>)
 8003fe6:	781b      	ldrb	r3, [r3, #0]
 8003fe8:	4619      	mov	r1, r3
 8003fea:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8003fee:	fbb3 f3f1 	udiv	r3, r3, r1
 8003ff2:	fbb2 f3f3 	udiv	r3, r2, r3
 8003ff6:	4618      	mov	r0, r3
 8003ff8:	f001 fc07 	bl	800580a <HAL_SYSTICK_Config>
 8003ffc:	4603      	mov	r3, r0
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d10f      	bne.n	8004022 <HAL_InitTick+0x56>
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	2b0f      	cmp	r3, #15
 8004006:	d809      	bhi.n	800401c <HAL_InitTick+0x50>
 8004008:	2200      	movs	r2, #0
 800400a:	6879      	ldr	r1, [r7, #4]
 800400c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004010:	f001 fbd1 	bl	80057b6 <HAL_NVIC_SetPriority>
 8004014:	4a0a      	ldr	r2, [pc, #40]	@ (8004040 <HAL_InitTick+0x74>)
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	6013      	str	r3, [r2, #0]
 800401a:	e007      	b.n	800402c <HAL_InitTick+0x60>
 800401c:	2301      	movs	r3, #1
 800401e:	73fb      	strb	r3, [r7, #15]
 8004020:	e004      	b.n	800402c <HAL_InitTick+0x60>
 8004022:	2301      	movs	r3, #1
 8004024:	73fb      	strb	r3, [r7, #15]
 8004026:	e001      	b.n	800402c <HAL_InitTick+0x60>
 8004028:	2301      	movs	r3, #1
 800402a:	73fb      	strb	r3, [r7, #15]
 800402c:	7bfb      	ldrb	r3, [r7, #15]
 800402e:	4618      	mov	r0, r3
 8004030:	3710      	adds	r7, #16
 8004032:	46bd      	mov	sp, r7
 8004034:	bd80      	pop	{r7, pc}
 8004036:	bf00      	nop
 8004038:	200000a8 	.word	0x200000a8
 800403c:	200000a0 	.word	0x200000a0
 8004040:	200000a4 	.word	0x200000a4

08004044 <HAL_IncTick>:
 8004044:	b480      	push	{r7}
 8004046:	af00      	add	r7, sp, #0
 8004048:	4b06      	ldr	r3, [pc, #24]	@ (8004064 <HAL_IncTick+0x20>)
 800404a:	781b      	ldrb	r3, [r3, #0]
 800404c:	461a      	mov	r2, r3
 800404e:	4b06      	ldr	r3, [pc, #24]	@ (8004068 <HAL_IncTick+0x24>)
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	4413      	add	r3, r2
 8004054:	4a04      	ldr	r2, [pc, #16]	@ (8004068 <HAL_IncTick+0x24>)
 8004056:	6013      	str	r3, [r2, #0]
 8004058:	bf00      	nop
 800405a:	46bd      	mov	sp, r7
 800405c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004060:	4770      	bx	lr
 8004062:	bf00      	nop
 8004064:	200000a8 	.word	0x200000a8
 8004068:	20000c14 	.word	0x20000c14

0800406c <HAL_GetTick>:
 800406c:	b480      	push	{r7}
 800406e:	af00      	add	r7, sp, #0
 8004070:	4b03      	ldr	r3, [pc, #12]	@ (8004080 <HAL_GetTick+0x14>)
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	4618      	mov	r0, r3
 8004076:	46bd      	mov	sp, r7
 8004078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800407c:	4770      	bx	lr
 800407e:	bf00      	nop
 8004080:	20000c14 	.word	0x20000c14

08004084 <HAL_Delay>:
 8004084:	b580      	push	{r7, lr}
 8004086:	b084      	sub	sp, #16
 8004088:	af00      	add	r7, sp, #0
 800408a:	6078      	str	r0, [r7, #4]
 800408c:	f7ff ffee 	bl	800406c <HAL_GetTick>
 8004090:	60b8      	str	r0, [r7, #8]
 8004092:	687b      	ldr	r3, [r7, #4]
 8004094:	60fb      	str	r3, [r7, #12]
 8004096:	68fb      	ldr	r3, [r7, #12]
 8004098:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800409c:	d005      	beq.n	80040aa <HAL_Delay+0x26>
 800409e:	4b0a      	ldr	r3, [pc, #40]	@ (80040c8 <HAL_Delay+0x44>)
 80040a0:	781b      	ldrb	r3, [r3, #0]
 80040a2:	461a      	mov	r2, r3
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	4413      	add	r3, r2
 80040a8:	60fb      	str	r3, [r7, #12]
 80040aa:	bf00      	nop
 80040ac:	f7ff ffde 	bl	800406c <HAL_GetTick>
 80040b0:	4602      	mov	r2, r0
 80040b2:	68bb      	ldr	r3, [r7, #8]
 80040b4:	1ad3      	subs	r3, r2, r3
 80040b6:	68fa      	ldr	r2, [r7, #12]
 80040b8:	429a      	cmp	r2, r3
 80040ba:	d8f7      	bhi.n	80040ac <HAL_Delay+0x28>
 80040bc:	bf00      	nop
 80040be:	bf00      	nop
 80040c0:	3710      	adds	r7, #16
 80040c2:	46bd      	mov	sp, r7
 80040c4:	bd80      	pop	{r7, pc}
 80040c6:	bf00      	nop
 80040c8:	200000a8 	.word	0x200000a8

080040cc <LL_ADC_SetCommonClock>:
 80040cc:	b480      	push	{r7}
 80040ce:	b083      	sub	sp, #12
 80040d0:	af00      	add	r7, sp, #0
 80040d2:	6078      	str	r0, [r7, #4]
 80040d4:	6039      	str	r1, [r7, #0]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	689b      	ldr	r3, [r3, #8]
 80040da:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 80040de:	683b      	ldr	r3, [r7, #0]
 80040e0:	431a      	orrs	r2, r3
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	609a      	str	r2, [r3, #8]
 80040e6:	bf00      	nop
 80040e8:	370c      	adds	r7, #12
 80040ea:	46bd      	mov	sp, r7
 80040ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f0:	4770      	bx	lr

080040f2 <LL_ADC_SetCommonPathInternalCh>:
 80040f2:	b480      	push	{r7}
 80040f4:	b083      	sub	sp, #12
 80040f6:	af00      	add	r7, sp, #0
 80040f8:	6078      	str	r0, [r7, #4]
 80040fa:	6039      	str	r1, [r7, #0]
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	689b      	ldr	r3, [r3, #8]
 8004100:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8004104:	683b      	ldr	r3, [r7, #0]
 8004106:	431a      	orrs	r2, r3
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	609a      	str	r2, [r3, #8]
 800410c:	bf00      	nop
 800410e:	370c      	adds	r7, #12
 8004110:	46bd      	mov	sp, r7
 8004112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004116:	4770      	bx	lr

08004118 <LL_ADC_GetCommonPathInternalCh>:
 8004118:	b480      	push	{r7}
 800411a:	b083      	sub	sp, #12
 800411c:	af00      	add	r7, sp, #0
 800411e:	6078      	str	r0, [r7, #4]
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	689b      	ldr	r3, [r3, #8]
 8004124:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8004128:	4618      	mov	r0, r3
 800412a:	370c      	adds	r7, #12
 800412c:	46bd      	mov	sp, r7
 800412e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004132:	4770      	bx	lr

08004134 <LL_ADC_SetOffset>:
 8004134:	b480      	push	{r7}
 8004136:	b087      	sub	sp, #28
 8004138:	af00      	add	r7, sp, #0
 800413a:	60f8      	str	r0, [r7, #12]
 800413c:	60b9      	str	r1, [r7, #8]
 800413e:	607a      	str	r2, [r7, #4]
 8004140:	603b      	str	r3, [r7, #0]
 8004142:	68fb      	ldr	r3, [r7, #12]
 8004144:	3360      	adds	r3, #96	@ 0x60
 8004146:	461a      	mov	r2, r3
 8004148:	68bb      	ldr	r3, [r7, #8]
 800414a:	009b      	lsls	r3, r3, #2
 800414c:	4413      	add	r3, r2
 800414e:	617b      	str	r3, [r7, #20]
 8004150:	697b      	ldr	r3, [r7, #20]
 8004152:	681a      	ldr	r2, [r3, #0]
 8004154:	4b08      	ldr	r3, [pc, #32]	@ (8004178 <LL_ADC_SetOffset+0x44>)
 8004156:	4013      	ands	r3, r2
 8004158:	687a      	ldr	r2, [r7, #4]
 800415a:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 800415e:	683a      	ldr	r2, [r7, #0]
 8004160:	430a      	orrs	r2, r1
 8004162:	4313      	orrs	r3, r2
 8004164:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8004168:	697b      	ldr	r3, [r7, #20]
 800416a:	601a      	str	r2, [r3, #0]
 800416c:	bf00      	nop
 800416e:	371c      	adds	r7, #28
 8004170:	46bd      	mov	sp, r7
 8004172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004176:	4770      	bx	lr
 8004178:	03fff000 	.word	0x03fff000

0800417c <LL_ADC_GetOffsetChannel>:
 800417c:	b480      	push	{r7}
 800417e:	b085      	sub	sp, #20
 8004180:	af00      	add	r7, sp, #0
 8004182:	6078      	str	r0, [r7, #4]
 8004184:	6039      	str	r1, [r7, #0]
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	3360      	adds	r3, #96	@ 0x60
 800418a:	461a      	mov	r2, r3
 800418c:	683b      	ldr	r3, [r7, #0]
 800418e:	009b      	lsls	r3, r3, #2
 8004190:	4413      	add	r3, r2
 8004192:	60fb      	str	r3, [r7, #12]
 8004194:	68fb      	ldr	r3, [r7, #12]
 8004196:	681b      	ldr	r3, [r3, #0]
 8004198:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 800419c:	4618      	mov	r0, r3
 800419e:	3714      	adds	r7, #20
 80041a0:	46bd      	mov	sp, r7
 80041a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a6:	4770      	bx	lr

080041a8 <LL_ADC_SetOffsetState>:
 80041a8:	b480      	push	{r7}
 80041aa:	b087      	sub	sp, #28
 80041ac:	af00      	add	r7, sp, #0
 80041ae:	60f8      	str	r0, [r7, #12]
 80041b0:	60b9      	str	r1, [r7, #8]
 80041b2:	607a      	str	r2, [r7, #4]
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	3360      	adds	r3, #96	@ 0x60
 80041b8:	461a      	mov	r2, r3
 80041ba:	68bb      	ldr	r3, [r7, #8]
 80041bc:	009b      	lsls	r3, r3, #2
 80041be:	4413      	add	r3, r2
 80041c0:	617b      	str	r3, [r7, #20]
 80041c2:	697b      	ldr	r3, [r7, #20]
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	431a      	orrs	r2, r3
 80041ce:	697b      	ldr	r3, [r7, #20]
 80041d0:	601a      	str	r2, [r3, #0]
 80041d2:	bf00      	nop
 80041d4:	371c      	adds	r7, #28
 80041d6:	46bd      	mov	sp, r7
 80041d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041dc:	4770      	bx	lr

080041de <LL_ADC_REG_IsTriggerSourceSWStart>:
 80041de:	b480      	push	{r7}
 80041e0:	b083      	sub	sp, #12
 80041e2:	af00      	add	r7, sp, #0
 80041e4:	6078      	str	r0, [r7, #4]
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	68db      	ldr	r3, [r3, #12]
 80041ea:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d101      	bne.n	80041f6 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 80041f2:	2301      	movs	r3, #1
 80041f4:	e000      	b.n	80041f8 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 80041f6:	2300      	movs	r3, #0
 80041f8:	4618      	mov	r0, r3
 80041fa:	370c      	adds	r7, #12
 80041fc:	46bd      	mov	sp, r7
 80041fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004202:	4770      	bx	lr

08004204 <LL_ADC_REG_SetSequencerRanks>:
 8004204:	b480      	push	{r7}
 8004206:	b087      	sub	sp, #28
 8004208:	af00      	add	r7, sp, #0
 800420a:	60f8      	str	r0, [r7, #12]
 800420c:	60b9      	str	r1, [r7, #8]
 800420e:	607a      	str	r2, [r7, #4]
 8004210:	68fb      	ldr	r3, [r7, #12]
 8004212:	3330      	adds	r3, #48	@ 0x30
 8004214:	461a      	mov	r2, r3
 8004216:	68bb      	ldr	r3, [r7, #8]
 8004218:	0a1b      	lsrs	r3, r3, #8
 800421a:	009b      	lsls	r3, r3, #2
 800421c:	f003 030c 	and.w	r3, r3, #12
 8004220:	4413      	add	r3, r2
 8004222:	617b      	str	r3, [r7, #20]
 8004224:	697b      	ldr	r3, [r7, #20]
 8004226:	681a      	ldr	r2, [r3, #0]
 8004228:	68bb      	ldr	r3, [r7, #8]
 800422a:	f003 031f 	and.w	r3, r3, #31
 800422e:	211f      	movs	r1, #31
 8004230:	fa01 f303 	lsl.w	r3, r1, r3
 8004234:	43db      	mvns	r3, r3
 8004236:	401a      	ands	r2, r3
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	0e9b      	lsrs	r3, r3, #26
 800423c:	f003 011f 	and.w	r1, r3, #31
 8004240:	68bb      	ldr	r3, [r7, #8]
 8004242:	f003 031f 	and.w	r3, r3, #31
 8004246:	fa01 f303 	lsl.w	r3, r1, r3
 800424a:	431a      	orrs	r2, r3
 800424c:	697b      	ldr	r3, [r7, #20]
 800424e:	601a      	str	r2, [r3, #0]
 8004250:	bf00      	nop
 8004252:	371c      	adds	r7, #28
 8004254:	46bd      	mov	sp, r7
 8004256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800425a:	4770      	bx	lr

0800425c <LL_ADC_SetChannelSamplingTime>:
 800425c:	b480      	push	{r7}
 800425e:	b087      	sub	sp, #28
 8004260:	af00      	add	r7, sp, #0
 8004262:	60f8      	str	r0, [r7, #12]
 8004264:	60b9      	str	r1, [r7, #8]
 8004266:	607a      	str	r2, [r7, #4]
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	3314      	adds	r3, #20
 800426c:	461a      	mov	r2, r3
 800426e:	68bb      	ldr	r3, [r7, #8]
 8004270:	0e5b      	lsrs	r3, r3, #25
 8004272:	009b      	lsls	r3, r3, #2
 8004274:	f003 0304 	and.w	r3, r3, #4
 8004278:	4413      	add	r3, r2
 800427a:	617b      	str	r3, [r7, #20]
 800427c:	697b      	ldr	r3, [r7, #20]
 800427e:	681a      	ldr	r2, [r3, #0]
 8004280:	68bb      	ldr	r3, [r7, #8]
 8004282:	0d1b      	lsrs	r3, r3, #20
 8004284:	f003 031f 	and.w	r3, r3, #31
 8004288:	2107      	movs	r1, #7
 800428a:	fa01 f303 	lsl.w	r3, r1, r3
 800428e:	43db      	mvns	r3, r3
 8004290:	401a      	ands	r2, r3
 8004292:	68bb      	ldr	r3, [r7, #8]
 8004294:	0d1b      	lsrs	r3, r3, #20
 8004296:	f003 031f 	and.w	r3, r3, #31
 800429a:	6879      	ldr	r1, [r7, #4]
 800429c:	fa01 f303 	lsl.w	r3, r1, r3
 80042a0:	431a      	orrs	r2, r3
 80042a2:	697b      	ldr	r3, [r7, #20]
 80042a4:	601a      	str	r2, [r3, #0]
 80042a6:	bf00      	nop
 80042a8:	371c      	adds	r7, #28
 80042aa:	46bd      	mov	sp, r7
 80042ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042b0:	4770      	bx	lr
	...

080042b4 <LL_ADC_SetChannelSingleDiff>:
 80042b4:	b480      	push	{r7}
 80042b6:	b085      	sub	sp, #20
 80042b8:	af00      	add	r7, sp, #0
 80042ba:	60f8      	str	r0, [r7, #12]
 80042bc:	60b9      	str	r1, [r7, #8]
 80042be:	607a      	str	r2, [r7, #4]
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 80042c6:	68bb      	ldr	r3, [r7, #8]
 80042c8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80042cc:	43db      	mvns	r3, r3
 80042ce:	401a      	ands	r2, r3
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	f003 0318 	and.w	r3, r3, #24
 80042d6:	4908      	ldr	r1, [pc, #32]	@ (80042f8 <LL_ADC_SetChannelSingleDiff+0x44>)
 80042d8:	40d9      	lsrs	r1, r3
 80042da:	68bb      	ldr	r3, [r7, #8]
 80042dc:	400b      	ands	r3, r1
 80042de:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80042e2:	431a      	orrs	r2, r3
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 80042ea:	bf00      	nop
 80042ec:	3714      	adds	r7, #20
 80042ee:	46bd      	mov	sp, r7
 80042f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f4:	4770      	bx	lr
 80042f6:	bf00      	nop
 80042f8:	0007ffff 	.word	0x0007ffff

080042fc <LL_ADC_DisableDeepPowerDown>:
 80042fc:	b480      	push	{r7}
 80042fe:	b083      	sub	sp, #12
 8004300:	af00      	add	r7, sp, #0
 8004302:	6078      	str	r0, [r7, #4]
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	689b      	ldr	r3, [r3, #8]
 8004308:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 800430c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004310:	687a      	ldr	r2, [r7, #4]
 8004312:	6093      	str	r3, [r2, #8]
 8004314:	bf00      	nop
 8004316:	370c      	adds	r7, #12
 8004318:	46bd      	mov	sp, r7
 800431a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800431e:	4770      	bx	lr

08004320 <LL_ADC_IsDeepPowerDownEnabled>:
 8004320:	b480      	push	{r7}
 8004322:	b083      	sub	sp, #12
 8004324:	af00      	add	r7, sp, #0
 8004326:	6078      	str	r0, [r7, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	689b      	ldr	r3, [r3, #8]
 800432c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8004330:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004334:	d101      	bne.n	800433a <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8004336:	2301      	movs	r3, #1
 8004338:	e000      	b.n	800433c <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 800433a:	2300      	movs	r3, #0
 800433c:	4618      	mov	r0, r3
 800433e:	370c      	adds	r7, #12
 8004340:	46bd      	mov	sp, r7
 8004342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004346:	4770      	bx	lr

08004348 <LL_ADC_EnableInternalRegulator>:
 8004348:	b480      	push	{r7}
 800434a:	b083      	sub	sp, #12
 800434c:	af00      	add	r7, sp, #0
 800434e:	6078      	str	r0, [r7, #4]
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	689b      	ldr	r3, [r3, #8]
 8004354:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8004358:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 800435c:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	609a      	str	r2, [r3, #8]
 8004364:	bf00      	nop
 8004366:	370c      	adds	r7, #12
 8004368:	46bd      	mov	sp, r7
 800436a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800436e:	4770      	bx	lr

08004370 <LL_ADC_IsInternalRegulatorEnabled>:
 8004370:	b480      	push	{r7}
 8004372:	b083      	sub	sp, #12
 8004374:	af00      	add	r7, sp, #0
 8004376:	6078      	str	r0, [r7, #4]
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	689b      	ldr	r3, [r3, #8]
 800437c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004380:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004384:	d101      	bne.n	800438a <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8004386:	2301      	movs	r3, #1
 8004388:	e000      	b.n	800438c <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 800438a:	2300      	movs	r3, #0
 800438c:	4618      	mov	r0, r3
 800438e:	370c      	adds	r7, #12
 8004390:	46bd      	mov	sp, r7
 8004392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004396:	4770      	bx	lr

08004398 <LL_ADC_Enable>:
 8004398:	b480      	push	{r7}
 800439a:	b083      	sub	sp, #12
 800439c:	af00      	add	r7, sp, #0
 800439e:	6078      	str	r0, [r7, #4]
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	689b      	ldr	r3, [r3, #8]
 80043a4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80043a8:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80043ac:	f043 0201 	orr.w	r2, r3, #1
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	609a      	str	r2, [r3, #8]
 80043b4:	bf00      	nop
 80043b6:	370c      	adds	r7, #12
 80043b8:	46bd      	mov	sp, r7
 80043ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043be:	4770      	bx	lr

080043c0 <LL_ADC_Disable>:
 80043c0:	b480      	push	{r7}
 80043c2:	b083      	sub	sp, #12
 80043c4:	af00      	add	r7, sp, #0
 80043c6:	6078      	str	r0, [r7, #4]
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	689b      	ldr	r3, [r3, #8]
 80043cc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80043d0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80043d4:	f043 0202 	orr.w	r2, r3, #2
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	609a      	str	r2, [r3, #8]
 80043dc:	bf00      	nop
 80043de:	370c      	adds	r7, #12
 80043e0:	46bd      	mov	sp, r7
 80043e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043e6:	4770      	bx	lr

080043e8 <LL_ADC_IsEnabled>:
 80043e8:	b480      	push	{r7}
 80043ea:	b083      	sub	sp, #12
 80043ec:	af00      	add	r7, sp, #0
 80043ee:	6078      	str	r0, [r7, #4]
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	689b      	ldr	r3, [r3, #8]
 80043f4:	f003 0301 	and.w	r3, r3, #1
 80043f8:	2b01      	cmp	r3, #1
 80043fa:	d101      	bne.n	8004400 <LL_ADC_IsEnabled+0x18>
 80043fc:	2301      	movs	r3, #1
 80043fe:	e000      	b.n	8004402 <LL_ADC_IsEnabled+0x1a>
 8004400:	2300      	movs	r3, #0
 8004402:	4618      	mov	r0, r3
 8004404:	370c      	adds	r7, #12
 8004406:	46bd      	mov	sp, r7
 8004408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440c:	4770      	bx	lr

0800440e <LL_ADC_IsDisableOngoing>:
 800440e:	b480      	push	{r7}
 8004410:	b083      	sub	sp, #12
 8004412:	af00      	add	r7, sp, #0
 8004414:	6078      	str	r0, [r7, #4]
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	689b      	ldr	r3, [r3, #8]
 800441a:	f003 0302 	and.w	r3, r3, #2
 800441e:	2b02      	cmp	r3, #2
 8004420:	d101      	bne.n	8004426 <LL_ADC_IsDisableOngoing+0x18>
 8004422:	2301      	movs	r3, #1
 8004424:	e000      	b.n	8004428 <LL_ADC_IsDisableOngoing+0x1a>
 8004426:	2300      	movs	r3, #0
 8004428:	4618      	mov	r0, r3
 800442a:	370c      	adds	r7, #12
 800442c:	46bd      	mov	sp, r7
 800442e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004432:	4770      	bx	lr

08004434 <LL_ADC_REG_StartConversion>:
 8004434:	b480      	push	{r7}
 8004436:	b083      	sub	sp, #12
 8004438:	af00      	add	r7, sp, #0
 800443a:	6078      	str	r0, [r7, #4]
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	689b      	ldr	r3, [r3, #8]
 8004440:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004444:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004448:	f043 0204 	orr.w	r2, r3, #4
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	609a      	str	r2, [r3, #8]
 8004450:	bf00      	nop
 8004452:	370c      	adds	r7, #12
 8004454:	46bd      	mov	sp, r7
 8004456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800445a:	4770      	bx	lr

0800445c <LL_ADC_REG_StopConversion>:
 800445c:	b480      	push	{r7}
 800445e:	b083      	sub	sp, #12
 8004460:	af00      	add	r7, sp, #0
 8004462:	6078      	str	r0, [r7, #4]
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	689b      	ldr	r3, [r3, #8]
 8004468:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800446c:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8004470:	f043 0210 	orr.w	r2, r3, #16
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	609a      	str	r2, [r3, #8]
 8004478:	bf00      	nop
 800447a:	370c      	adds	r7, #12
 800447c:	46bd      	mov	sp, r7
 800447e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004482:	4770      	bx	lr

08004484 <LL_ADC_REG_IsConversionOngoing>:
 8004484:	b480      	push	{r7}
 8004486:	b083      	sub	sp, #12
 8004488:	af00      	add	r7, sp, #0
 800448a:	6078      	str	r0, [r7, #4]
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	689b      	ldr	r3, [r3, #8]
 8004490:	f003 0304 	and.w	r3, r3, #4
 8004494:	2b04      	cmp	r3, #4
 8004496:	d101      	bne.n	800449c <LL_ADC_REG_IsConversionOngoing+0x18>
 8004498:	2301      	movs	r3, #1
 800449a:	e000      	b.n	800449e <LL_ADC_REG_IsConversionOngoing+0x1a>
 800449c:	2300      	movs	r3, #0
 800449e:	4618      	mov	r0, r3
 80044a0:	370c      	adds	r7, #12
 80044a2:	46bd      	mov	sp, r7
 80044a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a8:	4770      	bx	lr

080044aa <LL_ADC_INJ_StopConversion>:
 80044aa:	b480      	push	{r7}
 80044ac:	b083      	sub	sp, #12
 80044ae:	af00      	add	r7, sp, #0
 80044b0:	6078      	str	r0, [r7, #4]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	689b      	ldr	r3, [r3, #8]
 80044b6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80044ba:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80044be:	f043 0220 	orr.w	r2, r3, #32
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	609a      	str	r2, [r3, #8]
 80044c6:	bf00      	nop
 80044c8:	370c      	adds	r7, #12
 80044ca:	46bd      	mov	sp, r7
 80044cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044d0:	4770      	bx	lr

080044d2 <LL_ADC_INJ_IsConversionOngoing>:
 80044d2:	b480      	push	{r7}
 80044d4:	b083      	sub	sp, #12
 80044d6:	af00      	add	r7, sp, #0
 80044d8:	6078      	str	r0, [r7, #4]
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	689b      	ldr	r3, [r3, #8]
 80044de:	f003 0308 	and.w	r3, r3, #8
 80044e2:	2b08      	cmp	r3, #8
 80044e4:	d101      	bne.n	80044ea <LL_ADC_INJ_IsConversionOngoing+0x18>
 80044e6:	2301      	movs	r3, #1
 80044e8:	e000      	b.n	80044ec <LL_ADC_INJ_IsConversionOngoing+0x1a>
 80044ea:	2300      	movs	r3, #0
 80044ec:	4618      	mov	r0, r3
 80044ee:	370c      	adds	r7, #12
 80044f0:	46bd      	mov	sp, r7
 80044f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044f6:	4770      	bx	lr

080044f8 <HAL_ADC_Init>:
 80044f8:	b580      	push	{r7, lr}
 80044fa:	b088      	sub	sp, #32
 80044fc:	af00      	add	r7, sp, #0
 80044fe:	6078      	str	r0, [r7, #4]
 8004500:	2300      	movs	r3, #0
 8004502:	77fb      	strb	r3, [r7, #31]
 8004504:	2300      	movs	r3, #0
 8004506:	60fb      	str	r3, [r7, #12]
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	2b00      	cmp	r3, #0
 800450c:	d101      	bne.n	8004512 <HAL_ADC_Init+0x1a>
 800450e:	2301      	movs	r3, #1
 8004510:	e126      	b.n	8004760 <HAL_ADC_Init+0x268>
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	691b      	ldr	r3, [r3, #16]
 8004516:	2b00      	cmp	r3, #0
 8004518:	687b      	ldr	r3, [r7, #4]
 800451a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800451c:	2b00      	cmp	r3, #0
 800451e:	d109      	bne.n	8004534 <HAL_ADC_Init+0x3c>
 8004520:	6878      	ldr	r0, [r7, #4]
 8004522:	f7ff fa1d 	bl	8003960 <HAL_ADC_MspInit>
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	2200      	movs	r2, #0
 800452a:	659a      	str	r2, [r3, #88]	@ 0x58
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	2200      	movs	r2, #0
 8004530:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	4618      	mov	r0, r3
 800453a:	f7ff fef1 	bl	8004320 <LL_ADC_IsDeepPowerDownEnabled>
 800453e:	4603      	mov	r3, r0
 8004540:	2b00      	cmp	r3, #0
 8004542:	d004      	beq.n	800454e <HAL_ADC_Init+0x56>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4618      	mov	r0, r3
 800454a:	f7ff fed7 	bl	80042fc <LL_ADC_DisableDeepPowerDown>
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	4618      	mov	r0, r3
 8004554:	f7ff ff0c 	bl	8004370 <LL_ADC_IsInternalRegulatorEnabled>
 8004558:	4603      	mov	r3, r0
 800455a:	2b00      	cmp	r3, #0
 800455c:	d115      	bne.n	800458a <HAL_ADC_Init+0x92>
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	4618      	mov	r0, r3
 8004564:	f7ff fef0 	bl	8004348 <LL_ADC_EnableInternalRegulator>
 8004568:	4b7f      	ldr	r3, [pc, #508]	@ (8004768 <HAL_ADC_Init+0x270>)
 800456a:	681b      	ldr	r3, [r3, #0]
 800456c:	099b      	lsrs	r3, r3, #6
 800456e:	4a7f      	ldr	r2, [pc, #508]	@ (800476c <HAL_ADC_Init+0x274>)
 8004570:	fba2 2303 	umull	r2, r3, r2, r3
 8004574:	099b      	lsrs	r3, r3, #6
 8004576:	3301      	adds	r3, #1
 8004578:	005b      	lsls	r3, r3, #1
 800457a:	60fb      	str	r3, [r7, #12]
 800457c:	e002      	b.n	8004584 <HAL_ADC_Init+0x8c>
 800457e:	68fb      	ldr	r3, [r7, #12]
 8004580:	3b01      	subs	r3, #1
 8004582:	60fb      	str	r3, [r7, #12]
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	2b00      	cmp	r3, #0
 8004588:	d1f9      	bne.n	800457e <HAL_ADC_Init+0x86>
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	4618      	mov	r0, r3
 8004590:	f7ff feee 	bl	8004370 <LL_ADC_IsInternalRegulatorEnabled>
 8004594:	4603      	mov	r3, r0
 8004596:	2b00      	cmp	r3, #0
 8004598:	d10d      	bne.n	80045b6 <HAL_ADC_Init+0xbe>
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800459e:	f043 0210 	orr.w	r2, r3, #16
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	655a      	str	r2, [r3, #84]	@ 0x54
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80045aa:	f043 0201 	orr.w	r2, r3, #1
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	659a      	str	r2, [r3, #88]	@ 0x58
 80045b2:	2301      	movs	r3, #1
 80045b4:	77fb      	strb	r3, [r7, #31]
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	4618      	mov	r0, r3
 80045bc:	f7ff ff62 	bl	8004484 <LL_ADC_REG_IsConversionOngoing>
 80045c0:	6178      	str	r0, [r7, #20]
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80045c6:	f003 0310 	and.w	r3, r3, #16
 80045ca:	2b00      	cmp	r3, #0
 80045cc:	f040 80bf 	bne.w	800474e <HAL_ADC_Init+0x256>
 80045d0:	697b      	ldr	r3, [r7, #20]
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	f040 80bb 	bne.w	800474e <HAL_ADC_Init+0x256>
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80045dc:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 80045e0:	f043 0202 	orr.w	r2, r3, #2
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	4618      	mov	r0, r3
 80045ee:	f7ff fefb 	bl	80043e8 <LL_ADC_IsEnabled>
 80045f2:	4603      	mov	r3, r0
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d10b      	bne.n	8004610 <HAL_ADC_Init+0x118>
 80045f8:	485d      	ldr	r0, [pc, #372]	@ (8004770 <HAL_ADC_Init+0x278>)
 80045fa:	f7ff fef5 	bl	80043e8 <LL_ADC_IsEnabled>
 80045fe:	4603      	mov	r3, r0
 8004600:	2b00      	cmp	r3, #0
 8004602:	d105      	bne.n	8004610 <HAL_ADC_Init+0x118>
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	685b      	ldr	r3, [r3, #4]
 8004608:	4619      	mov	r1, r3
 800460a:	485a      	ldr	r0, [pc, #360]	@ (8004774 <HAL_ADC_Init+0x27c>)
 800460c:	f7ff fd5e 	bl	80040cc <LL_ADC_SetCommonClock>
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	7e5b      	ldrb	r3, [r3, #25]
 8004614:	035a      	lsls	r2, r3, #13
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800461a:	431a      	orrs	r2, r3
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	68db      	ldr	r3, [r3, #12]
 8004620:	431a      	orrs	r2, r3
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	689b      	ldr	r3, [r3, #8]
 8004626:	431a      	orrs	r2, r3
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800462e:	041b      	lsls	r3, r3, #16
 8004630:	4313      	orrs	r3, r2
 8004632:	61bb      	str	r3, [r7, #24]
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	f893 3020 	ldrb.w	r3, [r3, #32]
 800463a:	2b01      	cmp	r3, #1
 800463c:	d106      	bne.n	800464c <HAL_ADC_Init+0x154>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004642:	3b01      	subs	r3, #1
 8004644:	045b      	lsls	r3, r3, #17
 8004646:	69ba      	ldr	r2, [r7, #24]
 8004648:	4313      	orrs	r3, r2
 800464a:	61bb      	str	r3, [r7, #24]
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004650:	2b00      	cmp	r3, #0
 8004652:	d009      	beq.n	8004668 <HAL_ADC_Init+0x170>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004658:	f403 7270 	and.w	r2, r3, #960	@ 0x3c0
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004660:	4313      	orrs	r3, r2
 8004662:	69ba      	ldr	r2, [r7, #24]
 8004664:	4313      	orrs	r3, r2
 8004666:	61bb      	str	r3, [r7, #24]
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	68da      	ldr	r2, [r3, #12]
 800466e:	4b42      	ldr	r3, [pc, #264]	@ (8004778 <HAL_ADC_Init+0x280>)
 8004670:	4013      	ands	r3, r2
 8004672:	687a      	ldr	r2, [r7, #4]
 8004674:	6812      	ldr	r2, [r2, #0]
 8004676:	69b9      	ldr	r1, [r7, #24]
 8004678:	430b      	orrs	r3, r1
 800467a:	60d3      	str	r3, [r2, #12]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	4618      	mov	r0, r3
 8004682:	f7ff ff26 	bl	80044d2 <LL_ADC_INJ_IsConversionOngoing>
 8004686:	6138      	str	r0, [r7, #16]
 8004688:	697b      	ldr	r3, [r7, #20]
 800468a:	2b00      	cmp	r3, #0
 800468c:	d13d      	bne.n	800470a <HAL_ADC_Init+0x212>
 800468e:	693b      	ldr	r3, [r7, #16]
 8004690:	2b00      	cmp	r3, #0
 8004692:	d13a      	bne.n	800470a <HAL_ADC_Init+0x212>
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	7e1b      	ldrb	r3, [r3, #24]
 8004698:	039a      	lsls	r2, r3, #14
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80046a0:	005b      	lsls	r3, r3, #1
 80046a2:	4313      	orrs	r3, r2
 80046a4:	61bb      	str	r3, [r7, #24]
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	68db      	ldr	r3, [r3, #12]
 80046ac:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80046b0:	f023 0302 	bic.w	r3, r3, #2
 80046b4:	687a      	ldr	r2, [r7, #4]
 80046b6:	6812      	ldr	r2, [r2, #0]
 80046b8:	69b9      	ldr	r1, [r7, #24]
 80046ba:	430b      	orrs	r3, r1
 80046bc:	60d3      	str	r3, [r2, #12]
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 80046c4:	2b01      	cmp	r3, #1
 80046c6:	d118      	bne.n	80046fa <HAL_ADC_Init+0x202>
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	691b      	ldr	r3, [r3, #16]
 80046ce:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80046d2:	f023 0304 	bic.w	r3, r3, #4
 80046d6:	687a      	ldr	r2, [r7, #4]
 80046d8:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 80046da:	687a      	ldr	r2, [r7, #4]
 80046dc:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 80046de:	4311      	orrs	r1, r2
 80046e0:	687a      	ldr	r2, [r7, #4]
 80046e2:	6c52      	ldr	r2, [r2, #68]	@ 0x44
 80046e4:	4311      	orrs	r1, r2
 80046e6:	687a      	ldr	r2, [r7, #4]
 80046e8:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 80046ea:	430a      	orrs	r2, r1
 80046ec:	431a      	orrs	r2, r3
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	f042 0201 	orr.w	r2, r2, #1
 80046f6:	611a      	str	r2, [r3, #16]
 80046f8:	e007      	b.n	800470a <HAL_ADC_Init+0x212>
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	691a      	ldr	r2, [r3, #16]
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	f022 0201 	bic.w	r2, r2, #1
 8004708:	611a      	str	r2, [r3, #16]
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	691b      	ldr	r3, [r3, #16]
 800470e:	2b01      	cmp	r3, #1
 8004710:	d10c      	bne.n	800472c <HAL_ADC_Init+0x234>
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004718:	f023 010f 	bic.w	r1, r3, #15
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	69db      	ldr	r3, [r3, #28]
 8004720:	1e5a      	subs	r2, r3, #1
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	430a      	orrs	r2, r1
 8004728:	631a      	str	r2, [r3, #48]	@ 0x30
 800472a:	e007      	b.n	800473c <HAL_ADC_Init+0x244>
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f022 020f 	bic.w	r2, r2, #15
 800473a:	631a      	str	r2, [r3, #48]	@ 0x30
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004740:	f023 0303 	bic.w	r3, r3, #3
 8004744:	f043 0201 	orr.w	r2, r3, #1
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	655a      	str	r2, [r3, #84]	@ 0x54
 800474c:	e007      	b.n	800475e <HAL_ADC_Init+0x266>
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004752:	f043 0210 	orr.w	r2, r3, #16
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	655a      	str	r2, [r3, #84]	@ 0x54
 800475a:	2301      	movs	r3, #1
 800475c:	77fb      	strb	r3, [r7, #31]
 800475e:	7ffb      	ldrb	r3, [r7, #31]
 8004760:	4618      	mov	r0, r3
 8004762:	3720      	adds	r7, #32
 8004764:	46bd      	mov	sp, r7
 8004766:	bd80      	pop	{r7, pc}
 8004768:	200000a0 	.word	0x200000a0
 800476c:	053e2d63 	.word	0x053e2d63
 8004770:	50040000 	.word	0x50040000
 8004774:	50040300 	.word	0x50040300
 8004778:	fff0c007 	.word	0xfff0c007

0800477c <HAL_ADC_Start>:
 800477c:	b580      	push	{r7, lr}
 800477e:	b084      	sub	sp, #16
 8004780:	af00      	add	r7, sp, #0
 8004782:	6078      	str	r0, [r7, #4]
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	4618      	mov	r0, r3
 800478a:	f7ff fe7b 	bl	8004484 <LL_ADC_REG_IsConversionOngoing>
 800478e:	4603      	mov	r3, r0
 8004790:	2b00      	cmp	r3, #0
 8004792:	d14f      	bne.n	8004834 <HAL_ADC_Start+0xb8>
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800479a:	2b01      	cmp	r3, #1
 800479c:	d101      	bne.n	80047a2 <HAL_ADC_Start+0x26>
 800479e:	2302      	movs	r3, #2
 80047a0:	e04b      	b.n	800483a <HAL_ADC_Start+0xbe>
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	2201      	movs	r2, #1
 80047a6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80047aa:	6878      	ldr	r0, [r7, #4]
 80047ac:	f000 fdb6 	bl	800531c <ADC_Enable>
 80047b0:	4603      	mov	r3, r0
 80047b2:	73fb      	strb	r3, [r7, #15]
 80047b4:	7bfb      	ldrb	r3, [r7, #15]
 80047b6:	2b00      	cmp	r3, #0
 80047b8:	d137      	bne.n	800482a <HAL_ADC_Start+0xae>
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047be:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80047c2:	f023 0301 	bic.w	r3, r3, #1
 80047c6:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	655a      	str	r2, [r3, #84]	@ 0x54
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047d2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80047d6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80047da:	d106      	bne.n	80047ea <HAL_ADC_Start+0x6e>
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80047e0:	f023 0206 	bic.w	r2, r3, #6
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	659a      	str	r2, [r3, #88]	@ 0x58
 80047e8:	e002      	b.n	80047f0 <HAL_ADC_Start+0x74>
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	2200      	movs	r2, #0
 80047ee:	659a      	str	r2, [r3, #88]	@ 0x58
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	221c      	movs	r2, #28
 80047f6:	601a      	str	r2, [r3, #0]
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2200      	movs	r2, #0
 80047fc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	68db      	ldr	r3, [r3, #12]
 8004806:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800480a:	2b00      	cmp	r3, #0
 800480c:	d007      	beq.n	800481e <HAL_ADC_Start+0xa2>
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004812:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8004816:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	655a      	str	r2, [r3, #84]	@ 0x54
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	4618      	mov	r0, r3
 8004824:	f7ff fe06 	bl	8004434 <LL_ADC_REG_StartConversion>
 8004828:	e006      	b.n	8004838 <HAL_ADC_Start+0xbc>
 800482a:	687b      	ldr	r3, [r7, #4]
 800482c:	2200      	movs	r2, #0
 800482e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004832:	e001      	b.n	8004838 <HAL_ADC_Start+0xbc>
 8004834:	2302      	movs	r3, #2
 8004836:	73fb      	strb	r3, [r7, #15]
 8004838:	7bfb      	ldrb	r3, [r7, #15]
 800483a:	4618      	mov	r0, r3
 800483c:	3710      	adds	r7, #16
 800483e:	46bd      	mov	sp, r7
 8004840:	bd80      	pop	{r7, pc}

08004842 <HAL_ADC_Stop>:
 8004842:	b580      	push	{r7, lr}
 8004844:	b084      	sub	sp, #16
 8004846:	af00      	add	r7, sp, #0
 8004848:	6078      	str	r0, [r7, #4]
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8004850:	2b01      	cmp	r3, #1
 8004852:	d101      	bne.n	8004858 <HAL_ADC_Stop+0x16>
 8004854:	2302      	movs	r3, #2
 8004856:	e023      	b.n	80048a0 <HAL_ADC_Stop+0x5e>
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	2201      	movs	r2, #1
 800485c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004860:	2103      	movs	r1, #3
 8004862:	6878      	ldr	r0, [r7, #4]
 8004864:	f000 fc9e 	bl	80051a4 <ADC_ConversionStop>
 8004868:	4603      	mov	r3, r0
 800486a:	73fb      	strb	r3, [r7, #15]
 800486c:	7bfb      	ldrb	r3, [r7, #15]
 800486e:	2b00      	cmp	r3, #0
 8004870:	d111      	bne.n	8004896 <HAL_ADC_Stop+0x54>
 8004872:	6878      	ldr	r0, [r7, #4]
 8004874:	f000 fdd8 	bl	8005428 <ADC_Disable>
 8004878:	4603      	mov	r3, r0
 800487a:	73fb      	strb	r3, [r7, #15]
 800487c:	7bfb      	ldrb	r3, [r7, #15]
 800487e:	2b00      	cmp	r3, #0
 8004880:	d109      	bne.n	8004896 <HAL_ADC_Stop+0x54>
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004886:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800488a:	f023 0301 	bic.w	r3, r3, #1
 800488e:	f043 0201 	orr.w	r2, r3, #1
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	655a      	str	r2, [r3, #84]	@ 0x54
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	2200      	movs	r2, #0
 800489a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800489e:	7bfb      	ldrb	r3, [r7, #15]
 80048a0:	4618      	mov	r0, r3
 80048a2:	3710      	adds	r7, #16
 80048a4:	46bd      	mov	sp, r7
 80048a6:	bd80      	pop	{r7, pc}

080048a8 <HAL_ADC_PollForConversion>:
 80048a8:	b580      	push	{r7, lr}
 80048aa:	b086      	sub	sp, #24
 80048ac:	af00      	add	r7, sp, #0
 80048ae:	6078      	str	r0, [r7, #4]
 80048b0:	6039      	str	r1, [r7, #0]
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	695b      	ldr	r3, [r3, #20]
 80048b6:	2b08      	cmp	r3, #8
 80048b8:	d102      	bne.n	80048c0 <HAL_ADC_PollForConversion+0x18>
 80048ba:	2308      	movs	r3, #8
 80048bc:	617b      	str	r3, [r7, #20]
 80048be:	e010      	b.n	80048e2 <HAL_ADC_PollForConversion+0x3a>
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	68db      	ldr	r3, [r3, #12]
 80048c6:	f003 0301 	and.w	r3, r3, #1
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d007      	beq.n	80048de <HAL_ADC_PollForConversion+0x36>
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80048d2:	f043 0220 	orr.w	r2, r3, #32
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	655a      	str	r2, [r3, #84]	@ 0x54
 80048da:	2301      	movs	r3, #1
 80048dc:	e06f      	b.n	80049be <HAL_ADC_PollForConversion+0x116>
 80048de:	2304      	movs	r3, #4
 80048e0:	617b      	str	r3, [r7, #20]
 80048e2:	f7ff fbc3 	bl	800406c <HAL_GetTick>
 80048e6:	6138      	str	r0, [r7, #16]
 80048e8:	e021      	b.n	800492e <HAL_ADC_PollForConversion+0x86>
 80048ea:	683b      	ldr	r3, [r7, #0]
 80048ec:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80048f0:	d01d      	beq.n	800492e <HAL_ADC_PollForConversion+0x86>
 80048f2:	f7ff fbbb 	bl	800406c <HAL_GetTick>
 80048f6:	4602      	mov	r2, r0
 80048f8:	693b      	ldr	r3, [r7, #16]
 80048fa:	1ad3      	subs	r3, r2, r3
 80048fc:	683a      	ldr	r2, [r7, #0]
 80048fe:	429a      	cmp	r2, r3
 8004900:	d302      	bcc.n	8004908 <HAL_ADC_PollForConversion+0x60>
 8004902:	683b      	ldr	r3, [r7, #0]
 8004904:	2b00      	cmp	r3, #0
 8004906:	d112      	bne.n	800492e <HAL_ADC_PollForConversion+0x86>
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	681b      	ldr	r3, [r3, #0]
 800490c:	681a      	ldr	r2, [r3, #0]
 800490e:	697b      	ldr	r3, [r7, #20]
 8004910:	4013      	ands	r3, r2
 8004912:	2b00      	cmp	r3, #0
 8004914:	d10b      	bne.n	800492e <HAL_ADC_PollForConversion+0x86>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800491a:	f043 0204 	orr.w	r2, r3, #4
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	655a      	str	r2, [r3, #84]	@ 0x54
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	2200      	movs	r2, #0
 8004926:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800492a:	2303      	movs	r3, #3
 800492c:	e047      	b.n	80049be <HAL_ADC_PollForConversion+0x116>
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	681a      	ldr	r2, [r3, #0]
 8004934:	697b      	ldr	r3, [r7, #20]
 8004936:	4013      	ands	r3, r2
 8004938:	2b00      	cmp	r3, #0
 800493a:	d0d6      	beq.n	80048ea <HAL_ADC_PollForConversion+0x42>
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004940:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	655a      	str	r2, [r3, #84]	@ 0x54
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	4618      	mov	r0, r3
 800494e:	f7ff fc46 	bl	80041de <LL_ADC_REG_IsTriggerSourceSWStart>
 8004952:	4603      	mov	r3, r0
 8004954:	2b00      	cmp	r3, #0
 8004956:	d01c      	beq.n	8004992 <HAL_ADC_PollForConversion+0xea>
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	7e5b      	ldrb	r3, [r3, #25]
 800495c:	2b00      	cmp	r3, #0
 800495e:	d118      	bne.n	8004992 <HAL_ADC_PollForConversion+0xea>
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	f003 0308 	and.w	r3, r3, #8
 800496a:	2b08      	cmp	r3, #8
 800496c:	d111      	bne.n	8004992 <HAL_ADC_PollForConversion+0xea>
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004972:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	655a      	str	r2, [r3, #84]	@ 0x54
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800497e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004982:	2b00      	cmp	r3, #0
 8004984:	d105      	bne.n	8004992 <HAL_ADC_PollForConversion+0xea>
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800498a:	f043 0201 	orr.w	r2, r3, #1
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	655a      	str	r2, [r3, #84]	@ 0x54
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	68db      	ldr	r3, [r3, #12]
 8004998:	60fb      	str	r3, [r7, #12]
 800499a:	697b      	ldr	r3, [r7, #20]
 800499c:	2b08      	cmp	r3, #8
 800499e:	d104      	bne.n	80049aa <HAL_ADC_PollForConversion+0x102>
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	2208      	movs	r2, #8
 80049a6:	601a      	str	r2, [r3, #0]
 80049a8:	e008      	b.n	80049bc <HAL_ADC_PollForConversion+0x114>
 80049aa:	68fb      	ldr	r3, [r7, #12]
 80049ac:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	d103      	bne.n	80049bc <HAL_ADC_PollForConversion+0x114>
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	220c      	movs	r2, #12
 80049ba:	601a      	str	r2, [r3, #0]
 80049bc:	2300      	movs	r3, #0
 80049be:	4618      	mov	r0, r3
 80049c0:	3718      	adds	r7, #24
 80049c2:	46bd      	mov	sp, r7
 80049c4:	bd80      	pop	{r7, pc}

080049c6 <HAL_ADC_GetValue>:
 80049c6:	b480      	push	{r7}
 80049c8:	b083      	sub	sp, #12
 80049ca:	af00      	add	r7, sp, #0
 80049cc:	6078      	str	r0, [r7, #4]
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	681b      	ldr	r3, [r3, #0]
 80049d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049d4:	4618      	mov	r0, r3
 80049d6:	370c      	adds	r7, #12
 80049d8:	46bd      	mov	sp, r7
 80049da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049de:	4770      	bx	lr

080049e0 <HAL_ADC_ConfigChannel>:
 80049e0:	b580      	push	{r7, lr}
 80049e2:	b0b6      	sub	sp, #216	@ 0xd8
 80049e4:	af00      	add	r7, sp, #0
 80049e6:	6078      	str	r0, [r7, #4]
 80049e8:	6039      	str	r1, [r7, #0]
 80049ea:	2300      	movs	r3, #0
 80049ec:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 80049f0:	2300      	movs	r3, #0
 80049f2:	60bb      	str	r3, [r7, #8]
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80049fa:	2b01      	cmp	r3, #1
 80049fc:	d101      	bne.n	8004a02 <HAL_ADC_ConfigChannel+0x22>
 80049fe:	2302      	movs	r3, #2
 8004a00:	e3bb      	b.n	800517a <HAL_ADC_ConfigChannel+0x79a>
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	2201      	movs	r2, #1
 8004a06:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	4618      	mov	r0, r3
 8004a10:	f7ff fd38 	bl	8004484 <LL_ADC_REG_IsConversionOngoing>
 8004a14:	4603      	mov	r3, r0
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	f040 83a0 	bne.w	800515c <HAL_ADC_ConfigChannel+0x77c>
 8004a1c:	683b      	ldr	r3, [r7, #0]
 8004a1e:	685b      	ldr	r3, [r3, #4]
 8004a20:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a24:	683b      	ldr	r3, [r7, #0]
 8004a26:	685b      	ldr	r3, [r3, #4]
 8004a28:	2b05      	cmp	r3, #5
 8004a2a:	d824      	bhi.n	8004a76 <HAL_ADC_ConfigChannel+0x96>
 8004a2c:	683b      	ldr	r3, [r7, #0]
 8004a2e:	685b      	ldr	r3, [r3, #4]
 8004a30:	3b02      	subs	r3, #2
 8004a32:	2b03      	cmp	r3, #3
 8004a34:	d81b      	bhi.n	8004a6e <HAL_ADC_ConfigChannel+0x8e>
 8004a36:	a201      	add	r2, pc, #4	@ (adr r2, 8004a3c <HAL_ADC_ConfigChannel+0x5c>)
 8004a38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004a3c:	08004a4d 	.word	0x08004a4d
 8004a40:	08004a55 	.word	0x08004a55
 8004a44:	08004a5d 	.word	0x08004a5d
 8004a48:	08004a65 	.word	0x08004a65
 8004a4c:	230c      	movs	r3, #12
 8004a4e:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a52:	e010      	b.n	8004a76 <HAL_ADC_ConfigChannel+0x96>
 8004a54:	2312      	movs	r3, #18
 8004a56:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a5a:	e00c      	b.n	8004a76 <HAL_ADC_ConfigChannel+0x96>
 8004a5c:	2318      	movs	r3, #24
 8004a5e:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a62:	e008      	b.n	8004a76 <HAL_ADC_ConfigChannel+0x96>
 8004a64:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8004a68:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a6c:	e003      	b.n	8004a76 <HAL_ADC_ConfigChannel+0x96>
 8004a6e:	2306      	movs	r3, #6
 8004a70:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a74:	bf00      	nop
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	6818      	ldr	r0, [r3, #0]
 8004a7a:	683b      	ldr	r3, [r7, #0]
 8004a7c:	681b      	ldr	r3, [r3, #0]
 8004a7e:	461a      	mov	r2, r3
 8004a80:	f8d7 10d0 	ldr.w	r1, [r7, #208]	@ 0xd0
 8004a84:	f7ff fbbe 	bl	8004204 <LL_ADC_REG_SetSequencerRanks>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	4618      	mov	r0, r3
 8004a8e:	f7ff fcf9 	bl	8004484 <LL_ADC_REG_IsConversionOngoing>
 8004a92:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	4618      	mov	r0, r3
 8004a9c:	f7ff fd19 	bl	80044d2 <LL_ADC_INJ_IsConversionOngoing>
 8004aa0:	f8c7 00c8 	str.w	r0, [r7, #200]	@ 0xc8
 8004aa4:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8004aa8:	2b00      	cmp	r3, #0
 8004aaa:	f040 81a4 	bne.w	8004df6 <HAL_ADC_ConfigChannel+0x416>
 8004aae:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8004ab2:	2b00      	cmp	r3, #0
 8004ab4:	f040 819f 	bne.w	8004df6 <HAL_ADC_ConfigChannel+0x416>
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	6818      	ldr	r0, [r3, #0]
 8004abc:	683b      	ldr	r3, [r7, #0]
 8004abe:	6819      	ldr	r1, [r3, #0]
 8004ac0:	683b      	ldr	r3, [r7, #0]
 8004ac2:	689b      	ldr	r3, [r3, #8]
 8004ac4:	461a      	mov	r2, r3
 8004ac6:	f7ff fbc9 	bl	800425c <LL_ADC_SetChannelSamplingTime>
 8004aca:	683b      	ldr	r3, [r7, #0]
 8004acc:	695a      	ldr	r2, [r3, #20]
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	68db      	ldr	r3, [r3, #12]
 8004ad4:	08db      	lsrs	r3, r3, #3
 8004ad6:	f003 0303 	and.w	r3, r3, #3
 8004ada:	005b      	lsls	r3, r3, #1
 8004adc:	fa02 f303 	lsl.w	r3, r2, r3
 8004ae0:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004ae4:	683b      	ldr	r3, [r7, #0]
 8004ae6:	691b      	ldr	r3, [r3, #16]
 8004ae8:	2b04      	cmp	r3, #4
 8004aea:	d00a      	beq.n	8004b02 <HAL_ADC_ConfigChannel+0x122>
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	6818      	ldr	r0, [r3, #0]
 8004af0:	683b      	ldr	r3, [r7, #0]
 8004af2:	6919      	ldr	r1, [r3, #16]
 8004af4:	683b      	ldr	r3, [r7, #0]
 8004af6:	681a      	ldr	r2, [r3, #0]
 8004af8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8004afc:	f7ff fb1a 	bl	8004134 <LL_ADC_SetOffset>
 8004b00:	e179      	b.n	8004df6 <HAL_ADC_ConfigChannel+0x416>
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	681b      	ldr	r3, [r3, #0]
 8004b06:	2100      	movs	r1, #0
 8004b08:	4618      	mov	r0, r3
 8004b0a:	f7ff fb37 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004b0e:	4603      	mov	r3, r0
 8004b10:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004b14:	2b00      	cmp	r3, #0
 8004b16:	d10a      	bne.n	8004b2e <HAL_ADC_ConfigChannel+0x14e>
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	2100      	movs	r1, #0
 8004b1e:	4618      	mov	r0, r3
 8004b20:	f7ff fb2c 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004b24:	4603      	mov	r3, r0
 8004b26:	0e9b      	lsrs	r3, r3, #26
 8004b28:	f003 021f 	and.w	r2, r3, #31
 8004b2c:	e01e      	b.n	8004b6c <HAL_ADC_ConfigChannel+0x18c>
 8004b2e:	687b      	ldr	r3, [r7, #4]
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	2100      	movs	r1, #0
 8004b34:	4618      	mov	r0, r3
 8004b36:	f7ff fb21 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004b3a:	4603      	mov	r3, r0
 8004b3c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004b40:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8004b44:	fa93 f3a3 	rbit	r3, r3
 8004b48:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004b4c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8004b50:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8004b54:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8004b58:	2b00      	cmp	r3, #0
 8004b5a:	d101      	bne.n	8004b60 <HAL_ADC_ConfigChannel+0x180>
 8004b5c:	2320      	movs	r3, #32
 8004b5e:	e004      	b.n	8004b6a <HAL_ADC_ConfigChannel+0x18a>
 8004b60:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8004b64:	fab3 f383 	clz	r3, r3
 8004b68:	b2db      	uxtb	r3, r3
 8004b6a:	461a      	mov	r2, r3
 8004b6c:	683b      	ldr	r3, [r7, #0]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004b74:	2b00      	cmp	r3, #0
 8004b76:	d105      	bne.n	8004b84 <HAL_ADC_ConfigChannel+0x1a4>
 8004b78:	683b      	ldr	r3, [r7, #0]
 8004b7a:	681b      	ldr	r3, [r3, #0]
 8004b7c:	0e9b      	lsrs	r3, r3, #26
 8004b7e:	f003 031f 	and.w	r3, r3, #31
 8004b82:	e018      	b.n	8004bb6 <HAL_ADC_ConfigChannel+0x1d6>
 8004b84:	683b      	ldr	r3, [r7, #0]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004b8c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004b90:	fa93 f3a3 	rbit	r3, r3
 8004b94:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8004b98:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8004b9c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004ba0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d101      	bne.n	8004bac <HAL_ADC_ConfigChannel+0x1cc>
 8004ba8:	2320      	movs	r3, #32
 8004baa:	e004      	b.n	8004bb6 <HAL_ADC_ConfigChannel+0x1d6>
 8004bac:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8004bb0:	fab3 f383 	clz	r3, r3
 8004bb4:	b2db      	uxtb	r3, r3
 8004bb6:	429a      	cmp	r2, r3
 8004bb8:	d106      	bne.n	8004bc8 <HAL_ADC_ConfigChannel+0x1e8>
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	2200      	movs	r2, #0
 8004bc0:	2100      	movs	r1, #0
 8004bc2:	4618      	mov	r0, r3
 8004bc4:	f7ff faf0 	bl	80041a8 <LL_ADC_SetOffsetState>
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	681b      	ldr	r3, [r3, #0]
 8004bcc:	2101      	movs	r1, #1
 8004bce:	4618      	mov	r0, r3
 8004bd0:	f7ff fad4 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004bd4:	4603      	mov	r3, r0
 8004bd6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d10a      	bne.n	8004bf4 <HAL_ADC_ConfigChannel+0x214>
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	2101      	movs	r1, #1
 8004be4:	4618      	mov	r0, r3
 8004be6:	f7ff fac9 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004bea:	4603      	mov	r3, r0
 8004bec:	0e9b      	lsrs	r3, r3, #26
 8004bee:	f003 021f 	and.w	r2, r3, #31
 8004bf2:	e01e      	b.n	8004c32 <HAL_ADC_ConfigChannel+0x252>
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	2101      	movs	r1, #1
 8004bfa:	4618      	mov	r0, r3
 8004bfc:	f7ff fabe 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004c00:	4603      	mov	r3, r0
 8004c02:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004c06:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8004c0a:	fa93 f3a3 	rbit	r3, r3
 8004c0e:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004c12:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8004c16:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8004c1a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	d101      	bne.n	8004c26 <HAL_ADC_ConfigChannel+0x246>
 8004c22:	2320      	movs	r3, #32
 8004c24:	e004      	b.n	8004c30 <HAL_ADC_ConfigChannel+0x250>
 8004c26:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004c2a:	fab3 f383 	clz	r3, r3
 8004c2e:	b2db      	uxtb	r3, r3
 8004c30:	461a      	mov	r2, r3
 8004c32:	683b      	ldr	r3, [r7, #0]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004c3a:	2b00      	cmp	r3, #0
 8004c3c:	d105      	bne.n	8004c4a <HAL_ADC_ConfigChannel+0x26a>
 8004c3e:	683b      	ldr	r3, [r7, #0]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	0e9b      	lsrs	r3, r3, #26
 8004c44:	f003 031f 	and.w	r3, r3, #31
 8004c48:	e018      	b.n	8004c7c <HAL_ADC_ConfigChannel+0x29c>
 8004c4a:	683b      	ldr	r3, [r7, #0]
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004c52:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8004c56:	fa93 f3a3 	rbit	r3, r3
 8004c5a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004c5e:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8004c62:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004c66:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004c6a:	2b00      	cmp	r3, #0
 8004c6c:	d101      	bne.n	8004c72 <HAL_ADC_ConfigChannel+0x292>
 8004c6e:	2320      	movs	r3, #32
 8004c70:	e004      	b.n	8004c7c <HAL_ADC_ConfigChannel+0x29c>
 8004c72:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004c76:	fab3 f383 	clz	r3, r3
 8004c7a:	b2db      	uxtb	r3, r3
 8004c7c:	429a      	cmp	r2, r3
 8004c7e:	d106      	bne.n	8004c8e <HAL_ADC_ConfigChannel+0x2ae>
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	681b      	ldr	r3, [r3, #0]
 8004c84:	2200      	movs	r2, #0
 8004c86:	2101      	movs	r1, #1
 8004c88:	4618      	mov	r0, r3
 8004c8a:	f7ff fa8d 	bl	80041a8 <LL_ADC_SetOffsetState>
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	2102      	movs	r1, #2
 8004c94:	4618      	mov	r0, r3
 8004c96:	f7ff fa71 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004c9a:	4603      	mov	r3, r0
 8004c9c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004ca0:	2b00      	cmp	r3, #0
 8004ca2:	d10a      	bne.n	8004cba <HAL_ADC_ConfigChannel+0x2da>
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	2102      	movs	r1, #2
 8004caa:	4618      	mov	r0, r3
 8004cac:	f7ff fa66 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004cb0:	4603      	mov	r3, r0
 8004cb2:	0e9b      	lsrs	r3, r3, #26
 8004cb4:	f003 021f 	and.w	r2, r3, #31
 8004cb8:	e01e      	b.n	8004cf8 <HAL_ADC_ConfigChannel+0x318>
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	2102      	movs	r1, #2
 8004cc0:	4618      	mov	r0, r3
 8004cc2:	f7ff fa5b 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004cc6:	4603      	mov	r3, r0
 8004cc8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004ccc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8004cd0:	fa93 f3a3 	rbit	r3, r3
 8004cd4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004cd8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8004cdc:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004ce0:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004ce4:	2b00      	cmp	r3, #0
 8004ce6:	d101      	bne.n	8004cec <HAL_ADC_ConfigChannel+0x30c>
 8004ce8:	2320      	movs	r3, #32
 8004cea:	e004      	b.n	8004cf6 <HAL_ADC_ConfigChannel+0x316>
 8004cec:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8004cf0:	fab3 f383 	clz	r3, r3
 8004cf4:	b2db      	uxtb	r3, r3
 8004cf6:	461a      	mov	r2, r3
 8004cf8:	683b      	ldr	r3, [r7, #0]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004d00:	2b00      	cmp	r3, #0
 8004d02:	d105      	bne.n	8004d10 <HAL_ADC_ConfigChannel+0x330>
 8004d04:	683b      	ldr	r3, [r7, #0]
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	0e9b      	lsrs	r3, r3, #26
 8004d0a:	f003 031f 	and.w	r3, r3, #31
 8004d0e:	e014      	b.n	8004d3a <HAL_ADC_ConfigChannel+0x35a>
 8004d10:	683b      	ldr	r3, [r7, #0]
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004d16:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8004d18:	fa93 f3a3 	rbit	r3, r3
 8004d1c:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004d1e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004d20:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004d24:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8004d28:	2b00      	cmp	r3, #0
 8004d2a:	d101      	bne.n	8004d30 <HAL_ADC_ConfigChannel+0x350>
 8004d2c:	2320      	movs	r3, #32
 8004d2e:	e004      	b.n	8004d3a <HAL_ADC_ConfigChannel+0x35a>
 8004d30:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8004d34:	fab3 f383 	clz	r3, r3
 8004d38:	b2db      	uxtb	r3, r3
 8004d3a:	429a      	cmp	r2, r3
 8004d3c:	d106      	bne.n	8004d4c <HAL_ADC_ConfigChannel+0x36c>
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	2200      	movs	r2, #0
 8004d44:	2102      	movs	r1, #2
 8004d46:	4618      	mov	r0, r3
 8004d48:	f7ff fa2e 	bl	80041a8 <LL_ADC_SetOffsetState>
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	2103      	movs	r1, #3
 8004d52:	4618      	mov	r0, r3
 8004d54:	f7ff fa12 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004d58:	4603      	mov	r3, r0
 8004d5a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004d5e:	2b00      	cmp	r3, #0
 8004d60:	d10a      	bne.n	8004d78 <HAL_ADC_ConfigChannel+0x398>
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	2103      	movs	r1, #3
 8004d68:	4618      	mov	r0, r3
 8004d6a:	f7ff fa07 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004d6e:	4603      	mov	r3, r0
 8004d70:	0e9b      	lsrs	r3, r3, #26
 8004d72:	f003 021f 	and.w	r2, r3, #31
 8004d76:	e017      	b.n	8004da8 <HAL_ADC_ConfigChannel+0x3c8>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	2103      	movs	r1, #3
 8004d7e:	4618      	mov	r0, r3
 8004d80:	f7ff f9fc 	bl	800417c <LL_ADC_GetOffsetChannel>
 8004d84:	4603      	mov	r3, r0
 8004d86:	673b      	str	r3, [r7, #112]	@ 0x70
 8004d88:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8004d8a:	fa93 f3a3 	rbit	r3, r3
 8004d8e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004d90:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004d92:	677b      	str	r3, [r7, #116]	@ 0x74
 8004d94:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d101      	bne.n	8004d9e <HAL_ADC_ConfigChannel+0x3be>
 8004d9a:	2320      	movs	r3, #32
 8004d9c:	e003      	b.n	8004da6 <HAL_ADC_ConfigChannel+0x3c6>
 8004d9e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004da0:	fab3 f383 	clz	r3, r3
 8004da4:	b2db      	uxtb	r3, r3
 8004da6:	461a      	mov	r2, r3
 8004da8:	683b      	ldr	r3, [r7, #0]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004db0:	2b00      	cmp	r3, #0
 8004db2:	d105      	bne.n	8004dc0 <HAL_ADC_ConfigChannel+0x3e0>
 8004db4:	683b      	ldr	r3, [r7, #0]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	0e9b      	lsrs	r3, r3, #26
 8004dba:	f003 031f 	and.w	r3, r3, #31
 8004dbe:	e011      	b.n	8004de4 <HAL_ADC_ConfigChannel+0x404>
 8004dc0:	683b      	ldr	r3, [r7, #0]
 8004dc2:	681b      	ldr	r3, [r3, #0]
 8004dc4:	667b      	str	r3, [r7, #100]	@ 0x64
 8004dc6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8004dc8:	fa93 f3a3 	rbit	r3, r3
 8004dcc:	663b      	str	r3, [r7, #96]	@ 0x60
 8004dce:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004dd0:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004dd2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d101      	bne.n	8004ddc <HAL_ADC_ConfigChannel+0x3fc>
 8004dd8:	2320      	movs	r3, #32
 8004dda:	e003      	b.n	8004de4 <HAL_ADC_ConfigChannel+0x404>
 8004ddc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004dde:	fab3 f383 	clz	r3, r3
 8004de2:	b2db      	uxtb	r3, r3
 8004de4:	429a      	cmp	r2, r3
 8004de6:	d106      	bne.n	8004df6 <HAL_ADC_ConfigChannel+0x416>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	2200      	movs	r2, #0
 8004dee:	2103      	movs	r1, #3
 8004df0:	4618      	mov	r0, r3
 8004df2:	f7ff f9d9 	bl	80041a8 <LL_ADC_SetOffsetState>
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	4618      	mov	r0, r3
 8004dfc:	f7ff faf4 	bl	80043e8 <LL_ADC_IsEnabled>
 8004e00:	4603      	mov	r3, r0
 8004e02:	2b00      	cmp	r3, #0
 8004e04:	f040 8140 	bne.w	8005088 <HAL_ADC_ConfigChannel+0x6a8>
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	6818      	ldr	r0, [r3, #0]
 8004e0c:	683b      	ldr	r3, [r7, #0]
 8004e0e:	6819      	ldr	r1, [r3, #0]
 8004e10:	683b      	ldr	r3, [r7, #0]
 8004e12:	68db      	ldr	r3, [r3, #12]
 8004e14:	461a      	mov	r2, r3
 8004e16:	f7ff fa4d 	bl	80042b4 <LL_ADC_SetChannelSingleDiff>
 8004e1a:	683b      	ldr	r3, [r7, #0]
 8004e1c:	68db      	ldr	r3, [r3, #12]
 8004e1e:	4a8f      	ldr	r2, [pc, #572]	@ (800505c <HAL_ADC_ConfigChannel+0x67c>)
 8004e20:	4293      	cmp	r3, r2
 8004e22:	f040 8131 	bne.w	8005088 <HAL_ADC_ConfigChannel+0x6a8>
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	6818      	ldr	r0, [r3, #0]
 8004e2a:	683b      	ldr	r3, [r7, #0]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d10b      	bne.n	8004e4e <HAL_ADC_ConfigChannel+0x46e>
 8004e36:	683b      	ldr	r3, [r7, #0]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	0e9b      	lsrs	r3, r3, #26
 8004e3c:	3301      	adds	r3, #1
 8004e3e:	f003 031f 	and.w	r3, r3, #31
 8004e42:	2b09      	cmp	r3, #9
 8004e44:	bf94      	ite	ls
 8004e46:	2301      	movls	r3, #1
 8004e48:	2300      	movhi	r3, #0
 8004e4a:	b2db      	uxtb	r3, r3
 8004e4c:	e019      	b.n	8004e82 <HAL_ADC_ConfigChannel+0x4a2>
 8004e4e:	683b      	ldr	r3, [r7, #0]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004e54:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8004e56:	fa93 f3a3 	rbit	r3, r3
 8004e5a:	657b      	str	r3, [r7, #84]	@ 0x54
 8004e5c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004e5e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004e60:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d101      	bne.n	8004e6a <HAL_ADC_ConfigChannel+0x48a>
 8004e66:	2320      	movs	r3, #32
 8004e68:	e003      	b.n	8004e72 <HAL_ADC_ConfigChannel+0x492>
 8004e6a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004e6c:	fab3 f383 	clz	r3, r3
 8004e70:	b2db      	uxtb	r3, r3
 8004e72:	3301      	adds	r3, #1
 8004e74:	f003 031f 	and.w	r3, r3, #31
 8004e78:	2b09      	cmp	r3, #9
 8004e7a:	bf94      	ite	ls
 8004e7c:	2301      	movls	r3, #1
 8004e7e:	2300      	movhi	r3, #0
 8004e80:	b2db      	uxtb	r3, r3
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d079      	beq.n	8004f7a <HAL_ADC_ConfigChannel+0x59a>
 8004e86:	683b      	ldr	r3, [r7, #0]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004e8e:	2b00      	cmp	r3, #0
 8004e90:	d107      	bne.n	8004ea2 <HAL_ADC_ConfigChannel+0x4c2>
 8004e92:	683b      	ldr	r3, [r7, #0]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	0e9b      	lsrs	r3, r3, #26
 8004e98:	3301      	adds	r3, #1
 8004e9a:	069b      	lsls	r3, r3, #26
 8004e9c:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004ea0:	e015      	b.n	8004ece <HAL_ADC_ConfigChannel+0x4ee>
 8004ea2:	683b      	ldr	r3, [r7, #0]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004ea8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004eaa:	fa93 f3a3 	rbit	r3, r3
 8004eae:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004eb0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004eb2:	653b      	str	r3, [r7, #80]	@ 0x50
 8004eb4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004eb6:	2b00      	cmp	r3, #0
 8004eb8:	d101      	bne.n	8004ebe <HAL_ADC_ConfigChannel+0x4de>
 8004eba:	2320      	movs	r3, #32
 8004ebc:	e003      	b.n	8004ec6 <HAL_ADC_ConfigChannel+0x4e6>
 8004ebe:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004ec0:	fab3 f383 	clz	r3, r3
 8004ec4:	b2db      	uxtb	r3, r3
 8004ec6:	3301      	adds	r3, #1
 8004ec8:	069b      	lsls	r3, r3, #26
 8004eca:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004ece:	683b      	ldr	r3, [r7, #0]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d109      	bne.n	8004eee <HAL_ADC_ConfigChannel+0x50e>
 8004eda:	683b      	ldr	r3, [r7, #0]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	0e9b      	lsrs	r3, r3, #26
 8004ee0:	3301      	adds	r3, #1
 8004ee2:	f003 031f 	and.w	r3, r3, #31
 8004ee6:	2101      	movs	r1, #1
 8004ee8:	fa01 f303 	lsl.w	r3, r1, r3
 8004eec:	e017      	b.n	8004f1e <HAL_ADC_ConfigChannel+0x53e>
 8004eee:	683b      	ldr	r3, [r7, #0]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	643b      	str	r3, [r7, #64]	@ 0x40
 8004ef4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004ef6:	fa93 f3a3 	rbit	r3, r3
 8004efa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004efc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004efe:	647b      	str	r3, [r7, #68]	@ 0x44
 8004f00:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d101      	bne.n	8004f0a <HAL_ADC_ConfigChannel+0x52a>
 8004f06:	2320      	movs	r3, #32
 8004f08:	e003      	b.n	8004f12 <HAL_ADC_ConfigChannel+0x532>
 8004f0a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004f0c:	fab3 f383 	clz	r3, r3
 8004f10:	b2db      	uxtb	r3, r3
 8004f12:	3301      	adds	r3, #1
 8004f14:	f003 031f 	and.w	r3, r3, #31
 8004f18:	2101      	movs	r1, #1
 8004f1a:	fa01 f303 	lsl.w	r3, r1, r3
 8004f1e:	ea42 0103 	orr.w	r1, r2, r3
 8004f22:	683b      	ldr	r3, [r7, #0]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004f2a:	2b00      	cmp	r3, #0
 8004f2c:	d10a      	bne.n	8004f44 <HAL_ADC_ConfigChannel+0x564>
 8004f2e:	683b      	ldr	r3, [r7, #0]
 8004f30:	681b      	ldr	r3, [r3, #0]
 8004f32:	0e9b      	lsrs	r3, r3, #26
 8004f34:	3301      	adds	r3, #1
 8004f36:	f003 021f 	and.w	r2, r3, #31
 8004f3a:	4613      	mov	r3, r2
 8004f3c:	005b      	lsls	r3, r3, #1
 8004f3e:	4413      	add	r3, r2
 8004f40:	051b      	lsls	r3, r3, #20
 8004f42:	e018      	b.n	8004f76 <HAL_ADC_ConfigChannel+0x596>
 8004f44:	683b      	ldr	r3, [r7, #0]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	637b      	str	r3, [r7, #52]	@ 0x34
 8004f4a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004f4c:	fa93 f3a3 	rbit	r3, r3
 8004f50:	633b      	str	r3, [r7, #48]	@ 0x30
 8004f52:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f54:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004f56:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	d101      	bne.n	8004f60 <HAL_ADC_ConfigChannel+0x580>
 8004f5c:	2320      	movs	r3, #32
 8004f5e:	e003      	b.n	8004f68 <HAL_ADC_ConfigChannel+0x588>
 8004f60:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004f62:	fab3 f383 	clz	r3, r3
 8004f66:	b2db      	uxtb	r3, r3
 8004f68:	3301      	adds	r3, #1
 8004f6a:	f003 021f 	and.w	r2, r3, #31
 8004f6e:	4613      	mov	r3, r2
 8004f70:	005b      	lsls	r3, r3, #1
 8004f72:	4413      	add	r3, r2
 8004f74:	051b      	lsls	r3, r3, #20
 8004f76:	430b      	orrs	r3, r1
 8004f78:	e081      	b.n	800507e <HAL_ADC_ConfigChannel+0x69e>
 8004f7a:	683b      	ldr	r3, [r7, #0]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004f82:	2b00      	cmp	r3, #0
 8004f84:	d107      	bne.n	8004f96 <HAL_ADC_ConfigChannel+0x5b6>
 8004f86:	683b      	ldr	r3, [r7, #0]
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	0e9b      	lsrs	r3, r3, #26
 8004f8c:	3301      	adds	r3, #1
 8004f8e:	069b      	lsls	r3, r3, #26
 8004f90:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004f94:	e015      	b.n	8004fc2 <HAL_ADC_ConfigChannel+0x5e2>
 8004f96:	683b      	ldr	r3, [r7, #0]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004f9c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004f9e:	fa93 f3a3 	rbit	r3, r3
 8004fa2:	627b      	str	r3, [r7, #36]	@ 0x24
 8004fa4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fa6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004fa8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d101      	bne.n	8004fb2 <HAL_ADC_ConfigChannel+0x5d2>
 8004fae:	2320      	movs	r3, #32
 8004fb0:	e003      	b.n	8004fba <HAL_ADC_ConfigChannel+0x5da>
 8004fb2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004fb4:	fab3 f383 	clz	r3, r3
 8004fb8:	b2db      	uxtb	r3, r3
 8004fba:	3301      	adds	r3, #1
 8004fbc:	069b      	lsls	r3, r3, #26
 8004fbe:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004fc2:	683b      	ldr	r3, [r7, #0]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	d109      	bne.n	8004fe2 <HAL_ADC_ConfigChannel+0x602>
 8004fce:	683b      	ldr	r3, [r7, #0]
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	0e9b      	lsrs	r3, r3, #26
 8004fd4:	3301      	adds	r3, #1
 8004fd6:	f003 031f 	and.w	r3, r3, #31
 8004fda:	2101      	movs	r1, #1
 8004fdc:	fa01 f303 	lsl.w	r3, r1, r3
 8004fe0:	e017      	b.n	8005012 <HAL_ADC_ConfigChannel+0x632>
 8004fe2:	683b      	ldr	r3, [r7, #0]
 8004fe4:	681b      	ldr	r3, [r3, #0]
 8004fe6:	61fb      	str	r3, [r7, #28]
 8004fe8:	69fb      	ldr	r3, [r7, #28]
 8004fea:	fa93 f3a3 	rbit	r3, r3
 8004fee:	61bb      	str	r3, [r7, #24]
 8004ff0:	69bb      	ldr	r3, [r7, #24]
 8004ff2:	623b      	str	r3, [r7, #32]
 8004ff4:	6a3b      	ldr	r3, [r7, #32]
 8004ff6:	2b00      	cmp	r3, #0
 8004ff8:	d101      	bne.n	8004ffe <HAL_ADC_ConfigChannel+0x61e>
 8004ffa:	2320      	movs	r3, #32
 8004ffc:	e003      	b.n	8005006 <HAL_ADC_ConfigChannel+0x626>
 8004ffe:	6a3b      	ldr	r3, [r7, #32]
 8005000:	fab3 f383 	clz	r3, r3
 8005004:	b2db      	uxtb	r3, r3
 8005006:	3301      	adds	r3, #1
 8005008:	f003 031f 	and.w	r3, r3, #31
 800500c:	2101      	movs	r1, #1
 800500e:	fa01 f303 	lsl.w	r3, r1, r3
 8005012:	ea42 0103 	orr.w	r1, r2, r3
 8005016:	683b      	ldr	r3, [r7, #0]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800501e:	2b00      	cmp	r3, #0
 8005020:	d10d      	bne.n	800503e <HAL_ADC_ConfigChannel+0x65e>
 8005022:	683b      	ldr	r3, [r7, #0]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	0e9b      	lsrs	r3, r3, #26
 8005028:	3301      	adds	r3, #1
 800502a:	f003 021f 	and.w	r2, r3, #31
 800502e:	4613      	mov	r3, r2
 8005030:	005b      	lsls	r3, r3, #1
 8005032:	4413      	add	r3, r2
 8005034:	3b1e      	subs	r3, #30
 8005036:	051b      	lsls	r3, r3, #20
 8005038:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800503c:	e01e      	b.n	800507c <HAL_ADC_ConfigChannel+0x69c>
 800503e:	683b      	ldr	r3, [r7, #0]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	613b      	str	r3, [r7, #16]
 8005044:	693b      	ldr	r3, [r7, #16]
 8005046:	fa93 f3a3 	rbit	r3, r3
 800504a:	60fb      	str	r3, [r7, #12]
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	617b      	str	r3, [r7, #20]
 8005050:	697b      	ldr	r3, [r7, #20]
 8005052:	2b00      	cmp	r3, #0
 8005054:	d104      	bne.n	8005060 <HAL_ADC_ConfigChannel+0x680>
 8005056:	2320      	movs	r3, #32
 8005058:	e006      	b.n	8005068 <HAL_ADC_ConfigChannel+0x688>
 800505a:	bf00      	nop
 800505c:	407f0000 	.word	0x407f0000
 8005060:	697b      	ldr	r3, [r7, #20]
 8005062:	fab3 f383 	clz	r3, r3
 8005066:	b2db      	uxtb	r3, r3
 8005068:	3301      	adds	r3, #1
 800506a:	f003 021f 	and.w	r2, r3, #31
 800506e:	4613      	mov	r3, r2
 8005070:	005b      	lsls	r3, r3, #1
 8005072:	4413      	add	r3, r2
 8005074:	3b1e      	subs	r3, #30
 8005076:	051b      	lsls	r3, r3, #20
 8005078:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800507c:	430b      	orrs	r3, r1
 800507e:	683a      	ldr	r2, [r7, #0]
 8005080:	6892      	ldr	r2, [r2, #8]
 8005082:	4619      	mov	r1, r3
 8005084:	f7ff f8ea 	bl	800425c <LL_ADC_SetChannelSamplingTime>
 8005088:	683b      	ldr	r3, [r7, #0]
 800508a:	681a      	ldr	r2, [r3, #0]
 800508c:	4b3d      	ldr	r3, [pc, #244]	@ (8005184 <HAL_ADC_ConfigChannel+0x7a4>)
 800508e:	4013      	ands	r3, r2
 8005090:	2b00      	cmp	r3, #0
 8005092:	d06c      	beq.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 8005094:	483c      	ldr	r0, [pc, #240]	@ (8005188 <HAL_ADC_ConfigChannel+0x7a8>)
 8005096:	f7ff f83f 	bl	8004118 <LL_ADC_GetCommonPathInternalCh>
 800509a:	f8c7 00c0 	str.w	r0, [r7, #192]	@ 0xc0
 800509e:	683b      	ldr	r3, [r7, #0]
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	4a3a      	ldr	r2, [pc, #232]	@ (800518c <HAL_ADC_ConfigChannel+0x7ac>)
 80050a4:	4293      	cmp	r3, r2
 80050a6:	d127      	bne.n	80050f8 <HAL_ADC_ConfigChannel+0x718>
 80050a8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80050ac:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80050b0:	2b00      	cmp	r3, #0
 80050b2:	d121      	bne.n	80050f8 <HAL_ADC_ConfigChannel+0x718>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	4a35      	ldr	r2, [pc, #212]	@ (8005190 <HAL_ADC_ConfigChannel+0x7b0>)
 80050ba:	4293      	cmp	r3, r2
 80050bc:	d157      	bne.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 80050be:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80050c2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80050c6:	4619      	mov	r1, r3
 80050c8:	482f      	ldr	r0, [pc, #188]	@ (8005188 <HAL_ADC_ConfigChannel+0x7a8>)
 80050ca:	f7ff f812 	bl	80040f2 <LL_ADC_SetCommonPathInternalCh>
 80050ce:	4b31      	ldr	r3, [pc, #196]	@ (8005194 <HAL_ADC_ConfigChannel+0x7b4>)
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	099b      	lsrs	r3, r3, #6
 80050d4:	4a30      	ldr	r2, [pc, #192]	@ (8005198 <HAL_ADC_ConfigChannel+0x7b8>)
 80050d6:	fba2 2303 	umull	r2, r3, r2, r3
 80050da:	099b      	lsrs	r3, r3, #6
 80050dc:	1c5a      	adds	r2, r3, #1
 80050de:	4613      	mov	r3, r2
 80050e0:	005b      	lsls	r3, r3, #1
 80050e2:	4413      	add	r3, r2
 80050e4:	009b      	lsls	r3, r3, #2
 80050e6:	60bb      	str	r3, [r7, #8]
 80050e8:	e002      	b.n	80050f0 <HAL_ADC_ConfigChannel+0x710>
 80050ea:	68bb      	ldr	r3, [r7, #8]
 80050ec:	3b01      	subs	r3, #1
 80050ee:	60bb      	str	r3, [r7, #8]
 80050f0:	68bb      	ldr	r3, [r7, #8]
 80050f2:	2b00      	cmp	r3, #0
 80050f4:	d1f9      	bne.n	80050ea <HAL_ADC_ConfigChannel+0x70a>
 80050f6:	e03a      	b.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 80050f8:	683b      	ldr	r3, [r7, #0]
 80050fa:	681b      	ldr	r3, [r3, #0]
 80050fc:	4a27      	ldr	r2, [pc, #156]	@ (800519c <HAL_ADC_ConfigChannel+0x7bc>)
 80050fe:	4293      	cmp	r3, r2
 8005100:	d113      	bne.n	800512a <HAL_ADC_ConfigChannel+0x74a>
 8005102:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8005106:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800510a:	2b00      	cmp	r3, #0
 800510c:	d10d      	bne.n	800512a <HAL_ADC_ConfigChannel+0x74a>
 800510e:	687b      	ldr	r3, [r7, #4]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	4a1f      	ldr	r2, [pc, #124]	@ (8005190 <HAL_ADC_ConfigChannel+0x7b0>)
 8005114:	4293      	cmp	r3, r2
 8005116:	d12a      	bne.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 8005118:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800511c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8005120:	4619      	mov	r1, r3
 8005122:	4819      	ldr	r0, [pc, #100]	@ (8005188 <HAL_ADC_ConfigChannel+0x7a8>)
 8005124:	f7fe ffe5 	bl	80040f2 <LL_ADC_SetCommonPathInternalCh>
 8005128:	e021      	b.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 800512a:	683b      	ldr	r3, [r7, #0]
 800512c:	681b      	ldr	r3, [r3, #0]
 800512e:	4a1c      	ldr	r2, [pc, #112]	@ (80051a0 <HAL_ADC_ConfigChannel+0x7c0>)
 8005130:	4293      	cmp	r3, r2
 8005132:	d11c      	bne.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 8005134:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8005138:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800513c:	2b00      	cmp	r3, #0
 800513e:	d116      	bne.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	4a12      	ldr	r2, [pc, #72]	@ (8005190 <HAL_ADC_ConfigChannel+0x7b0>)
 8005146:	4293      	cmp	r3, r2
 8005148:	d111      	bne.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 800514a:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800514e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8005152:	4619      	mov	r1, r3
 8005154:	480c      	ldr	r0, [pc, #48]	@ (8005188 <HAL_ADC_ConfigChannel+0x7a8>)
 8005156:	f7fe ffcc 	bl	80040f2 <LL_ADC_SetCommonPathInternalCh>
 800515a:	e008      	b.n	800516e <HAL_ADC_ConfigChannel+0x78e>
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005160:	f043 0220 	orr.w	r2, r3, #32
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	655a      	str	r2, [r3, #84]	@ 0x54
 8005168:	2301      	movs	r3, #1
 800516a:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	2200      	movs	r2, #0
 8005172:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005176:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 800517a:	4618      	mov	r0, r3
 800517c:	37d8      	adds	r7, #216	@ 0xd8
 800517e:	46bd      	mov	sp, r7
 8005180:	bd80      	pop	{r7, pc}
 8005182:	bf00      	nop
 8005184:	80080000 	.word	0x80080000
 8005188:	50040300 	.word	0x50040300
 800518c:	c7520000 	.word	0xc7520000
 8005190:	50040000 	.word	0x50040000
 8005194:	200000a0 	.word	0x200000a0
 8005198:	053e2d63 	.word	0x053e2d63
 800519c:	cb840000 	.word	0xcb840000
 80051a0:	80000001 	.word	0x80000001

080051a4 <ADC_ConversionStop>:
 80051a4:	b580      	push	{r7, lr}
 80051a6:	b088      	sub	sp, #32
 80051a8:	af00      	add	r7, sp, #0
 80051aa:	6078      	str	r0, [r7, #4]
 80051ac:	6039      	str	r1, [r7, #0]
 80051ae:	2300      	movs	r3, #0
 80051b0:	61fb      	str	r3, [r7, #28]
 80051b2:	683b      	ldr	r3, [r7, #0]
 80051b4:	61bb      	str	r3, [r7, #24]
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	4618      	mov	r0, r3
 80051bc:	f7ff f962 	bl	8004484 <LL_ADC_REG_IsConversionOngoing>
 80051c0:	6138      	str	r0, [r7, #16]
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	4618      	mov	r0, r3
 80051c8:	f7ff f983 	bl	80044d2 <LL_ADC_INJ_IsConversionOngoing>
 80051cc:	60f8      	str	r0, [r7, #12]
 80051ce:	693b      	ldr	r3, [r7, #16]
 80051d0:	2b00      	cmp	r3, #0
 80051d2:	d103      	bne.n	80051dc <ADC_ConversionStop+0x38>
 80051d4:	68fb      	ldr	r3, [r7, #12]
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	f000 8098 	beq.w	800530c <ADC_ConversionStop+0x168>
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	68db      	ldr	r3, [r3, #12]
 80051e2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80051e6:	2b00      	cmp	r3, #0
 80051e8:	d02a      	beq.n	8005240 <ADC_ConversionStop+0x9c>
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	7e5b      	ldrb	r3, [r3, #25]
 80051ee:	2b01      	cmp	r3, #1
 80051f0:	d126      	bne.n	8005240 <ADC_ConversionStop+0x9c>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	7e1b      	ldrb	r3, [r3, #24]
 80051f6:	2b01      	cmp	r3, #1
 80051f8:	d122      	bne.n	8005240 <ADC_ConversionStop+0x9c>
 80051fa:	2301      	movs	r3, #1
 80051fc:	61bb      	str	r3, [r7, #24]
 80051fe:	e014      	b.n	800522a <ADC_ConversionStop+0x86>
 8005200:	69fb      	ldr	r3, [r7, #28]
 8005202:	4a45      	ldr	r2, [pc, #276]	@ (8005318 <ADC_ConversionStop+0x174>)
 8005204:	4293      	cmp	r3, r2
 8005206:	d90d      	bls.n	8005224 <ADC_ConversionStop+0x80>
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800520c:	f043 0210 	orr.w	r2, r3, #16
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	655a      	str	r2, [r3, #84]	@ 0x54
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005218:	f043 0201 	orr.w	r2, r3, #1
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	659a      	str	r2, [r3, #88]	@ 0x58
 8005220:	2301      	movs	r3, #1
 8005222:	e074      	b.n	800530e <ADC_ConversionStop+0x16a>
 8005224:	69fb      	ldr	r3, [r7, #28]
 8005226:	3301      	adds	r3, #1
 8005228:	61fb      	str	r3, [r7, #28]
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005234:	2b40      	cmp	r3, #64	@ 0x40
 8005236:	d1e3      	bne.n	8005200 <ADC_ConversionStop+0x5c>
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	681b      	ldr	r3, [r3, #0]
 800523c:	2240      	movs	r2, #64	@ 0x40
 800523e:	601a      	str	r2, [r3, #0]
 8005240:	69bb      	ldr	r3, [r7, #24]
 8005242:	2b02      	cmp	r3, #2
 8005244:	d014      	beq.n	8005270 <ADC_ConversionStop+0xcc>
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	4618      	mov	r0, r3
 800524c:	f7ff f91a 	bl	8004484 <LL_ADC_REG_IsConversionOngoing>
 8005250:	4603      	mov	r3, r0
 8005252:	2b00      	cmp	r3, #0
 8005254:	d00c      	beq.n	8005270 <ADC_ConversionStop+0xcc>
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	4618      	mov	r0, r3
 800525c:	f7ff f8d7 	bl	800440e <LL_ADC_IsDisableOngoing>
 8005260:	4603      	mov	r3, r0
 8005262:	2b00      	cmp	r3, #0
 8005264:	d104      	bne.n	8005270 <ADC_ConversionStop+0xcc>
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	4618      	mov	r0, r3
 800526c:	f7ff f8f6 	bl	800445c <LL_ADC_REG_StopConversion>
 8005270:	69bb      	ldr	r3, [r7, #24]
 8005272:	2b01      	cmp	r3, #1
 8005274:	d014      	beq.n	80052a0 <ADC_ConversionStop+0xfc>
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	4618      	mov	r0, r3
 800527c:	f7ff f929 	bl	80044d2 <LL_ADC_INJ_IsConversionOngoing>
 8005280:	4603      	mov	r3, r0
 8005282:	2b00      	cmp	r3, #0
 8005284:	d00c      	beq.n	80052a0 <ADC_ConversionStop+0xfc>
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	4618      	mov	r0, r3
 800528c:	f7ff f8bf 	bl	800440e <LL_ADC_IsDisableOngoing>
 8005290:	4603      	mov	r3, r0
 8005292:	2b00      	cmp	r3, #0
 8005294:	d104      	bne.n	80052a0 <ADC_ConversionStop+0xfc>
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	4618      	mov	r0, r3
 800529c:	f7ff f905 	bl	80044aa <LL_ADC_INJ_StopConversion>
 80052a0:	69bb      	ldr	r3, [r7, #24]
 80052a2:	2b02      	cmp	r3, #2
 80052a4:	d005      	beq.n	80052b2 <ADC_ConversionStop+0x10e>
 80052a6:	69bb      	ldr	r3, [r7, #24]
 80052a8:	2b03      	cmp	r3, #3
 80052aa:	d105      	bne.n	80052b8 <ADC_ConversionStop+0x114>
 80052ac:	230c      	movs	r3, #12
 80052ae:	617b      	str	r3, [r7, #20]
 80052b0:	e005      	b.n	80052be <ADC_ConversionStop+0x11a>
 80052b2:	2308      	movs	r3, #8
 80052b4:	617b      	str	r3, [r7, #20]
 80052b6:	e002      	b.n	80052be <ADC_ConversionStop+0x11a>
 80052b8:	2304      	movs	r3, #4
 80052ba:	617b      	str	r3, [r7, #20]
 80052bc:	bf00      	nop
 80052be:	f7fe fed5 	bl	800406c <HAL_GetTick>
 80052c2:	60b8      	str	r0, [r7, #8]
 80052c4:	e01b      	b.n	80052fe <ADC_ConversionStop+0x15a>
 80052c6:	f7fe fed1 	bl	800406c <HAL_GetTick>
 80052ca:	4602      	mov	r2, r0
 80052cc:	68bb      	ldr	r3, [r7, #8]
 80052ce:	1ad3      	subs	r3, r2, r3
 80052d0:	2b05      	cmp	r3, #5
 80052d2:	d914      	bls.n	80052fe <ADC_ConversionStop+0x15a>
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	689a      	ldr	r2, [r3, #8]
 80052da:	697b      	ldr	r3, [r7, #20]
 80052dc:	4013      	ands	r3, r2
 80052de:	2b00      	cmp	r3, #0
 80052e0:	d00d      	beq.n	80052fe <ADC_ConversionStop+0x15a>
 80052e2:	687b      	ldr	r3, [r7, #4]
 80052e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80052e6:	f043 0210 	orr.w	r2, r3, #16
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	655a      	str	r2, [r3, #84]	@ 0x54
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80052f2:	f043 0201 	orr.w	r2, r3, #1
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	659a      	str	r2, [r3, #88]	@ 0x58
 80052fa:	2301      	movs	r3, #1
 80052fc:	e007      	b.n	800530e <ADC_ConversionStop+0x16a>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	689a      	ldr	r2, [r3, #8]
 8005304:	697b      	ldr	r3, [r7, #20]
 8005306:	4013      	ands	r3, r2
 8005308:	2b00      	cmp	r3, #0
 800530a:	d1dc      	bne.n	80052c6 <ADC_ConversionStop+0x122>
 800530c:	2300      	movs	r3, #0
 800530e:	4618      	mov	r0, r3
 8005310:	3720      	adds	r7, #32
 8005312:	46bd      	mov	sp, r7
 8005314:	bd80      	pop	{r7, pc}
 8005316:	bf00      	nop
 8005318:	a33fffff 	.word	0xa33fffff

0800531c <ADC_Enable>:
 800531c:	b580      	push	{r7, lr}
 800531e:	b084      	sub	sp, #16
 8005320:	af00      	add	r7, sp, #0
 8005322:	6078      	str	r0, [r7, #4]
 8005324:	2300      	movs	r3, #0
 8005326:	60bb      	str	r3, [r7, #8]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	4618      	mov	r0, r3
 800532e:	f7ff f85b 	bl	80043e8 <LL_ADC_IsEnabled>
 8005332:	4603      	mov	r3, r0
 8005334:	2b00      	cmp	r3, #0
 8005336:	d169      	bne.n	800540c <ADC_Enable+0xf0>
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	689a      	ldr	r2, [r3, #8]
 800533e:	4b36      	ldr	r3, [pc, #216]	@ (8005418 <ADC_Enable+0xfc>)
 8005340:	4013      	ands	r3, r2
 8005342:	2b00      	cmp	r3, #0
 8005344:	d00d      	beq.n	8005362 <ADC_Enable+0x46>
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800534a:	f043 0210 	orr.w	r2, r3, #16
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	655a      	str	r2, [r3, #84]	@ 0x54
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005356:	f043 0201 	orr.w	r2, r3, #1
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	659a      	str	r2, [r3, #88]	@ 0x58
 800535e:	2301      	movs	r3, #1
 8005360:	e055      	b.n	800540e <ADC_Enable+0xf2>
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	4618      	mov	r0, r3
 8005368:	f7ff f816 	bl	8004398 <LL_ADC_Enable>
 800536c:	482b      	ldr	r0, [pc, #172]	@ (800541c <ADC_Enable+0x100>)
 800536e:	f7fe fed3 	bl	8004118 <LL_ADC_GetCommonPathInternalCh>
 8005372:	4603      	mov	r3, r0
 8005374:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8005378:	2b00      	cmp	r3, #0
 800537a:	d013      	beq.n	80053a4 <ADC_Enable+0x88>
 800537c:	4b28      	ldr	r3, [pc, #160]	@ (8005420 <ADC_Enable+0x104>)
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	099b      	lsrs	r3, r3, #6
 8005382:	4a28      	ldr	r2, [pc, #160]	@ (8005424 <ADC_Enable+0x108>)
 8005384:	fba2 2303 	umull	r2, r3, r2, r3
 8005388:	099b      	lsrs	r3, r3, #6
 800538a:	1c5a      	adds	r2, r3, #1
 800538c:	4613      	mov	r3, r2
 800538e:	005b      	lsls	r3, r3, #1
 8005390:	4413      	add	r3, r2
 8005392:	009b      	lsls	r3, r3, #2
 8005394:	60bb      	str	r3, [r7, #8]
 8005396:	e002      	b.n	800539e <ADC_Enable+0x82>
 8005398:	68bb      	ldr	r3, [r7, #8]
 800539a:	3b01      	subs	r3, #1
 800539c:	60bb      	str	r3, [r7, #8]
 800539e:	68bb      	ldr	r3, [r7, #8]
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d1f9      	bne.n	8005398 <ADC_Enable+0x7c>
 80053a4:	f7fe fe62 	bl	800406c <HAL_GetTick>
 80053a8:	60f8      	str	r0, [r7, #12]
 80053aa:	e028      	b.n	80053fe <ADC_Enable+0xe2>
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	4618      	mov	r0, r3
 80053b2:	f7ff f819 	bl	80043e8 <LL_ADC_IsEnabled>
 80053b6:	4603      	mov	r3, r0
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d104      	bne.n	80053c6 <ADC_Enable+0xaa>
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	681b      	ldr	r3, [r3, #0]
 80053c0:	4618      	mov	r0, r3
 80053c2:	f7fe ffe9 	bl	8004398 <LL_ADC_Enable>
 80053c6:	f7fe fe51 	bl	800406c <HAL_GetTick>
 80053ca:	4602      	mov	r2, r0
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	1ad3      	subs	r3, r2, r3
 80053d0:	2b02      	cmp	r3, #2
 80053d2:	d914      	bls.n	80053fe <ADC_Enable+0xe2>
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	f003 0301 	and.w	r3, r3, #1
 80053de:	2b01      	cmp	r3, #1
 80053e0:	d00d      	beq.n	80053fe <ADC_Enable+0xe2>
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80053e6:	f043 0210 	orr.w	r2, r3, #16
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	655a      	str	r2, [r3, #84]	@ 0x54
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80053f2:	f043 0201 	orr.w	r2, r3, #1
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	659a      	str	r2, [r3, #88]	@ 0x58
 80053fa:	2301      	movs	r3, #1
 80053fc:	e007      	b.n	800540e <ADC_Enable+0xf2>
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	f003 0301 	and.w	r3, r3, #1
 8005408:	2b01      	cmp	r3, #1
 800540a:	d1cf      	bne.n	80053ac <ADC_Enable+0x90>
 800540c:	2300      	movs	r3, #0
 800540e:	4618      	mov	r0, r3
 8005410:	3710      	adds	r7, #16
 8005412:	46bd      	mov	sp, r7
 8005414:	bd80      	pop	{r7, pc}
 8005416:	bf00      	nop
 8005418:	8000003f 	.word	0x8000003f
 800541c:	50040300 	.word	0x50040300
 8005420:	200000a0 	.word	0x200000a0
 8005424:	053e2d63 	.word	0x053e2d63

08005428 <ADC_Disable>:
 8005428:	b580      	push	{r7, lr}
 800542a:	b084      	sub	sp, #16
 800542c:	af00      	add	r7, sp, #0
 800542e:	6078      	str	r0, [r7, #4]
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	4618      	mov	r0, r3
 8005436:	f7fe ffea 	bl	800440e <LL_ADC_IsDisableOngoing>
 800543a:	60f8      	str	r0, [r7, #12]
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	4618      	mov	r0, r3
 8005442:	f7fe ffd1 	bl	80043e8 <LL_ADC_IsEnabled>
 8005446:	4603      	mov	r3, r0
 8005448:	2b00      	cmp	r3, #0
 800544a:	d047      	beq.n	80054dc <ADC_Disable+0xb4>
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	2b00      	cmp	r3, #0
 8005450:	d144      	bne.n	80054dc <ADC_Disable+0xb4>
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	689b      	ldr	r3, [r3, #8]
 8005458:	f003 030d 	and.w	r3, r3, #13
 800545c:	2b01      	cmp	r3, #1
 800545e:	d10c      	bne.n	800547a <ADC_Disable+0x52>
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	4618      	mov	r0, r3
 8005466:	f7fe ffab 	bl	80043c0 <LL_ADC_Disable>
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	681b      	ldr	r3, [r3, #0]
 800546e:	2203      	movs	r2, #3
 8005470:	601a      	str	r2, [r3, #0]
 8005472:	f7fe fdfb 	bl	800406c <HAL_GetTick>
 8005476:	60b8      	str	r0, [r7, #8]
 8005478:	e029      	b.n	80054ce <ADC_Disable+0xa6>
 800547a:	687b      	ldr	r3, [r7, #4]
 800547c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800547e:	f043 0210 	orr.w	r2, r3, #16
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	655a      	str	r2, [r3, #84]	@ 0x54
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800548a:	f043 0201 	orr.w	r2, r3, #1
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	659a      	str	r2, [r3, #88]	@ 0x58
 8005492:	2301      	movs	r3, #1
 8005494:	e023      	b.n	80054de <ADC_Disable+0xb6>
 8005496:	f7fe fde9 	bl	800406c <HAL_GetTick>
 800549a:	4602      	mov	r2, r0
 800549c:	68bb      	ldr	r3, [r7, #8]
 800549e:	1ad3      	subs	r3, r2, r3
 80054a0:	2b02      	cmp	r3, #2
 80054a2:	d914      	bls.n	80054ce <ADC_Disable+0xa6>
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	689b      	ldr	r3, [r3, #8]
 80054aa:	f003 0301 	and.w	r3, r3, #1
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d00d      	beq.n	80054ce <ADC_Disable+0xa6>
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80054b6:	f043 0210 	orr.w	r2, r3, #16
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	655a      	str	r2, [r3, #84]	@ 0x54
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80054c2:	f043 0201 	orr.w	r2, r3, #1
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	659a      	str	r2, [r3, #88]	@ 0x58
 80054ca:	2301      	movs	r3, #1
 80054cc:	e007      	b.n	80054de <ADC_Disable+0xb6>
 80054ce:	687b      	ldr	r3, [r7, #4]
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	689b      	ldr	r3, [r3, #8]
 80054d4:	f003 0301 	and.w	r3, r3, #1
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d1dc      	bne.n	8005496 <ADC_Disable+0x6e>
 80054dc:	2300      	movs	r3, #0
 80054de:	4618      	mov	r0, r3
 80054e0:	3710      	adds	r7, #16
 80054e2:	46bd      	mov	sp, r7
 80054e4:	bd80      	pop	{r7, pc}

080054e6 <LL_ADC_StartCalibration>:
 80054e6:	b480      	push	{r7}
 80054e8:	b083      	sub	sp, #12
 80054ea:	af00      	add	r7, sp, #0
 80054ec:	6078      	str	r0, [r7, #4]
 80054ee:	6039      	str	r1, [r7, #0]
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	689b      	ldr	r3, [r3, #8]
 80054f4:	f023 4340 	bic.w	r3, r3, #3221225472	@ 0xc0000000
 80054f8:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80054fc:	683a      	ldr	r2, [r7, #0]
 80054fe:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8005502:	4313      	orrs	r3, r2
 8005504:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	609a      	str	r2, [r3, #8]
 800550c:	bf00      	nop
 800550e:	370c      	adds	r7, #12
 8005510:	46bd      	mov	sp, r7
 8005512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005516:	4770      	bx	lr

08005518 <LL_ADC_IsCalibrationOnGoing>:
 8005518:	b480      	push	{r7}
 800551a:	b083      	sub	sp, #12
 800551c:	af00      	add	r7, sp, #0
 800551e:	6078      	str	r0, [r7, #4]
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	689b      	ldr	r3, [r3, #8]
 8005524:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8005528:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800552c:	d101      	bne.n	8005532 <LL_ADC_IsCalibrationOnGoing+0x1a>
 800552e:	2301      	movs	r3, #1
 8005530:	e000      	b.n	8005534 <LL_ADC_IsCalibrationOnGoing+0x1c>
 8005532:	2300      	movs	r3, #0
 8005534:	4618      	mov	r0, r3
 8005536:	370c      	adds	r7, #12
 8005538:	46bd      	mov	sp, r7
 800553a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800553e:	4770      	bx	lr

08005540 <HAL_ADCEx_Calibration_Start>:
 8005540:	b580      	push	{r7, lr}
 8005542:	b084      	sub	sp, #16
 8005544:	af00      	add	r7, sp, #0
 8005546:	6078      	str	r0, [r7, #4]
 8005548:	6039      	str	r1, [r7, #0]
 800554a:	2300      	movs	r3, #0
 800554c:	60bb      	str	r3, [r7, #8]
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005554:	2b01      	cmp	r3, #1
 8005556:	d101      	bne.n	800555c <HAL_ADCEx_Calibration_Start+0x1c>
 8005558:	2302      	movs	r3, #2
 800555a:	e04d      	b.n	80055f8 <HAL_ADCEx_Calibration_Start+0xb8>
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	2201      	movs	r2, #1
 8005560:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005564:	6878      	ldr	r0, [r7, #4]
 8005566:	f7ff ff5f 	bl	8005428 <ADC_Disable>
 800556a:	4603      	mov	r3, r0
 800556c:	73fb      	strb	r3, [r7, #15]
 800556e:	7bfb      	ldrb	r3, [r7, #15]
 8005570:	2b00      	cmp	r3, #0
 8005572:	d136      	bne.n	80055e2 <HAL_ADCEx_Calibration_Start+0xa2>
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005578:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800557c:	f023 0302 	bic.w	r3, r3, #2
 8005580:	f043 0202 	orr.w	r2, r3, #2
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	655a      	str	r2, [r3, #84]	@ 0x54
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	6839      	ldr	r1, [r7, #0]
 800558e:	4618      	mov	r0, r3
 8005590:	f7ff ffa9 	bl	80054e6 <LL_ADC_StartCalibration>
 8005594:	e014      	b.n	80055c0 <HAL_ADCEx_Calibration_Start+0x80>
 8005596:	68bb      	ldr	r3, [r7, #8]
 8005598:	3301      	adds	r3, #1
 800559a:	60bb      	str	r3, [r7, #8]
 800559c:	68bb      	ldr	r3, [r7, #8]
 800559e:	f5b3 2f91 	cmp.w	r3, #296960	@ 0x48800
 80055a2:	d30d      	bcc.n	80055c0 <HAL_ADCEx_Calibration_Start+0x80>
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80055a8:	f023 0312 	bic.w	r3, r3, #18
 80055ac:	f043 0210 	orr.w	r2, r3, #16
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	655a      	str	r2, [r3, #84]	@ 0x54
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	2200      	movs	r2, #0
 80055b8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80055bc:	2301      	movs	r3, #1
 80055be:	e01b      	b.n	80055f8 <HAL_ADCEx_Calibration_Start+0xb8>
 80055c0:	687b      	ldr	r3, [r7, #4]
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	4618      	mov	r0, r3
 80055c6:	f7ff ffa7 	bl	8005518 <LL_ADC_IsCalibrationOnGoing>
 80055ca:	4603      	mov	r3, r0
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d1e2      	bne.n	8005596 <HAL_ADCEx_Calibration_Start+0x56>
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80055d4:	f023 0303 	bic.w	r3, r3, #3
 80055d8:	f043 0201 	orr.w	r2, r3, #1
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	655a      	str	r2, [r3, #84]	@ 0x54
 80055e0:	e005      	b.n	80055ee <HAL_ADCEx_Calibration_Start+0xae>
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80055e6:	f043 0210 	orr.w	r2, r3, #16
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	655a      	str	r2, [r3, #84]	@ 0x54
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	2200      	movs	r2, #0
 80055f2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80055f6:	7bfb      	ldrb	r3, [r7, #15]
 80055f8:	4618      	mov	r0, r3
 80055fa:	3710      	adds	r7, #16
 80055fc:	46bd      	mov	sp, r7
 80055fe:	bd80      	pop	{r7, pc}

08005600 <__NVIC_SetPriorityGrouping>:
 8005600:	b480      	push	{r7}
 8005602:	b085      	sub	sp, #20
 8005604:	af00      	add	r7, sp, #0
 8005606:	6078      	str	r0, [r7, #4]
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	f003 0307 	and.w	r3, r3, #7
 800560e:	60fb      	str	r3, [r7, #12]
 8005610:	4b0c      	ldr	r3, [pc, #48]	@ (8005644 <__NVIC_SetPriorityGrouping+0x44>)
 8005612:	68db      	ldr	r3, [r3, #12]
 8005614:	60bb      	str	r3, [r7, #8]
 8005616:	68ba      	ldr	r2, [r7, #8]
 8005618:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800561c:	4013      	ands	r3, r2
 800561e:	60bb      	str	r3, [r7, #8]
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	021a      	lsls	r2, r3, #8
 8005624:	68bb      	ldr	r3, [r7, #8]
 8005626:	4313      	orrs	r3, r2
 8005628:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800562c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005630:	60bb      	str	r3, [r7, #8]
 8005632:	4a04      	ldr	r2, [pc, #16]	@ (8005644 <__NVIC_SetPriorityGrouping+0x44>)
 8005634:	68bb      	ldr	r3, [r7, #8]
 8005636:	60d3      	str	r3, [r2, #12]
 8005638:	bf00      	nop
 800563a:	3714      	adds	r7, #20
 800563c:	46bd      	mov	sp, r7
 800563e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005642:	4770      	bx	lr
 8005644:	e000ed00 	.word	0xe000ed00

08005648 <__NVIC_GetPriorityGrouping>:
 8005648:	b480      	push	{r7}
 800564a:	af00      	add	r7, sp, #0
 800564c:	4b04      	ldr	r3, [pc, #16]	@ (8005660 <__NVIC_GetPriorityGrouping+0x18>)
 800564e:	68db      	ldr	r3, [r3, #12]
 8005650:	0a1b      	lsrs	r3, r3, #8
 8005652:	f003 0307 	and.w	r3, r3, #7
 8005656:	4618      	mov	r0, r3
 8005658:	46bd      	mov	sp, r7
 800565a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800565e:	4770      	bx	lr
 8005660:	e000ed00 	.word	0xe000ed00

08005664 <__NVIC_EnableIRQ>:
 8005664:	b480      	push	{r7}
 8005666:	b083      	sub	sp, #12
 8005668:	af00      	add	r7, sp, #0
 800566a:	4603      	mov	r3, r0
 800566c:	71fb      	strb	r3, [r7, #7]
 800566e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005672:	2b00      	cmp	r3, #0
 8005674:	db0b      	blt.n	800568e <__NVIC_EnableIRQ+0x2a>
 8005676:	79fb      	ldrb	r3, [r7, #7]
 8005678:	f003 021f 	and.w	r2, r3, #31
 800567c:	4907      	ldr	r1, [pc, #28]	@ (800569c <__NVIC_EnableIRQ+0x38>)
 800567e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005682:	095b      	lsrs	r3, r3, #5
 8005684:	2001      	movs	r0, #1
 8005686:	fa00 f202 	lsl.w	r2, r0, r2
 800568a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800568e:	bf00      	nop
 8005690:	370c      	adds	r7, #12
 8005692:	46bd      	mov	sp, r7
 8005694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005698:	4770      	bx	lr
 800569a:	bf00      	nop
 800569c:	e000e100 	.word	0xe000e100

080056a0 <__NVIC_SetPriority>:
 80056a0:	b480      	push	{r7}
 80056a2:	b083      	sub	sp, #12
 80056a4:	af00      	add	r7, sp, #0
 80056a6:	4603      	mov	r3, r0
 80056a8:	6039      	str	r1, [r7, #0]
 80056aa:	71fb      	strb	r3, [r7, #7]
 80056ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	db0a      	blt.n	80056ca <__NVIC_SetPriority+0x2a>
 80056b4:	683b      	ldr	r3, [r7, #0]
 80056b6:	b2da      	uxtb	r2, r3
 80056b8:	490c      	ldr	r1, [pc, #48]	@ (80056ec <__NVIC_SetPriority+0x4c>)
 80056ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80056be:	0112      	lsls	r2, r2, #4
 80056c0:	b2d2      	uxtb	r2, r2
 80056c2:	440b      	add	r3, r1
 80056c4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80056c8:	e00a      	b.n	80056e0 <__NVIC_SetPriority+0x40>
 80056ca:	683b      	ldr	r3, [r7, #0]
 80056cc:	b2da      	uxtb	r2, r3
 80056ce:	4908      	ldr	r1, [pc, #32]	@ (80056f0 <__NVIC_SetPriority+0x50>)
 80056d0:	79fb      	ldrb	r3, [r7, #7]
 80056d2:	f003 030f 	and.w	r3, r3, #15
 80056d6:	3b04      	subs	r3, #4
 80056d8:	0112      	lsls	r2, r2, #4
 80056da:	b2d2      	uxtb	r2, r2
 80056dc:	440b      	add	r3, r1
 80056de:	761a      	strb	r2, [r3, #24]
 80056e0:	bf00      	nop
 80056e2:	370c      	adds	r7, #12
 80056e4:	46bd      	mov	sp, r7
 80056e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056ea:	4770      	bx	lr
 80056ec:	e000e100 	.word	0xe000e100
 80056f0:	e000ed00 	.word	0xe000ed00

080056f4 <NVIC_EncodePriority>:
 80056f4:	b480      	push	{r7}
 80056f6:	b089      	sub	sp, #36	@ 0x24
 80056f8:	af00      	add	r7, sp, #0
 80056fa:	60f8      	str	r0, [r7, #12]
 80056fc:	60b9      	str	r1, [r7, #8]
 80056fe:	607a      	str	r2, [r7, #4]
 8005700:	68fb      	ldr	r3, [r7, #12]
 8005702:	f003 0307 	and.w	r3, r3, #7
 8005706:	61fb      	str	r3, [r7, #28]
 8005708:	69fb      	ldr	r3, [r7, #28]
 800570a:	f1c3 0307 	rsb	r3, r3, #7
 800570e:	2b04      	cmp	r3, #4
 8005710:	bf28      	it	cs
 8005712:	2304      	movcs	r3, #4
 8005714:	61bb      	str	r3, [r7, #24]
 8005716:	69fb      	ldr	r3, [r7, #28]
 8005718:	3304      	adds	r3, #4
 800571a:	2b06      	cmp	r3, #6
 800571c:	d902      	bls.n	8005724 <NVIC_EncodePriority+0x30>
 800571e:	69fb      	ldr	r3, [r7, #28]
 8005720:	3b03      	subs	r3, #3
 8005722:	e000      	b.n	8005726 <NVIC_EncodePriority+0x32>
 8005724:	2300      	movs	r3, #0
 8005726:	617b      	str	r3, [r7, #20]
 8005728:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800572c:	69bb      	ldr	r3, [r7, #24]
 800572e:	fa02 f303 	lsl.w	r3, r2, r3
 8005732:	43da      	mvns	r2, r3
 8005734:	68bb      	ldr	r3, [r7, #8]
 8005736:	401a      	ands	r2, r3
 8005738:	697b      	ldr	r3, [r7, #20]
 800573a:	409a      	lsls	r2, r3
 800573c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8005740:	697b      	ldr	r3, [r7, #20]
 8005742:	fa01 f303 	lsl.w	r3, r1, r3
 8005746:	43d9      	mvns	r1, r3
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	400b      	ands	r3, r1
 800574c:	4313      	orrs	r3, r2
 800574e:	4618      	mov	r0, r3
 8005750:	3724      	adds	r7, #36	@ 0x24
 8005752:	46bd      	mov	sp, r7
 8005754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005758:	4770      	bx	lr
	...

0800575c <SysTick_Config>:
 800575c:	b580      	push	{r7, lr}
 800575e:	b082      	sub	sp, #8
 8005760:	af00      	add	r7, sp, #0
 8005762:	6078      	str	r0, [r7, #4]
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	3b01      	subs	r3, #1
 8005768:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800576c:	d301      	bcc.n	8005772 <SysTick_Config+0x16>
 800576e:	2301      	movs	r3, #1
 8005770:	e00f      	b.n	8005792 <SysTick_Config+0x36>
 8005772:	4a0a      	ldr	r2, [pc, #40]	@ (800579c <SysTick_Config+0x40>)
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	3b01      	subs	r3, #1
 8005778:	6053      	str	r3, [r2, #4]
 800577a:	210f      	movs	r1, #15
 800577c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005780:	f7ff ff8e 	bl	80056a0 <__NVIC_SetPriority>
 8005784:	4b05      	ldr	r3, [pc, #20]	@ (800579c <SysTick_Config+0x40>)
 8005786:	2200      	movs	r2, #0
 8005788:	609a      	str	r2, [r3, #8]
 800578a:	4b04      	ldr	r3, [pc, #16]	@ (800579c <SysTick_Config+0x40>)
 800578c:	2207      	movs	r2, #7
 800578e:	601a      	str	r2, [r3, #0]
 8005790:	2300      	movs	r3, #0
 8005792:	4618      	mov	r0, r3
 8005794:	3708      	adds	r7, #8
 8005796:	46bd      	mov	sp, r7
 8005798:	bd80      	pop	{r7, pc}
 800579a:	bf00      	nop
 800579c:	e000e010 	.word	0xe000e010

080057a0 <HAL_NVIC_SetPriorityGrouping>:
 80057a0:	b580      	push	{r7, lr}
 80057a2:	b082      	sub	sp, #8
 80057a4:	af00      	add	r7, sp, #0
 80057a6:	6078      	str	r0, [r7, #4]
 80057a8:	6878      	ldr	r0, [r7, #4]
 80057aa:	f7ff ff29 	bl	8005600 <__NVIC_SetPriorityGrouping>
 80057ae:	bf00      	nop
 80057b0:	3708      	adds	r7, #8
 80057b2:	46bd      	mov	sp, r7
 80057b4:	bd80      	pop	{r7, pc}

080057b6 <HAL_NVIC_SetPriority>:
 80057b6:	b580      	push	{r7, lr}
 80057b8:	b086      	sub	sp, #24
 80057ba:	af00      	add	r7, sp, #0
 80057bc:	4603      	mov	r3, r0
 80057be:	60b9      	str	r1, [r7, #8]
 80057c0:	607a      	str	r2, [r7, #4]
 80057c2:	73fb      	strb	r3, [r7, #15]
 80057c4:	2300      	movs	r3, #0
 80057c6:	617b      	str	r3, [r7, #20]
 80057c8:	f7ff ff3e 	bl	8005648 <__NVIC_GetPriorityGrouping>
 80057cc:	6178      	str	r0, [r7, #20]
 80057ce:	687a      	ldr	r2, [r7, #4]
 80057d0:	68b9      	ldr	r1, [r7, #8]
 80057d2:	6978      	ldr	r0, [r7, #20]
 80057d4:	f7ff ff8e 	bl	80056f4 <NVIC_EncodePriority>
 80057d8:	4602      	mov	r2, r0
 80057da:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80057de:	4611      	mov	r1, r2
 80057e0:	4618      	mov	r0, r3
 80057e2:	f7ff ff5d 	bl	80056a0 <__NVIC_SetPriority>
 80057e6:	bf00      	nop
 80057e8:	3718      	adds	r7, #24
 80057ea:	46bd      	mov	sp, r7
 80057ec:	bd80      	pop	{r7, pc}

080057ee <HAL_NVIC_EnableIRQ>:
 80057ee:	b580      	push	{r7, lr}
 80057f0:	b082      	sub	sp, #8
 80057f2:	af00      	add	r7, sp, #0
 80057f4:	4603      	mov	r3, r0
 80057f6:	71fb      	strb	r3, [r7, #7]
 80057f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80057fc:	4618      	mov	r0, r3
 80057fe:	f7ff ff31 	bl	8005664 <__NVIC_EnableIRQ>
 8005802:	bf00      	nop
 8005804:	3708      	adds	r7, #8
 8005806:	46bd      	mov	sp, r7
 8005808:	bd80      	pop	{r7, pc}

0800580a <HAL_SYSTICK_Config>:
 800580a:	b580      	push	{r7, lr}
 800580c:	b082      	sub	sp, #8
 800580e:	af00      	add	r7, sp, #0
 8005810:	6078      	str	r0, [r7, #4]
 8005812:	6878      	ldr	r0, [r7, #4]
 8005814:	f7ff ffa2 	bl	800575c <SysTick_Config>
 8005818:	4603      	mov	r3, r0
 800581a:	4618      	mov	r0, r3
 800581c:	3708      	adds	r7, #8
 800581e:	46bd      	mov	sp, r7
 8005820:	bd80      	pop	{r7, pc}
	...

08005824 <HAL_DMA_Init>:
 8005824:	b480      	push	{r7}
 8005826:	b085      	sub	sp, #20
 8005828:	af00      	add	r7, sp, #0
 800582a:	6078      	str	r0, [r7, #4]
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	2b00      	cmp	r3, #0
 8005830:	d101      	bne.n	8005836 <HAL_DMA_Init+0x12>
 8005832:	2301      	movs	r3, #1
 8005834:	e098      	b.n	8005968 <HAL_DMA_Init+0x144>
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	461a      	mov	r2, r3
 800583c:	4b4d      	ldr	r3, [pc, #308]	@ (8005974 <HAL_DMA_Init+0x150>)
 800583e:	429a      	cmp	r2, r3
 8005840:	d80f      	bhi.n	8005862 <HAL_DMA_Init+0x3e>
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	461a      	mov	r2, r3
 8005848:	4b4b      	ldr	r3, [pc, #300]	@ (8005978 <HAL_DMA_Init+0x154>)
 800584a:	4413      	add	r3, r2
 800584c:	4a4b      	ldr	r2, [pc, #300]	@ (800597c <HAL_DMA_Init+0x158>)
 800584e:	fba2 2303 	umull	r2, r3, r2, r3
 8005852:	091b      	lsrs	r3, r3, #4
 8005854:	009a      	lsls	r2, r3, #2
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	645a      	str	r2, [r3, #68]	@ 0x44
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	4a48      	ldr	r2, [pc, #288]	@ (8005980 <HAL_DMA_Init+0x15c>)
 800585e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005860:	e00e      	b.n	8005880 <HAL_DMA_Init+0x5c>
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	461a      	mov	r2, r3
 8005868:	4b46      	ldr	r3, [pc, #280]	@ (8005984 <HAL_DMA_Init+0x160>)
 800586a:	4413      	add	r3, r2
 800586c:	4a43      	ldr	r2, [pc, #268]	@ (800597c <HAL_DMA_Init+0x158>)
 800586e:	fba2 2303 	umull	r2, r3, r2, r3
 8005872:	091b      	lsrs	r3, r3, #4
 8005874:	009a      	lsls	r2, r3, #2
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	645a      	str	r2, [r3, #68]	@ 0x44
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	4a42      	ldr	r2, [pc, #264]	@ (8005988 <HAL_DMA_Init+0x164>)
 800587e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	2202      	movs	r2, #2
 8005884:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	60fb      	str	r3, [r7, #12]
 8005890:	68fb      	ldr	r3, [r7, #12]
 8005892:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 8005896:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800589a:	60fb      	str	r3, [r7, #12]
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	689a      	ldr	r2, [r3, #8]
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	68db      	ldr	r3, [r3, #12]
 80058a4:	431a      	orrs	r2, r3
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	691b      	ldr	r3, [r3, #16]
 80058aa:	431a      	orrs	r2, r3
 80058ac:	687b      	ldr	r3, [r7, #4]
 80058ae:	695b      	ldr	r3, [r3, #20]
 80058b0:	431a      	orrs	r2, r3
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	699b      	ldr	r3, [r3, #24]
 80058b6:	431a      	orrs	r2, r3
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	69db      	ldr	r3, [r3, #28]
 80058bc:	431a      	orrs	r2, r3
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	6a1b      	ldr	r3, [r3, #32]
 80058c2:	4313      	orrs	r3, r2
 80058c4:	68fa      	ldr	r2, [r7, #12]
 80058c6:	4313      	orrs	r3, r2
 80058c8:	60fb      	str	r3, [r7, #12]
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	68fa      	ldr	r2, [r7, #12]
 80058d0:	601a      	str	r2, [r3, #0]
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	689b      	ldr	r3, [r3, #8]
 80058d6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80058da:	d039      	beq.n	8005950 <HAL_DMA_Init+0x12c>
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80058e0:	4a27      	ldr	r2, [pc, #156]	@ (8005980 <HAL_DMA_Init+0x15c>)
 80058e2:	4293      	cmp	r3, r2
 80058e4:	d11a      	bne.n	800591c <HAL_DMA_Init+0xf8>
 80058e6:	4b29      	ldr	r3, [pc, #164]	@ (800598c <HAL_DMA_Init+0x168>)
 80058e8:	681a      	ldr	r2, [r3, #0]
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80058ee:	f003 031c 	and.w	r3, r3, #28
 80058f2:	210f      	movs	r1, #15
 80058f4:	fa01 f303 	lsl.w	r3, r1, r3
 80058f8:	43db      	mvns	r3, r3
 80058fa:	4924      	ldr	r1, [pc, #144]	@ (800598c <HAL_DMA_Init+0x168>)
 80058fc:	4013      	ands	r3, r2
 80058fe:	600b      	str	r3, [r1, #0]
 8005900:	4b22      	ldr	r3, [pc, #136]	@ (800598c <HAL_DMA_Init+0x168>)
 8005902:	681a      	ldr	r2, [r3, #0]
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	6859      	ldr	r1, [r3, #4]
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800590c:	f003 031c 	and.w	r3, r3, #28
 8005910:	fa01 f303 	lsl.w	r3, r1, r3
 8005914:	491d      	ldr	r1, [pc, #116]	@ (800598c <HAL_DMA_Init+0x168>)
 8005916:	4313      	orrs	r3, r2
 8005918:	600b      	str	r3, [r1, #0]
 800591a:	e019      	b.n	8005950 <HAL_DMA_Init+0x12c>
 800591c:	4b1c      	ldr	r3, [pc, #112]	@ (8005990 <HAL_DMA_Init+0x16c>)
 800591e:	681a      	ldr	r2, [r3, #0]
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005924:	f003 031c 	and.w	r3, r3, #28
 8005928:	210f      	movs	r1, #15
 800592a:	fa01 f303 	lsl.w	r3, r1, r3
 800592e:	43db      	mvns	r3, r3
 8005930:	4917      	ldr	r1, [pc, #92]	@ (8005990 <HAL_DMA_Init+0x16c>)
 8005932:	4013      	ands	r3, r2
 8005934:	600b      	str	r3, [r1, #0]
 8005936:	4b16      	ldr	r3, [pc, #88]	@ (8005990 <HAL_DMA_Init+0x16c>)
 8005938:	681a      	ldr	r2, [r3, #0]
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	6859      	ldr	r1, [r3, #4]
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005942:	f003 031c 	and.w	r3, r3, #28
 8005946:	fa01 f303 	lsl.w	r3, r1, r3
 800594a:	4911      	ldr	r1, [pc, #68]	@ (8005990 <HAL_DMA_Init+0x16c>)
 800594c:	4313      	orrs	r3, r2
 800594e:	600b      	str	r3, [r1, #0]
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	2200      	movs	r2, #0
 8005954:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	2201      	movs	r2, #1
 800595a:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	2200      	movs	r2, #0
 8005962:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005966:	2300      	movs	r3, #0
 8005968:	4618      	mov	r0, r3
 800596a:	3714      	adds	r7, #20
 800596c:	46bd      	mov	sp, r7
 800596e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005972:	4770      	bx	lr
 8005974:	40020407 	.word	0x40020407
 8005978:	bffdfff8 	.word	0xbffdfff8
 800597c:	cccccccd 	.word	0xcccccccd
 8005980:	40020000 	.word	0x40020000
 8005984:	bffdfbf8 	.word	0xbffdfbf8
 8005988:	40020400 	.word	0x40020400
 800598c:	400200a8 	.word	0x400200a8
 8005990:	400204a8 	.word	0x400204a8

08005994 <HAL_DMA_Start_IT>:
 8005994:	b580      	push	{r7, lr}
 8005996:	b086      	sub	sp, #24
 8005998:	af00      	add	r7, sp, #0
 800599a:	60f8      	str	r0, [r7, #12]
 800599c:	60b9      	str	r1, [r7, #8]
 800599e:	607a      	str	r2, [r7, #4]
 80059a0:	603b      	str	r3, [r7, #0]
 80059a2:	2300      	movs	r3, #0
 80059a4:	75fb      	strb	r3, [r7, #23]
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 80059ac:	2b01      	cmp	r3, #1
 80059ae:	d101      	bne.n	80059b4 <HAL_DMA_Start_IT+0x20>
 80059b0:	2302      	movs	r3, #2
 80059b2:	e04b      	b.n	8005a4c <HAL_DMA_Start_IT+0xb8>
 80059b4:	68fb      	ldr	r3, [r7, #12]
 80059b6:	2201      	movs	r2, #1
 80059b8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80059bc:	68fb      	ldr	r3, [r7, #12]
 80059be:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80059c2:	b2db      	uxtb	r3, r3
 80059c4:	2b01      	cmp	r3, #1
 80059c6:	d13a      	bne.n	8005a3e <HAL_DMA_Start_IT+0xaa>
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	2202      	movs	r2, #2
 80059cc:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80059d0:	68fb      	ldr	r3, [r7, #12]
 80059d2:	2200      	movs	r2, #0
 80059d4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80059d6:	68fb      	ldr	r3, [r7, #12]
 80059d8:	681b      	ldr	r3, [r3, #0]
 80059da:	681a      	ldr	r2, [r3, #0]
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	f022 0201 	bic.w	r2, r2, #1
 80059e4:	601a      	str	r2, [r3, #0]
 80059e6:	683b      	ldr	r3, [r7, #0]
 80059e8:	687a      	ldr	r2, [r7, #4]
 80059ea:	68b9      	ldr	r1, [r7, #8]
 80059ec:	68f8      	ldr	r0, [r7, #12]
 80059ee:	f000 f8e0 	bl	8005bb2 <DMA_SetConfig>
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80059f6:	2b00      	cmp	r3, #0
 80059f8:	d008      	beq.n	8005a0c <HAL_DMA_Start_IT+0x78>
 80059fa:	68fb      	ldr	r3, [r7, #12]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	681a      	ldr	r2, [r3, #0]
 8005a00:	68fb      	ldr	r3, [r7, #12]
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	f042 020e 	orr.w	r2, r2, #14
 8005a08:	601a      	str	r2, [r3, #0]
 8005a0a:	e00f      	b.n	8005a2c <HAL_DMA_Start_IT+0x98>
 8005a0c:	68fb      	ldr	r3, [r7, #12]
 8005a0e:	681b      	ldr	r3, [r3, #0]
 8005a10:	681a      	ldr	r2, [r3, #0]
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	f022 0204 	bic.w	r2, r2, #4
 8005a1a:	601a      	str	r2, [r3, #0]
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	681a      	ldr	r2, [r3, #0]
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	681b      	ldr	r3, [r3, #0]
 8005a26:	f042 020a 	orr.w	r2, r2, #10
 8005a2a:	601a      	str	r2, [r3, #0]
 8005a2c:	68fb      	ldr	r3, [r7, #12]
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	681a      	ldr	r2, [r3, #0]
 8005a32:	68fb      	ldr	r3, [r7, #12]
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	f042 0201 	orr.w	r2, r2, #1
 8005a3a:	601a      	str	r2, [r3, #0]
 8005a3c:	e005      	b.n	8005a4a <HAL_DMA_Start_IT+0xb6>
 8005a3e:	68fb      	ldr	r3, [r7, #12]
 8005a40:	2200      	movs	r2, #0
 8005a42:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005a46:	2302      	movs	r3, #2
 8005a48:	75fb      	strb	r3, [r7, #23]
 8005a4a:	7dfb      	ldrb	r3, [r7, #23]
 8005a4c:	4618      	mov	r0, r3
 8005a4e:	3718      	adds	r7, #24
 8005a50:	46bd      	mov	sp, r7
 8005a52:	bd80      	pop	{r7, pc}

08005a54 <HAL_DMA_IRQHandler>:
 8005a54:	b580      	push	{r7, lr}
 8005a56:	b084      	sub	sp, #16
 8005a58:	af00      	add	r7, sp, #0
 8005a5a:	6078      	str	r0, [r7, #4]
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	60fb      	str	r3, [r7, #12]
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	681b      	ldr	r3, [r3, #0]
 8005a6a:	60bb      	str	r3, [r7, #8]
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005a70:	f003 031c 	and.w	r3, r3, #28
 8005a74:	2204      	movs	r2, #4
 8005a76:	409a      	lsls	r2, r3
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	4013      	ands	r3, r2
 8005a7c:	2b00      	cmp	r3, #0
 8005a7e:	d026      	beq.n	8005ace <HAL_DMA_IRQHandler+0x7a>
 8005a80:	68bb      	ldr	r3, [r7, #8]
 8005a82:	f003 0304 	and.w	r3, r3, #4
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d021      	beq.n	8005ace <HAL_DMA_IRQHandler+0x7a>
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	f003 0320 	and.w	r3, r3, #32
 8005a94:	2b00      	cmp	r3, #0
 8005a96:	d107      	bne.n	8005aa8 <HAL_DMA_IRQHandler+0x54>
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	681a      	ldr	r2, [r3, #0]
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	681b      	ldr	r3, [r3, #0]
 8005aa2:	f022 0204 	bic.w	r2, r2, #4
 8005aa6:	601a      	str	r2, [r3, #0]
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005aac:	f003 021c 	and.w	r2, r3, #28
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005ab4:	2104      	movs	r1, #4
 8005ab6:	fa01 f202 	lsl.w	r2, r1, r2
 8005aba:	605a      	str	r2, [r3, #4]
 8005abc:	687b      	ldr	r3, [r7, #4]
 8005abe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ac0:	2b00      	cmp	r3, #0
 8005ac2:	d071      	beq.n	8005ba8 <HAL_DMA_IRQHandler+0x154>
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ac8:	6878      	ldr	r0, [r7, #4]
 8005aca:	4798      	blx	r3
 8005acc:	e06c      	b.n	8005ba8 <HAL_DMA_IRQHandler+0x154>
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005ad2:	f003 031c 	and.w	r3, r3, #28
 8005ad6:	2202      	movs	r2, #2
 8005ad8:	409a      	lsls	r2, r3
 8005ada:	68fb      	ldr	r3, [r7, #12]
 8005adc:	4013      	ands	r3, r2
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d02e      	beq.n	8005b40 <HAL_DMA_IRQHandler+0xec>
 8005ae2:	68bb      	ldr	r3, [r7, #8]
 8005ae4:	f003 0302 	and.w	r3, r3, #2
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d029      	beq.n	8005b40 <HAL_DMA_IRQHandler+0xec>
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	681b      	ldr	r3, [r3, #0]
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	f003 0320 	and.w	r3, r3, #32
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	d10b      	bne.n	8005b12 <HAL_DMA_IRQHandler+0xbe>
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	681a      	ldr	r2, [r3, #0]
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	f022 020a 	bic.w	r2, r2, #10
 8005b08:	601a      	str	r2, [r3, #0]
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	2201      	movs	r2, #1
 8005b0e:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b16:	f003 021c 	and.w	r2, r3, #28
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b1e:	2102      	movs	r1, #2
 8005b20:	fa01 f202 	lsl.w	r2, r1, r2
 8005b24:	605a      	str	r2, [r3, #4]
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	2200      	movs	r2, #0
 8005b2a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d038      	beq.n	8005ba8 <HAL_DMA_IRQHandler+0x154>
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005b3a:	6878      	ldr	r0, [r7, #4]
 8005b3c:	4798      	blx	r3
 8005b3e:	e033      	b.n	8005ba8 <HAL_DMA_IRQHandler+0x154>
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b44:	f003 031c 	and.w	r3, r3, #28
 8005b48:	2208      	movs	r2, #8
 8005b4a:	409a      	lsls	r2, r3
 8005b4c:	68fb      	ldr	r3, [r7, #12]
 8005b4e:	4013      	ands	r3, r2
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	d02a      	beq.n	8005baa <HAL_DMA_IRQHandler+0x156>
 8005b54:	68bb      	ldr	r3, [r7, #8]
 8005b56:	f003 0308 	and.w	r3, r3, #8
 8005b5a:	2b00      	cmp	r3, #0
 8005b5c:	d025      	beq.n	8005baa <HAL_DMA_IRQHandler+0x156>
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	681a      	ldr	r2, [r3, #0]
 8005b64:	687b      	ldr	r3, [r7, #4]
 8005b66:	681b      	ldr	r3, [r3, #0]
 8005b68:	f022 020e 	bic.w	r2, r2, #14
 8005b6c:	601a      	str	r2, [r3, #0]
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b72:	f003 021c 	and.w	r2, r3, #28
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b7a:	2101      	movs	r1, #1
 8005b7c:	fa01 f202 	lsl.w	r2, r1, r2
 8005b80:	605a      	str	r2, [r3, #4]
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	2201      	movs	r2, #1
 8005b86:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	2201      	movs	r2, #1
 8005b8c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	2200      	movs	r2, #0
 8005b94:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005b9c:	2b00      	cmp	r3, #0
 8005b9e:	d004      	beq.n	8005baa <HAL_DMA_IRQHandler+0x156>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005ba4:	6878      	ldr	r0, [r7, #4]
 8005ba6:	4798      	blx	r3
 8005ba8:	bf00      	nop
 8005baa:	bf00      	nop
 8005bac:	3710      	adds	r7, #16
 8005bae:	46bd      	mov	sp, r7
 8005bb0:	bd80      	pop	{r7, pc}

08005bb2 <DMA_SetConfig>:
 8005bb2:	b480      	push	{r7}
 8005bb4:	b085      	sub	sp, #20
 8005bb6:	af00      	add	r7, sp, #0
 8005bb8:	60f8      	str	r0, [r7, #12]
 8005bba:	60b9      	str	r1, [r7, #8]
 8005bbc:	607a      	str	r2, [r7, #4]
 8005bbe:	603b      	str	r3, [r7, #0]
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005bc4:	f003 021c 	and.w	r2, r3, #28
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005bcc:	2101      	movs	r1, #1
 8005bce:	fa01 f202 	lsl.w	r2, r1, r2
 8005bd2:	605a      	str	r2, [r3, #4]
 8005bd4:	68fb      	ldr	r3, [r7, #12]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	683a      	ldr	r2, [r7, #0]
 8005bda:	605a      	str	r2, [r3, #4]
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	689b      	ldr	r3, [r3, #8]
 8005be0:	2b10      	cmp	r3, #16
 8005be2:	d108      	bne.n	8005bf6 <DMA_SetConfig+0x44>
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	687a      	ldr	r2, [r7, #4]
 8005bea:	609a      	str	r2, [r3, #8]
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	68ba      	ldr	r2, [r7, #8]
 8005bf2:	60da      	str	r2, [r3, #12]
 8005bf4:	e007      	b.n	8005c06 <DMA_SetConfig+0x54>
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	68ba      	ldr	r2, [r7, #8]
 8005bfc:	609a      	str	r2, [r3, #8]
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	687a      	ldr	r2, [r7, #4]
 8005c04:	60da      	str	r2, [r3, #12]
 8005c06:	bf00      	nop
 8005c08:	3714      	adds	r7, #20
 8005c0a:	46bd      	mov	sp, r7
 8005c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c10:	4770      	bx	lr
	...

08005c14 <HAL_GPIO_Init>:
 8005c14:	b480      	push	{r7}
 8005c16:	b087      	sub	sp, #28
 8005c18:	af00      	add	r7, sp, #0
 8005c1a:	6078      	str	r0, [r7, #4]
 8005c1c:	6039      	str	r1, [r7, #0]
 8005c1e:	2300      	movs	r3, #0
 8005c20:	617b      	str	r3, [r7, #20]
 8005c22:	e154      	b.n	8005ece <HAL_GPIO_Init+0x2ba>
 8005c24:	683b      	ldr	r3, [r7, #0]
 8005c26:	681a      	ldr	r2, [r3, #0]
 8005c28:	2101      	movs	r1, #1
 8005c2a:	697b      	ldr	r3, [r7, #20]
 8005c2c:	fa01 f303 	lsl.w	r3, r1, r3
 8005c30:	4013      	ands	r3, r2
 8005c32:	60fb      	str	r3, [r7, #12]
 8005c34:	68fb      	ldr	r3, [r7, #12]
 8005c36:	2b00      	cmp	r3, #0
 8005c38:	f000 8146 	beq.w	8005ec8 <HAL_GPIO_Init+0x2b4>
 8005c3c:	683b      	ldr	r3, [r7, #0]
 8005c3e:	685b      	ldr	r3, [r3, #4]
 8005c40:	f003 0303 	and.w	r3, r3, #3
 8005c44:	2b01      	cmp	r3, #1
 8005c46:	d005      	beq.n	8005c54 <HAL_GPIO_Init+0x40>
 8005c48:	683b      	ldr	r3, [r7, #0]
 8005c4a:	685b      	ldr	r3, [r3, #4]
 8005c4c:	f003 0303 	and.w	r3, r3, #3
 8005c50:	2b02      	cmp	r3, #2
 8005c52:	d130      	bne.n	8005cb6 <HAL_GPIO_Init+0xa2>
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	689b      	ldr	r3, [r3, #8]
 8005c58:	613b      	str	r3, [r7, #16]
 8005c5a:	697b      	ldr	r3, [r7, #20]
 8005c5c:	005b      	lsls	r3, r3, #1
 8005c5e:	2203      	movs	r2, #3
 8005c60:	fa02 f303 	lsl.w	r3, r2, r3
 8005c64:	43db      	mvns	r3, r3
 8005c66:	693a      	ldr	r2, [r7, #16]
 8005c68:	4013      	ands	r3, r2
 8005c6a:	613b      	str	r3, [r7, #16]
 8005c6c:	683b      	ldr	r3, [r7, #0]
 8005c6e:	68da      	ldr	r2, [r3, #12]
 8005c70:	697b      	ldr	r3, [r7, #20]
 8005c72:	005b      	lsls	r3, r3, #1
 8005c74:	fa02 f303 	lsl.w	r3, r2, r3
 8005c78:	693a      	ldr	r2, [r7, #16]
 8005c7a:	4313      	orrs	r3, r2
 8005c7c:	613b      	str	r3, [r7, #16]
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	693a      	ldr	r2, [r7, #16]
 8005c82:	609a      	str	r2, [r3, #8]
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	685b      	ldr	r3, [r3, #4]
 8005c88:	613b      	str	r3, [r7, #16]
 8005c8a:	2201      	movs	r2, #1
 8005c8c:	697b      	ldr	r3, [r7, #20]
 8005c8e:	fa02 f303 	lsl.w	r3, r2, r3
 8005c92:	43db      	mvns	r3, r3
 8005c94:	693a      	ldr	r2, [r7, #16]
 8005c96:	4013      	ands	r3, r2
 8005c98:	613b      	str	r3, [r7, #16]
 8005c9a:	683b      	ldr	r3, [r7, #0]
 8005c9c:	685b      	ldr	r3, [r3, #4]
 8005c9e:	091b      	lsrs	r3, r3, #4
 8005ca0:	f003 0201 	and.w	r2, r3, #1
 8005ca4:	697b      	ldr	r3, [r7, #20]
 8005ca6:	fa02 f303 	lsl.w	r3, r2, r3
 8005caa:	693a      	ldr	r2, [r7, #16]
 8005cac:	4313      	orrs	r3, r2
 8005cae:	613b      	str	r3, [r7, #16]
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	693a      	ldr	r2, [r7, #16]
 8005cb4:	605a      	str	r2, [r3, #4]
 8005cb6:	683b      	ldr	r3, [r7, #0]
 8005cb8:	685b      	ldr	r3, [r3, #4]
 8005cba:	f003 0303 	and.w	r3, r3, #3
 8005cbe:	2b03      	cmp	r3, #3
 8005cc0:	d017      	beq.n	8005cf2 <HAL_GPIO_Init+0xde>
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	68db      	ldr	r3, [r3, #12]
 8005cc6:	613b      	str	r3, [r7, #16]
 8005cc8:	697b      	ldr	r3, [r7, #20]
 8005cca:	005b      	lsls	r3, r3, #1
 8005ccc:	2203      	movs	r2, #3
 8005cce:	fa02 f303 	lsl.w	r3, r2, r3
 8005cd2:	43db      	mvns	r3, r3
 8005cd4:	693a      	ldr	r2, [r7, #16]
 8005cd6:	4013      	ands	r3, r2
 8005cd8:	613b      	str	r3, [r7, #16]
 8005cda:	683b      	ldr	r3, [r7, #0]
 8005cdc:	689a      	ldr	r2, [r3, #8]
 8005cde:	697b      	ldr	r3, [r7, #20]
 8005ce0:	005b      	lsls	r3, r3, #1
 8005ce2:	fa02 f303 	lsl.w	r3, r2, r3
 8005ce6:	693a      	ldr	r2, [r7, #16]
 8005ce8:	4313      	orrs	r3, r2
 8005cea:	613b      	str	r3, [r7, #16]
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	693a      	ldr	r2, [r7, #16]
 8005cf0:	60da      	str	r2, [r3, #12]
 8005cf2:	683b      	ldr	r3, [r7, #0]
 8005cf4:	685b      	ldr	r3, [r3, #4]
 8005cf6:	f003 0303 	and.w	r3, r3, #3
 8005cfa:	2b02      	cmp	r3, #2
 8005cfc:	d123      	bne.n	8005d46 <HAL_GPIO_Init+0x132>
 8005cfe:	697b      	ldr	r3, [r7, #20]
 8005d00:	08da      	lsrs	r2, r3, #3
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	3208      	adds	r2, #8
 8005d06:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005d0a:	613b      	str	r3, [r7, #16]
 8005d0c:	697b      	ldr	r3, [r7, #20]
 8005d0e:	f003 0307 	and.w	r3, r3, #7
 8005d12:	009b      	lsls	r3, r3, #2
 8005d14:	220f      	movs	r2, #15
 8005d16:	fa02 f303 	lsl.w	r3, r2, r3
 8005d1a:	43db      	mvns	r3, r3
 8005d1c:	693a      	ldr	r2, [r7, #16]
 8005d1e:	4013      	ands	r3, r2
 8005d20:	613b      	str	r3, [r7, #16]
 8005d22:	683b      	ldr	r3, [r7, #0]
 8005d24:	691a      	ldr	r2, [r3, #16]
 8005d26:	697b      	ldr	r3, [r7, #20]
 8005d28:	f003 0307 	and.w	r3, r3, #7
 8005d2c:	009b      	lsls	r3, r3, #2
 8005d2e:	fa02 f303 	lsl.w	r3, r2, r3
 8005d32:	693a      	ldr	r2, [r7, #16]
 8005d34:	4313      	orrs	r3, r2
 8005d36:	613b      	str	r3, [r7, #16]
 8005d38:	697b      	ldr	r3, [r7, #20]
 8005d3a:	08da      	lsrs	r2, r3, #3
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	3208      	adds	r2, #8
 8005d40:	6939      	ldr	r1, [r7, #16]
 8005d42:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	613b      	str	r3, [r7, #16]
 8005d4c:	697b      	ldr	r3, [r7, #20]
 8005d4e:	005b      	lsls	r3, r3, #1
 8005d50:	2203      	movs	r2, #3
 8005d52:	fa02 f303 	lsl.w	r3, r2, r3
 8005d56:	43db      	mvns	r3, r3
 8005d58:	693a      	ldr	r2, [r7, #16]
 8005d5a:	4013      	ands	r3, r2
 8005d5c:	613b      	str	r3, [r7, #16]
 8005d5e:	683b      	ldr	r3, [r7, #0]
 8005d60:	685b      	ldr	r3, [r3, #4]
 8005d62:	f003 0203 	and.w	r2, r3, #3
 8005d66:	697b      	ldr	r3, [r7, #20]
 8005d68:	005b      	lsls	r3, r3, #1
 8005d6a:	fa02 f303 	lsl.w	r3, r2, r3
 8005d6e:	693a      	ldr	r2, [r7, #16]
 8005d70:	4313      	orrs	r3, r2
 8005d72:	613b      	str	r3, [r7, #16]
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	693a      	ldr	r2, [r7, #16]
 8005d78:	601a      	str	r2, [r3, #0]
 8005d7a:	683b      	ldr	r3, [r7, #0]
 8005d7c:	685b      	ldr	r3, [r3, #4]
 8005d7e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	f000 80a0 	beq.w	8005ec8 <HAL_GPIO_Init+0x2b4>
 8005d88:	4b58      	ldr	r3, [pc, #352]	@ (8005eec <HAL_GPIO_Init+0x2d8>)
 8005d8a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005d8c:	4a57      	ldr	r2, [pc, #348]	@ (8005eec <HAL_GPIO_Init+0x2d8>)
 8005d8e:	f043 0301 	orr.w	r3, r3, #1
 8005d92:	6613      	str	r3, [r2, #96]	@ 0x60
 8005d94:	4b55      	ldr	r3, [pc, #340]	@ (8005eec <HAL_GPIO_Init+0x2d8>)
 8005d96:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005d98:	f003 0301 	and.w	r3, r3, #1
 8005d9c:	60bb      	str	r3, [r7, #8]
 8005d9e:	68bb      	ldr	r3, [r7, #8]
 8005da0:	4a53      	ldr	r2, [pc, #332]	@ (8005ef0 <HAL_GPIO_Init+0x2dc>)
 8005da2:	697b      	ldr	r3, [r7, #20]
 8005da4:	089b      	lsrs	r3, r3, #2
 8005da6:	3302      	adds	r3, #2
 8005da8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005dac:	613b      	str	r3, [r7, #16]
 8005dae:	697b      	ldr	r3, [r7, #20]
 8005db0:	f003 0303 	and.w	r3, r3, #3
 8005db4:	009b      	lsls	r3, r3, #2
 8005db6:	220f      	movs	r2, #15
 8005db8:	fa02 f303 	lsl.w	r3, r2, r3
 8005dbc:	43db      	mvns	r3, r3
 8005dbe:	693a      	ldr	r2, [r7, #16]
 8005dc0:	4013      	ands	r3, r2
 8005dc2:	613b      	str	r3, [r7, #16]
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8005dca:	d019      	beq.n	8005e00 <HAL_GPIO_Init+0x1ec>
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	4a49      	ldr	r2, [pc, #292]	@ (8005ef4 <HAL_GPIO_Init+0x2e0>)
 8005dd0:	4293      	cmp	r3, r2
 8005dd2:	d013      	beq.n	8005dfc <HAL_GPIO_Init+0x1e8>
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	4a48      	ldr	r2, [pc, #288]	@ (8005ef8 <HAL_GPIO_Init+0x2e4>)
 8005dd8:	4293      	cmp	r3, r2
 8005dda:	d00d      	beq.n	8005df8 <HAL_GPIO_Init+0x1e4>
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	4a47      	ldr	r2, [pc, #284]	@ (8005efc <HAL_GPIO_Init+0x2e8>)
 8005de0:	4293      	cmp	r3, r2
 8005de2:	d007      	beq.n	8005df4 <HAL_GPIO_Init+0x1e0>
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	4a46      	ldr	r2, [pc, #280]	@ (8005f00 <HAL_GPIO_Init+0x2ec>)
 8005de8:	4293      	cmp	r3, r2
 8005dea:	d101      	bne.n	8005df0 <HAL_GPIO_Init+0x1dc>
 8005dec:	2304      	movs	r3, #4
 8005dee:	e008      	b.n	8005e02 <HAL_GPIO_Init+0x1ee>
 8005df0:	2307      	movs	r3, #7
 8005df2:	e006      	b.n	8005e02 <HAL_GPIO_Init+0x1ee>
 8005df4:	2303      	movs	r3, #3
 8005df6:	e004      	b.n	8005e02 <HAL_GPIO_Init+0x1ee>
 8005df8:	2302      	movs	r3, #2
 8005dfa:	e002      	b.n	8005e02 <HAL_GPIO_Init+0x1ee>
 8005dfc:	2301      	movs	r3, #1
 8005dfe:	e000      	b.n	8005e02 <HAL_GPIO_Init+0x1ee>
 8005e00:	2300      	movs	r3, #0
 8005e02:	697a      	ldr	r2, [r7, #20]
 8005e04:	f002 0203 	and.w	r2, r2, #3
 8005e08:	0092      	lsls	r2, r2, #2
 8005e0a:	4093      	lsls	r3, r2
 8005e0c:	693a      	ldr	r2, [r7, #16]
 8005e0e:	4313      	orrs	r3, r2
 8005e10:	613b      	str	r3, [r7, #16]
 8005e12:	4937      	ldr	r1, [pc, #220]	@ (8005ef0 <HAL_GPIO_Init+0x2dc>)
 8005e14:	697b      	ldr	r3, [r7, #20]
 8005e16:	089b      	lsrs	r3, r3, #2
 8005e18:	3302      	adds	r3, #2
 8005e1a:	693a      	ldr	r2, [r7, #16]
 8005e1c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005e20:	4b38      	ldr	r3, [pc, #224]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005e22:	689b      	ldr	r3, [r3, #8]
 8005e24:	613b      	str	r3, [r7, #16]
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	43db      	mvns	r3, r3
 8005e2a:	693a      	ldr	r2, [r7, #16]
 8005e2c:	4013      	ands	r3, r2
 8005e2e:	613b      	str	r3, [r7, #16]
 8005e30:	683b      	ldr	r3, [r7, #0]
 8005e32:	685b      	ldr	r3, [r3, #4]
 8005e34:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005e38:	2b00      	cmp	r3, #0
 8005e3a:	d003      	beq.n	8005e44 <HAL_GPIO_Init+0x230>
 8005e3c:	693a      	ldr	r2, [r7, #16]
 8005e3e:	68fb      	ldr	r3, [r7, #12]
 8005e40:	4313      	orrs	r3, r2
 8005e42:	613b      	str	r3, [r7, #16]
 8005e44:	4a2f      	ldr	r2, [pc, #188]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005e46:	693b      	ldr	r3, [r7, #16]
 8005e48:	6093      	str	r3, [r2, #8]
 8005e4a:	4b2e      	ldr	r3, [pc, #184]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005e4c:	68db      	ldr	r3, [r3, #12]
 8005e4e:	613b      	str	r3, [r7, #16]
 8005e50:	68fb      	ldr	r3, [r7, #12]
 8005e52:	43db      	mvns	r3, r3
 8005e54:	693a      	ldr	r2, [r7, #16]
 8005e56:	4013      	ands	r3, r2
 8005e58:	613b      	str	r3, [r7, #16]
 8005e5a:	683b      	ldr	r3, [r7, #0]
 8005e5c:	685b      	ldr	r3, [r3, #4]
 8005e5e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005e62:	2b00      	cmp	r3, #0
 8005e64:	d003      	beq.n	8005e6e <HAL_GPIO_Init+0x25a>
 8005e66:	693a      	ldr	r2, [r7, #16]
 8005e68:	68fb      	ldr	r3, [r7, #12]
 8005e6a:	4313      	orrs	r3, r2
 8005e6c:	613b      	str	r3, [r7, #16]
 8005e6e:	4a25      	ldr	r2, [pc, #148]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005e70:	693b      	ldr	r3, [r7, #16]
 8005e72:	60d3      	str	r3, [r2, #12]
 8005e74:	4b23      	ldr	r3, [pc, #140]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005e76:	685b      	ldr	r3, [r3, #4]
 8005e78:	613b      	str	r3, [r7, #16]
 8005e7a:	68fb      	ldr	r3, [r7, #12]
 8005e7c:	43db      	mvns	r3, r3
 8005e7e:	693a      	ldr	r2, [r7, #16]
 8005e80:	4013      	ands	r3, r2
 8005e82:	613b      	str	r3, [r7, #16]
 8005e84:	683b      	ldr	r3, [r7, #0]
 8005e86:	685b      	ldr	r3, [r3, #4]
 8005e88:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d003      	beq.n	8005e98 <HAL_GPIO_Init+0x284>
 8005e90:	693a      	ldr	r2, [r7, #16]
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	4313      	orrs	r3, r2
 8005e96:	613b      	str	r3, [r7, #16]
 8005e98:	4a1a      	ldr	r2, [pc, #104]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005e9a:	693b      	ldr	r3, [r7, #16]
 8005e9c:	6053      	str	r3, [r2, #4]
 8005e9e:	4b19      	ldr	r3, [pc, #100]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	613b      	str	r3, [r7, #16]
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	43db      	mvns	r3, r3
 8005ea8:	693a      	ldr	r2, [r7, #16]
 8005eaa:	4013      	ands	r3, r2
 8005eac:	613b      	str	r3, [r7, #16]
 8005eae:	683b      	ldr	r3, [r7, #0]
 8005eb0:	685b      	ldr	r3, [r3, #4]
 8005eb2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d003      	beq.n	8005ec2 <HAL_GPIO_Init+0x2ae>
 8005eba:	693a      	ldr	r2, [r7, #16]
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	4313      	orrs	r3, r2
 8005ec0:	613b      	str	r3, [r7, #16]
 8005ec2:	4a10      	ldr	r2, [pc, #64]	@ (8005f04 <HAL_GPIO_Init+0x2f0>)
 8005ec4:	693b      	ldr	r3, [r7, #16]
 8005ec6:	6013      	str	r3, [r2, #0]
 8005ec8:	697b      	ldr	r3, [r7, #20]
 8005eca:	3301      	adds	r3, #1
 8005ecc:	617b      	str	r3, [r7, #20]
 8005ece:	683b      	ldr	r3, [r7, #0]
 8005ed0:	681a      	ldr	r2, [r3, #0]
 8005ed2:	697b      	ldr	r3, [r7, #20]
 8005ed4:	fa22 f303 	lsr.w	r3, r2, r3
 8005ed8:	2b00      	cmp	r3, #0
 8005eda:	f47f aea3 	bne.w	8005c24 <HAL_GPIO_Init+0x10>
 8005ede:	bf00      	nop
 8005ee0:	bf00      	nop
 8005ee2:	371c      	adds	r7, #28
 8005ee4:	46bd      	mov	sp, r7
 8005ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eea:	4770      	bx	lr
 8005eec:	40021000 	.word	0x40021000
 8005ef0:	40010000 	.word	0x40010000
 8005ef4:	48000400 	.word	0x48000400
 8005ef8:	48000800 	.word	0x48000800
 8005efc:	48000c00 	.word	0x48000c00
 8005f00:	48001000 	.word	0x48001000
 8005f04:	40010400 	.word	0x40010400

08005f08 <HAL_GPIO_WritePin>:
 8005f08:	b480      	push	{r7}
 8005f0a:	b083      	sub	sp, #12
 8005f0c:	af00      	add	r7, sp, #0
 8005f0e:	6078      	str	r0, [r7, #4]
 8005f10:	460b      	mov	r3, r1
 8005f12:	807b      	strh	r3, [r7, #2]
 8005f14:	4613      	mov	r3, r2
 8005f16:	707b      	strb	r3, [r7, #1]
 8005f18:	787b      	ldrb	r3, [r7, #1]
 8005f1a:	2b00      	cmp	r3, #0
 8005f1c:	d003      	beq.n	8005f26 <HAL_GPIO_WritePin+0x1e>
 8005f1e:	887a      	ldrh	r2, [r7, #2]
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	619a      	str	r2, [r3, #24]
 8005f24:	e002      	b.n	8005f2c <HAL_GPIO_WritePin+0x24>
 8005f26:	887a      	ldrh	r2, [r7, #2]
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	629a      	str	r2, [r3, #40]	@ 0x28
 8005f2c:	bf00      	nop
 8005f2e:	370c      	adds	r7, #12
 8005f30:	46bd      	mov	sp, r7
 8005f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f36:	4770      	bx	lr

08005f38 <HAL_GPIO_TogglePin>:
 8005f38:	b480      	push	{r7}
 8005f3a:	b085      	sub	sp, #20
 8005f3c:	af00      	add	r7, sp, #0
 8005f3e:	6078      	str	r0, [r7, #4]
 8005f40:	460b      	mov	r3, r1
 8005f42:	807b      	strh	r3, [r7, #2]
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	695b      	ldr	r3, [r3, #20]
 8005f48:	60fb      	str	r3, [r7, #12]
 8005f4a:	887a      	ldrh	r2, [r7, #2]
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	4013      	ands	r3, r2
 8005f50:	041a      	lsls	r2, r3, #16
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	43d9      	mvns	r1, r3
 8005f56:	887b      	ldrh	r3, [r7, #2]
 8005f58:	400b      	ands	r3, r1
 8005f5a:	431a      	orrs	r2, r3
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	619a      	str	r2, [r3, #24]
 8005f60:	bf00      	nop
 8005f62:	3714      	adds	r7, #20
 8005f64:	46bd      	mov	sp, r7
 8005f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f6a:	4770      	bx	lr

08005f6c <HAL_PWREx_GetVoltageRange>:
 8005f6c:	b480      	push	{r7}
 8005f6e:	af00      	add	r7, sp, #0
 8005f70:	4b04      	ldr	r3, [pc, #16]	@ (8005f84 <HAL_PWREx_GetVoltageRange+0x18>)
 8005f72:	681b      	ldr	r3, [r3, #0]
 8005f74:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8005f78:	4618      	mov	r0, r3
 8005f7a:	46bd      	mov	sp, r7
 8005f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f80:	4770      	bx	lr
 8005f82:	bf00      	nop
 8005f84:	40007000 	.word	0x40007000

08005f88 <HAL_PWREx_ControlVoltageScaling>:
 8005f88:	b480      	push	{r7}
 8005f8a:	b085      	sub	sp, #20
 8005f8c:	af00      	add	r7, sp, #0
 8005f8e:	6078      	str	r0, [r7, #4]
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005f96:	d130      	bne.n	8005ffa <HAL_PWREx_ControlVoltageScaling+0x72>
 8005f98:	4b23      	ldr	r3, [pc, #140]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8005fa0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005fa4:	d038      	beq.n	8006018 <HAL_PWREx_ControlVoltageScaling+0x90>
 8005fa6:	4b20      	ldr	r3, [pc, #128]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8005fae:	4a1e      	ldr	r2, [pc, #120]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005fb0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8005fb4:	6013      	str	r3, [r2, #0]
 8005fb6:	4b1d      	ldr	r3, [pc, #116]	@ (800602c <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	2232      	movs	r2, #50	@ 0x32
 8005fbc:	fb02 f303 	mul.w	r3, r2, r3
 8005fc0:	4a1b      	ldr	r2, [pc, #108]	@ (8006030 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8005fc2:	fba2 2303 	umull	r2, r3, r2, r3
 8005fc6:	0c9b      	lsrs	r3, r3, #18
 8005fc8:	3301      	adds	r3, #1
 8005fca:	60fb      	str	r3, [r7, #12]
 8005fcc:	e002      	b.n	8005fd4 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8005fce:	68fb      	ldr	r3, [r7, #12]
 8005fd0:	3b01      	subs	r3, #1
 8005fd2:	60fb      	str	r3, [r7, #12]
 8005fd4:	4b14      	ldr	r3, [pc, #80]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005fd6:	695b      	ldr	r3, [r3, #20]
 8005fd8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005fdc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005fe0:	d102      	bne.n	8005fe8 <HAL_PWREx_ControlVoltageScaling+0x60>
 8005fe2:	68fb      	ldr	r3, [r7, #12]
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d1f2      	bne.n	8005fce <HAL_PWREx_ControlVoltageScaling+0x46>
 8005fe8:	4b0f      	ldr	r3, [pc, #60]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005fea:	695b      	ldr	r3, [r3, #20]
 8005fec:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005ff0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005ff4:	d110      	bne.n	8006018 <HAL_PWREx_ControlVoltageScaling+0x90>
 8005ff6:	2303      	movs	r3, #3
 8005ff8:	e00f      	b.n	800601a <HAL_PWREx_ControlVoltageScaling+0x92>
 8005ffa:	4b0b      	ldr	r3, [pc, #44]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8006002:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006006:	d007      	beq.n	8006018 <HAL_PWREx_ControlVoltageScaling+0x90>
 8006008:	4b07      	ldr	r3, [pc, #28]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006010:	4a05      	ldr	r2, [pc, #20]	@ (8006028 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8006012:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8006016:	6013      	str	r3, [r2, #0]
 8006018:	2300      	movs	r3, #0
 800601a:	4618      	mov	r0, r3
 800601c:	3714      	adds	r7, #20
 800601e:	46bd      	mov	sp, r7
 8006020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006024:	4770      	bx	lr
 8006026:	bf00      	nop
 8006028:	40007000 	.word	0x40007000
 800602c:	200000a0 	.word	0x200000a0
 8006030:	431bde83 	.word	0x431bde83

08006034 <HAL_RCC_OscConfig>:
 8006034:	b580      	push	{r7, lr}
 8006036:	b088      	sub	sp, #32
 8006038:	af00      	add	r7, sp, #0
 800603a:	6078      	str	r0, [r7, #4]
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	2b00      	cmp	r3, #0
 8006040:	d102      	bne.n	8006048 <HAL_RCC_OscConfig+0x14>
 8006042:	2301      	movs	r3, #1
 8006044:	f000 bc02 	b.w	800684c <HAL_RCC_OscConfig+0x818>
 8006048:	4b96      	ldr	r3, [pc, #600]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800604a:	689b      	ldr	r3, [r3, #8]
 800604c:	f003 030c 	and.w	r3, r3, #12
 8006050:	61bb      	str	r3, [r7, #24]
 8006052:	4b94      	ldr	r3, [pc, #592]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006054:	68db      	ldr	r3, [r3, #12]
 8006056:	f003 0303 	and.w	r3, r3, #3
 800605a:	617b      	str	r3, [r7, #20]
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	681b      	ldr	r3, [r3, #0]
 8006060:	f003 0310 	and.w	r3, r3, #16
 8006064:	2b00      	cmp	r3, #0
 8006066:	f000 80e4 	beq.w	8006232 <HAL_RCC_OscConfig+0x1fe>
 800606a:	69bb      	ldr	r3, [r7, #24]
 800606c:	2b00      	cmp	r3, #0
 800606e:	d007      	beq.n	8006080 <HAL_RCC_OscConfig+0x4c>
 8006070:	69bb      	ldr	r3, [r7, #24]
 8006072:	2b0c      	cmp	r3, #12
 8006074:	f040 808b 	bne.w	800618e <HAL_RCC_OscConfig+0x15a>
 8006078:	697b      	ldr	r3, [r7, #20]
 800607a:	2b01      	cmp	r3, #1
 800607c:	f040 8087 	bne.w	800618e <HAL_RCC_OscConfig+0x15a>
 8006080:	4b88      	ldr	r3, [pc, #544]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	f003 0302 	and.w	r3, r3, #2
 8006088:	2b00      	cmp	r3, #0
 800608a:	d005      	beq.n	8006098 <HAL_RCC_OscConfig+0x64>
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	699b      	ldr	r3, [r3, #24]
 8006090:	2b00      	cmp	r3, #0
 8006092:	d101      	bne.n	8006098 <HAL_RCC_OscConfig+0x64>
 8006094:	2301      	movs	r3, #1
 8006096:	e3d9      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006098:	687b      	ldr	r3, [r7, #4]
 800609a:	6a1a      	ldr	r2, [r3, #32]
 800609c:	4b81      	ldr	r3, [pc, #516]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	f003 0308 	and.w	r3, r3, #8
 80060a4:	2b00      	cmp	r3, #0
 80060a6:	d004      	beq.n	80060b2 <HAL_RCC_OscConfig+0x7e>
 80060a8:	4b7e      	ldr	r3, [pc, #504]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80060b0:	e005      	b.n	80060be <HAL_RCC_OscConfig+0x8a>
 80060b2:	4b7c      	ldr	r3, [pc, #496]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060b4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80060b8:	091b      	lsrs	r3, r3, #4
 80060ba:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80060be:	4293      	cmp	r3, r2
 80060c0:	d223      	bcs.n	800610a <HAL_RCC_OscConfig+0xd6>
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	6a1b      	ldr	r3, [r3, #32]
 80060c6:	4618      	mov	r0, r3
 80060c8:	f000 fdc0 	bl	8006c4c <RCC_SetFlashLatencyFromMSIRange>
 80060cc:	4603      	mov	r3, r0
 80060ce:	2b00      	cmp	r3, #0
 80060d0:	d001      	beq.n	80060d6 <HAL_RCC_OscConfig+0xa2>
 80060d2:	2301      	movs	r3, #1
 80060d4:	e3ba      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80060d6:	4b73      	ldr	r3, [pc, #460]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060d8:	681b      	ldr	r3, [r3, #0]
 80060da:	4a72      	ldr	r2, [pc, #456]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060dc:	f043 0308 	orr.w	r3, r3, #8
 80060e0:	6013      	str	r3, [r2, #0]
 80060e2:	4b70      	ldr	r3, [pc, #448]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060e4:	681b      	ldr	r3, [r3, #0]
 80060e6:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	6a1b      	ldr	r3, [r3, #32]
 80060ee:	496d      	ldr	r1, [pc, #436]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060f0:	4313      	orrs	r3, r2
 80060f2:	600b      	str	r3, [r1, #0]
 80060f4:	4b6b      	ldr	r3, [pc, #428]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80060f6:	685b      	ldr	r3, [r3, #4]
 80060f8:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	69db      	ldr	r3, [r3, #28]
 8006100:	021b      	lsls	r3, r3, #8
 8006102:	4968      	ldr	r1, [pc, #416]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006104:	4313      	orrs	r3, r2
 8006106:	604b      	str	r3, [r1, #4]
 8006108:	e025      	b.n	8006156 <HAL_RCC_OscConfig+0x122>
 800610a:	4b66      	ldr	r3, [pc, #408]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800610c:	681b      	ldr	r3, [r3, #0]
 800610e:	4a65      	ldr	r2, [pc, #404]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006110:	f043 0308 	orr.w	r3, r3, #8
 8006114:	6013      	str	r3, [r2, #0]
 8006116:	4b63      	ldr	r3, [pc, #396]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	6a1b      	ldr	r3, [r3, #32]
 8006122:	4960      	ldr	r1, [pc, #384]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006124:	4313      	orrs	r3, r2
 8006126:	600b      	str	r3, [r1, #0]
 8006128:	4b5e      	ldr	r3, [pc, #376]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800612a:	685b      	ldr	r3, [r3, #4]
 800612c:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	69db      	ldr	r3, [r3, #28]
 8006134:	021b      	lsls	r3, r3, #8
 8006136:	495b      	ldr	r1, [pc, #364]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006138:	4313      	orrs	r3, r2
 800613a:	604b      	str	r3, [r1, #4]
 800613c:	69bb      	ldr	r3, [r7, #24]
 800613e:	2b00      	cmp	r3, #0
 8006140:	d109      	bne.n	8006156 <HAL_RCC_OscConfig+0x122>
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	6a1b      	ldr	r3, [r3, #32]
 8006146:	4618      	mov	r0, r3
 8006148:	f000 fd80 	bl	8006c4c <RCC_SetFlashLatencyFromMSIRange>
 800614c:	4603      	mov	r3, r0
 800614e:	2b00      	cmp	r3, #0
 8006150:	d001      	beq.n	8006156 <HAL_RCC_OscConfig+0x122>
 8006152:	2301      	movs	r3, #1
 8006154:	e37a      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006156:	f000 fcb5 	bl	8006ac4 <HAL_RCC_GetSysClockFreq>
 800615a:	4602      	mov	r2, r0
 800615c:	4b51      	ldr	r3, [pc, #324]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800615e:	689b      	ldr	r3, [r3, #8]
 8006160:	091b      	lsrs	r3, r3, #4
 8006162:	f003 030f 	and.w	r3, r3, #15
 8006166:	4950      	ldr	r1, [pc, #320]	@ (80062a8 <HAL_RCC_OscConfig+0x274>)
 8006168:	5ccb      	ldrb	r3, [r1, r3]
 800616a:	f003 031f 	and.w	r3, r3, #31
 800616e:	fa22 f303 	lsr.w	r3, r2, r3
 8006172:	4a4e      	ldr	r2, [pc, #312]	@ (80062ac <HAL_RCC_OscConfig+0x278>)
 8006174:	6013      	str	r3, [r2, #0]
 8006176:	4b4e      	ldr	r3, [pc, #312]	@ (80062b0 <HAL_RCC_OscConfig+0x27c>)
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	4618      	mov	r0, r3
 800617c:	f7fd ff26 	bl	8003fcc <HAL_InitTick>
 8006180:	4603      	mov	r3, r0
 8006182:	73fb      	strb	r3, [r7, #15]
 8006184:	7bfb      	ldrb	r3, [r7, #15]
 8006186:	2b00      	cmp	r3, #0
 8006188:	d052      	beq.n	8006230 <HAL_RCC_OscConfig+0x1fc>
 800618a:	7bfb      	ldrb	r3, [r7, #15]
 800618c:	e35e      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	699b      	ldr	r3, [r3, #24]
 8006192:	2b00      	cmp	r3, #0
 8006194:	d032      	beq.n	80061fc <HAL_RCC_OscConfig+0x1c8>
 8006196:	4b43      	ldr	r3, [pc, #268]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	4a42      	ldr	r2, [pc, #264]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800619c:	f043 0301 	orr.w	r3, r3, #1
 80061a0:	6013      	str	r3, [r2, #0]
 80061a2:	f7fd ff63 	bl	800406c <HAL_GetTick>
 80061a6:	6138      	str	r0, [r7, #16]
 80061a8:	e008      	b.n	80061bc <HAL_RCC_OscConfig+0x188>
 80061aa:	f7fd ff5f 	bl	800406c <HAL_GetTick>
 80061ae:	4602      	mov	r2, r0
 80061b0:	693b      	ldr	r3, [r7, #16]
 80061b2:	1ad3      	subs	r3, r2, r3
 80061b4:	2b02      	cmp	r3, #2
 80061b6:	d901      	bls.n	80061bc <HAL_RCC_OscConfig+0x188>
 80061b8:	2303      	movs	r3, #3
 80061ba:	e347      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80061bc:	4b39      	ldr	r3, [pc, #228]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061be:	681b      	ldr	r3, [r3, #0]
 80061c0:	f003 0302 	and.w	r3, r3, #2
 80061c4:	2b00      	cmp	r3, #0
 80061c6:	d0f0      	beq.n	80061aa <HAL_RCC_OscConfig+0x176>
 80061c8:	4b36      	ldr	r3, [pc, #216]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061ca:	681b      	ldr	r3, [r3, #0]
 80061cc:	4a35      	ldr	r2, [pc, #212]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061ce:	f043 0308 	orr.w	r3, r3, #8
 80061d2:	6013      	str	r3, [r2, #0]
 80061d4:	4b33      	ldr	r3, [pc, #204]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80061dc:	687b      	ldr	r3, [r7, #4]
 80061de:	6a1b      	ldr	r3, [r3, #32]
 80061e0:	4930      	ldr	r1, [pc, #192]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061e2:	4313      	orrs	r3, r2
 80061e4:	600b      	str	r3, [r1, #0]
 80061e6:	4b2f      	ldr	r3, [pc, #188]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061e8:	685b      	ldr	r3, [r3, #4]
 80061ea:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	69db      	ldr	r3, [r3, #28]
 80061f2:	021b      	lsls	r3, r3, #8
 80061f4:	492b      	ldr	r1, [pc, #172]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061f6:	4313      	orrs	r3, r2
 80061f8:	604b      	str	r3, [r1, #4]
 80061fa:	e01a      	b.n	8006232 <HAL_RCC_OscConfig+0x1fe>
 80061fc:	4b29      	ldr	r3, [pc, #164]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 80061fe:	681b      	ldr	r3, [r3, #0]
 8006200:	4a28      	ldr	r2, [pc, #160]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006202:	f023 0301 	bic.w	r3, r3, #1
 8006206:	6013      	str	r3, [r2, #0]
 8006208:	f7fd ff30 	bl	800406c <HAL_GetTick>
 800620c:	6138      	str	r0, [r7, #16]
 800620e:	e008      	b.n	8006222 <HAL_RCC_OscConfig+0x1ee>
 8006210:	f7fd ff2c 	bl	800406c <HAL_GetTick>
 8006214:	4602      	mov	r2, r0
 8006216:	693b      	ldr	r3, [r7, #16]
 8006218:	1ad3      	subs	r3, r2, r3
 800621a:	2b02      	cmp	r3, #2
 800621c:	d901      	bls.n	8006222 <HAL_RCC_OscConfig+0x1ee>
 800621e:	2303      	movs	r3, #3
 8006220:	e314      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006222:	4b20      	ldr	r3, [pc, #128]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	f003 0302 	and.w	r3, r3, #2
 800622a:	2b00      	cmp	r3, #0
 800622c:	d1f0      	bne.n	8006210 <HAL_RCC_OscConfig+0x1dc>
 800622e:	e000      	b.n	8006232 <HAL_RCC_OscConfig+0x1fe>
 8006230:	bf00      	nop
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	f003 0301 	and.w	r3, r3, #1
 800623a:	2b00      	cmp	r3, #0
 800623c:	d073      	beq.n	8006326 <HAL_RCC_OscConfig+0x2f2>
 800623e:	69bb      	ldr	r3, [r7, #24]
 8006240:	2b08      	cmp	r3, #8
 8006242:	d005      	beq.n	8006250 <HAL_RCC_OscConfig+0x21c>
 8006244:	69bb      	ldr	r3, [r7, #24]
 8006246:	2b0c      	cmp	r3, #12
 8006248:	d10e      	bne.n	8006268 <HAL_RCC_OscConfig+0x234>
 800624a:	697b      	ldr	r3, [r7, #20]
 800624c:	2b03      	cmp	r3, #3
 800624e:	d10b      	bne.n	8006268 <HAL_RCC_OscConfig+0x234>
 8006250:	4b14      	ldr	r3, [pc, #80]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006252:	681b      	ldr	r3, [r3, #0]
 8006254:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006258:	2b00      	cmp	r3, #0
 800625a:	d063      	beq.n	8006324 <HAL_RCC_OscConfig+0x2f0>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	685b      	ldr	r3, [r3, #4]
 8006260:	2b00      	cmp	r3, #0
 8006262:	d15f      	bne.n	8006324 <HAL_RCC_OscConfig+0x2f0>
 8006264:	2301      	movs	r3, #1
 8006266:	e2f1      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	685b      	ldr	r3, [r3, #4]
 800626c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006270:	d106      	bne.n	8006280 <HAL_RCC_OscConfig+0x24c>
 8006272:	4b0c      	ldr	r3, [pc, #48]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	4a0b      	ldr	r2, [pc, #44]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006278:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800627c:	6013      	str	r3, [r2, #0]
 800627e:	e025      	b.n	80062cc <HAL_RCC_OscConfig+0x298>
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	685b      	ldr	r3, [r3, #4]
 8006284:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006288:	d114      	bne.n	80062b4 <HAL_RCC_OscConfig+0x280>
 800628a:	4b06      	ldr	r3, [pc, #24]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	4a05      	ldr	r2, [pc, #20]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006290:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006294:	6013      	str	r3, [r2, #0]
 8006296:	4b03      	ldr	r3, [pc, #12]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	4a02      	ldr	r2, [pc, #8]	@ (80062a4 <HAL_RCC_OscConfig+0x270>)
 800629c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80062a0:	6013      	str	r3, [r2, #0]
 80062a2:	e013      	b.n	80062cc <HAL_RCC_OscConfig+0x298>
 80062a4:	40021000 	.word	0x40021000
 80062a8:	0800d294 	.word	0x0800d294
 80062ac:	200000a0 	.word	0x200000a0
 80062b0:	200000a4 	.word	0x200000a4
 80062b4:	4ba0      	ldr	r3, [pc, #640]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	4a9f      	ldr	r2, [pc, #636]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80062ba:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80062be:	6013      	str	r3, [r2, #0]
 80062c0:	4b9d      	ldr	r3, [pc, #628]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	4a9c      	ldr	r2, [pc, #624]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80062c6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80062ca:	6013      	str	r3, [r2, #0]
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	685b      	ldr	r3, [r3, #4]
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d013      	beq.n	80062fc <HAL_RCC_OscConfig+0x2c8>
 80062d4:	f7fd feca 	bl	800406c <HAL_GetTick>
 80062d8:	6138      	str	r0, [r7, #16]
 80062da:	e008      	b.n	80062ee <HAL_RCC_OscConfig+0x2ba>
 80062dc:	f7fd fec6 	bl	800406c <HAL_GetTick>
 80062e0:	4602      	mov	r2, r0
 80062e2:	693b      	ldr	r3, [r7, #16]
 80062e4:	1ad3      	subs	r3, r2, r3
 80062e6:	2b64      	cmp	r3, #100	@ 0x64
 80062e8:	d901      	bls.n	80062ee <HAL_RCC_OscConfig+0x2ba>
 80062ea:	2303      	movs	r3, #3
 80062ec:	e2ae      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80062ee:	4b92      	ldr	r3, [pc, #584]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80062f0:	681b      	ldr	r3, [r3, #0]
 80062f2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80062f6:	2b00      	cmp	r3, #0
 80062f8:	d0f0      	beq.n	80062dc <HAL_RCC_OscConfig+0x2a8>
 80062fa:	e014      	b.n	8006326 <HAL_RCC_OscConfig+0x2f2>
 80062fc:	f7fd feb6 	bl	800406c <HAL_GetTick>
 8006300:	6138      	str	r0, [r7, #16]
 8006302:	e008      	b.n	8006316 <HAL_RCC_OscConfig+0x2e2>
 8006304:	f7fd feb2 	bl	800406c <HAL_GetTick>
 8006308:	4602      	mov	r2, r0
 800630a:	693b      	ldr	r3, [r7, #16]
 800630c:	1ad3      	subs	r3, r2, r3
 800630e:	2b64      	cmp	r3, #100	@ 0x64
 8006310:	d901      	bls.n	8006316 <HAL_RCC_OscConfig+0x2e2>
 8006312:	2303      	movs	r3, #3
 8006314:	e29a      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006316:	4b88      	ldr	r3, [pc, #544]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800631e:	2b00      	cmp	r3, #0
 8006320:	d1f0      	bne.n	8006304 <HAL_RCC_OscConfig+0x2d0>
 8006322:	e000      	b.n	8006326 <HAL_RCC_OscConfig+0x2f2>
 8006324:	bf00      	nop
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	f003 0302 	and.w	r3, r3, #2
 800632e:	2b00      	cmp	r3, #0
 8006330:	d060      	beq.n	80063f4 <HAL_RCC_OscConfig+0x3c0>
 8006332:	69bb      	ldr	r3, [r7, #24]
 8006334:	2b04      	cmp	r3, #4
 8006336:	d005      	beq.n	8006344 <HAL_RCC_OscConfig+0x310>
 8006338:	69bb      	ldr	r3, [r7, #24]
 800633a:	2b0c      	cmp	r3, #12
 800633c:	d119      	bne.n	8006372 <HAL_RCC_OscConfig+0x33e>
 800633e:	697b      	ldr	r3, [r7, #20]
 8006340:	2b02      	cmp	r3, #2
 8006342:	d116      	bne.n	8006372 <HAL_RCC_OscConfig+0x33e>
 8006344:	4b7c      	ldr	r3, [pc, #496]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800634c:	2b00      	cmp	r3, #0
 800634e:	d005      	beq.n	800635c <HAL_RCC_OscConfig+0x328>
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	68db      	ldr	r3, [r3, #12]
 8006354:	2b00      	cmp	r3, #0
 8006356:	d101      	bne.n	800635c <HAL_RCC_OscConfig+0x328>
 8006358:	2301      	movs	r3, #1
 800635a:	e277      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800635c:	4b76      	ldr	r3, [pc, #472]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800635e:	685b      	ldr	r3, [r3, #4]
 8006360:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	691b      	ldr	r3, [r3, #16]
 8006368:	061b      	lsls	r3, r3, #24
 800636a:	4973      	ldr	r1, [pc, #460]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800636c:	4313      	orrs	r3, r2
 800636e:	604b      	str	r3, [r1, #4]
 8006370:	e040      	b.n	80063f4 <HAL_RCC_OscConfig+0x3c0>
 8006372:	687b      	ldr	r3, [r7, #4]
 8006374:	68db      	ldr	r3, [r3, #12]
 8006376:	2b00      	cmp	r3, #0
 8006378:	d023      	beq.n	80063c2 <HAL_RCC_OscConfig+0x38e>
 800637a:	4b6f      	ldr	r3, [pc, #444]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800637c:	681b      	ldr	r3, [r3, #0]
 800637e:	4a6e      	ldr	r2, [pc, #440]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006380:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006384:	6013      	str	r3, [r2, #0]
 8006386:	f7fd fe71 	bl	800406c <HAL_GetTick>
 800638a:	6138      	str	r0, [r7, #16]
 800638c:	e008      	b.n	80063a0 <HAL_RCC_OscConfig+0x36c>
 800638e:	f7fd fe6d 	bl	800406c <HAL_GetTick>
 8006392:	4602      	mov	r2, r0
 8006394:	693b      	ldr	r3, [r7, #16]
 8006396:	1ad3      	subs	r3, r2, r3
 8006398:	2b02      	cmp	r3, #2
 800639a:	d901      	bls.n	80063a0 <HAL_RCC_OscConfig+0x36c>
 800639c:	2303      	movs	r3, #3
 800639e:	e255      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80063a0:	4b65      	ldr	r3, [pc, #404]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d0f0      	beq.n	800638e <HAL_RCC_OscConfig+0x35a>
 80063ac:	4b62      	ldr	r3, [pc, #392]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80063ae:	685b      	ldr	r3, [r3, #4]
 80063b0:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	691b      	ldr	r3, [r3, #16]
 80063b8:	061b      	lsls	r3, r3, #24
 80063ba:	495f      	ldr	r1, [pc, #380]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80063bc:	4313      	orrs	r3, r2
 80063be:	604b      	str	r3, [r1, #4]
 80063c0:	e018      	b.n	80063f4 <HAL_RCC_OscConfig+0x3c0>
 80063c2:	4b5d      	ldr	r3, [pc, #372]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	4a5c      	ldr	r2, [pc, #368]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80063c8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80063cc:	6013      	str	r3, [r2, #0]
 80063ce:	f7fd fe4d 	bl	800406c <HAL_GetTick>
 80063d2:	6138      	str	r0, [r7, #16]
 80063d4:	e008      	b.n	80063e8 <HAL_RCC_OscConfig+0x3b4>
 80063d6:	f7fd fe49 	bl	800406c <HAL_GetTick>
 80063da:	4602      	mov	r2, r0
 80063dc:	693b      	ldr	r3, [r7, #16]
 80063de:	1ad3      	subs	r3, r2, r3
 80063e0:	2b02      	cmp	r3, #2
 80063e2:	d901      	bls.n	80063e8 <HAL_RCC_OscConfig+0x3b4>
 80063e4:	2303      	movs	r3, #3
 80063e6:	e231      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80063e8:	4b53      	ldr	r3, [pc, #332]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80063f0:	2b00      	cmp	r3, #0
 80063f2:	d1f0      	bne.n	80063d6 <HAL_RCC_OscConfig+0x3a2>
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	f003 0308 	and.w	r3, r3, #8
 80063fc:	2b00      	cmp	r3, #0
 80063fe:	d03c      	beq.n	800647a <HAL_RCC_OscConfig+0x446>
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	695b      	ldr	r3, [r3, #20]
 8006404:	2b00      	cmp	r3, #0
 8006406:	d01c      	beq.n	8006442 <HAL_RCC_OscConfig+0x40e>
 8006408:	4b4b      	ldr	r3, [pc, #300]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800640a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800640e:	4a4a      	ldr	r2, [pc, #296]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006410:	f043 0301 	orr.w	r3, r3, #1
 8006414:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8006418:	f7fd fe28 	bl	800406c <HAL_GetTick>
 800641c:	6138      	str	r0, [r7, #16]
 800641e:	e008      	b.n	8006432 <HAL_RCC_OscConfig+0x3fe>
 8006420:	f7fd fe24 	bl	800406c <HAL_GetTick>
 8006424:	4602      	mov	r2, r0
 8006426:	693b      	ldr	r3, [r7, #16]
 8006428:	1ad3      	subs	r3, r2, r3
 800642a:	2b02      	cmp	r3, #2
 800642c:	d901      	bls.n	8006432 <HAL_RCC_OscConfig+0x3fe>
 800642e:	2303      	movs	r3, #3
 8006430:	e20c      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006432:	4b41      	ldr	r3, [pc, #260]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006434:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006438:	f003 0302 	and.w	r3, r3, #2
 800643c:	2b00      	cmp	r3, #0
 800643e:	d0ef      	beq.n	8006420 <HAL_RCC_OscConfig+0x3ec>
 8006440:	e01b      	b.n	800647a <HAL_RCC_OscConfig+0x446>
 8006442:	4b3d      	ldr	r3, [pc, #244]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006444:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006448:	4a3b      	ldr	r2, [pc, #236]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800644a:	f023 0301 	bic.w	r3, r3, #1
 800644e:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8006452:	f7fd fe0b 	bl	800406c <HAL_GetTick>
 8006456:	6138      	str	r0, [r7, #16]
 8006458:	e008      	b.n	800646c <HAL_RCC_OscConfig+0x438>
 800645a:	f7fd fe07 	bl	800406c <HAL_GetTick>
 800645e:	4602      	mov	r2, r0
 8006460:	693b      	ldr	r3, [r7, #16]
 8006462:	1ad3      	subs	r3, r2, r3
 8006464:	2b02      	cmp	r3, #2
 8006466:	d901      	bls.n	800646c <HAL_RCC_OscConfig+0x438>
 8006468:	2303      	movs	r3, #3
 800646a:	e1ef      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800646c:	4b32      	ldr	r3, [pc, #200]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800646e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006472:	f003 0302 	and.w	r3, r3, #2
 8006476:	2b00      	cmp	r3, #0
 8006478:	d1ef      	bne.n	800645a <HAL_RCC_OscConfig+0x426>
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	f003 0304 	and.w	r3, r3, #4
 8006482:	2b00      	cmp	r3, #0
 8006484:	f000 80a6 	beq.w	80065d4 <HAL_RCC_OscConfig+0x5a0>
 8006488:	2300      	movs	r3, #0
 800648a:	77fb      	strb	r3, [r7, #31]
 800648c:	4b2a      	ldr	r3, [pc, #168]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800648e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006490:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006494:	2b00      	cmp	r3, #0
 8006496:	d10d      	bne.n	80064b4 <HAL_RCC_OscConfig+0x480>
 8006498:	4b27      	ldr	r3, [pc, #156]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800649a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800649c:	4a26      	ldr	r2, [pc, #152]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800649e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80064a2:	6593      	str	r3, [r2, #88]	@ 0x58
 80064a4:	4b24      	ldr	r3, [pc, #144]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80064a6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80064a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80064ac:	60bb      	str	r3, [r7, #8]
 80064ae:	68bb      	ldr	r3, [r7, #8]
 80064b0:	2301      	movs	r3, #1
 80064b2:	77fb      	strb	r3, [r7, #31]
 80064b4:	4b21      	ldr	r3, [pc, #132]	@ (800653c <HAL_RCC_OscConfig+0x508>)
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80064bc:	2b00      	cmp	r3, #0
 80064be:	d118      	bne.n	80064f2 <HAL_RCC_OscConfig+0x4be>
 80064c0:	4b1e      	ldr	r3, [pc, #120]	@ (800653c <HAL_RCC_OscConfig+0x508>)
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	4a1d      	ldr	r2, [pc, #116]	@ (800653c <HAL_RCC_OscConfig+0x508>)
 80064c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80064ca:	6013      	str	r3, [r2, #0]
 80064cc:	f7fd fdce 	bl	800406c <HAL_GetTick>
 80064d0:	6138      	str	r0, [r7, #16]
 80064d2:	e008      	b.n	80064e6 <HAL_RCC_OscConfig+0x4b2>
 80064d4:	f7fd fdca 	bl	800406c <HAL_GetTick>
 80064d8:	4602      	mov	r2, r0
 80064da:	693b      	ldr	r3, [r7, #16]
 80064dc:	1ad3      	subs	r3, r2, r3
 80064de:	2b02      	cmp	r3, #2
 80064e0:	d901      	bls.n	80064e6 <HAL_RCC_OscConfig+0x4b2>
 80064e2:	2303      	movs	r3, #3
 80064e4:	e1b2      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80064e6:	4b15      	ldr	r3, [pc, #84]	@ (800653c <HAL_RCC_OscConfig+0x508>)
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80064ee:	2b00      	cmp	r3, #0
 80064f0:	d0f0      	beq.n	80064d4 <HAL_RCC_OscConfig+0x4a0>
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	689b      	ldr	r3, [r3, #8]
 80064f6:	2b01      	cmp	r3, #1
 80064f8:	d108      	bne.n	800650c <HAL_RCC_OscConfig+0x4d8>
 80064fa:	4b0f      	ldr	r3, [pc, #60]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 80064fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006500:	4a0d      	ldr	r2, [pc, #52]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006502:	f043 0301 	orr.w	r3, r3, #1
 8006506:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800650a:	e029      	b.n	8006560 <HAL_RCC_OscConfig+0x52c>
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	689b      	ldr	r3, [r3, #8]
 8006510:	2b05      	cmp	r3, #5
 8006512:	d115      	bne.n	8006540 <HAL_RCC_OscConfig+0x50c>
 8006514:	4b08      	ldr	r3, [pc, #32]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006516:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800651a:	4a07      	ldr	r2, [pc, #28]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800651c:	f043 0304 	orr.w	r3, r3, #4
 8006520:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006524:	4b04      	ldr	r3, [pc, #16]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 8006526:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800652a:	4a03      	ldr	r2, [pc, #12]	@ (8006538 <HAL_RCC_OscConfig+0x504>)
 800652c:	f043 0301 	orr.w	r3, r3, #1
 8006530:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006534:	e014      	b.n	8006560 <HAL_RCC_OscConfig+0x52c>
 8006536:	bf00      	nop
 8006538:	40021000 	.word	0x40021000
 800653c:	40007000 	.word	0x40007000
 8006540:	4b9a      	ldr	r3, [pc, #616]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006542:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006546:	4a99      	ldr	r2, [pc, #612]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006548:	f023 0301 	bic.w	r3, r3, #1
 800654c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006550:	4b96      	ldr	r3, [pc, #600]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006552:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006556:	4a95      	ldr	r2, [pc, #596]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006558:	f023 0304 	bic.w	r3, r3, #4
 800655c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	689b      	ldr	r3, [r3, #8]
 8006564:	2b00      	cmp	r3, #0
 8006566:	d016      	beq.n	8006596 <HAL_RCC_OscConfig+0x562>
 8006568:	f7fd fd80 	bl	800406c <HAL_GetTick>
 800656c:	6138      	str	r0, [r7, #16]
 800656e:	e00a      	b.n	8006586 <HAL_RCC_OscConfig+0x552>
 8006570:	f7fd fd7c 	bl	800406c <HAL_GetTick>
 8006574:	4602      	mov	r2, r0
 8006576:	693b      	ldr	r3, [r7, #16]
 8006578:	1ad3      	subs	r3, r2, r3
 800657a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800657e:	4293      	cmp	r3, r2
 8006580:	d901      	bls.n	8006586 <HAL_RCC_OscConfig+0x552>
 8006582:	2303      	movs	r3, #3
 8006584:	e162      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006586:	4b89      	ldr	r3, [pc, #548]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006588:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800658c:	f003 0302 	and.w	r3, r3, #2
 8006590:	2b00      	cmp	r3, #0
 8006592:	d0ed      	beq.n	8006570 <HAL_RCC_OscConfig+0x53c>
 8006594:	e015      	b.n	80065c2 <HAL_RCC_OscConfig+0x58e>
 8006596:	f7fd fd69 	bl	800406c <HAL_GetTick>
 800659a:	6138      	str	r0, [r7, #16]
 800659c:	e00a      	b.n	80065b4 <HAL_RCC_OscConfig+0x580>
 800659e:	f7fd fd65 	bl	800406c <HAL_GetTick>
 80065a2:	4602      	mov	r2, r0
 80065a4:	693b      	ldr	r3, [r7, #16]
 80065a6:	1ad3      	subs	r3, r2, r3
 80065a8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80065ac:	4293      	cmp	r3, r2
 80065ae:	d901      	bls.n	80065b4 <HAL_RCC_OscConfig+0x580>
 80065b0:	2303      	movs	r3, #3
 80065b2:	e14b      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80065b4:	4b7d      	ldr	r3, [pc, #500]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80065b6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80065ba:	f003 0302 	and.w	r3, r3, #2
 80065be:	2b00      	cmp	r3, #0
 80065c0:	d1ed      	bne.n	800659e <HAL_RCC_OscConfig+0x56a>
 80065c2:	7ffb      	ldrb	r3, [r7, #31]
 80065c4:	2b01      	cmp	r3, #1
 80065c6:	d105      	bne.n	80065d4 <HAL_RCC_OscConfig+0x5a0>
 80065c8:	4b78      	ldr	r3, [pc, #480]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80065ca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80065cc:	4a77      	ldr	r2, [pc, #476]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80065ce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80065d2:	6593      	str	r3, [r2, #88]	@ 0x58
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	f003 0320 	and.w	r3, r3, #32
 80065dc:	2b00      	cmp	r3, #0
 80065de:	d03c      	beq.n	800665a <HAL_RCC_OscConfig+0x626>
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80065e4:	2b00      	cmp	r3, #0
 80065e6:	d01c      	beq.n	8006622 <HAL_RCC_OscConfig+0x5ee>
 80065e8:	4b70      	ldr	r3, [pc, #448]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80065ea:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80065ee:	4a6f      	ldr	r2, [pc, #444]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80065f0:	f043 0301 	orr.w	r3, r3, #1
 80065f4:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 80065f8:	f7fd fd38 	bl	800406c <HAL_GetTick>
 80065fc:	6138      	str	r0, [r7, #16]
 80065fe:	e008      	b.n	8006612 <HAL_RCC_OscConfig+0x5de>
 8006600:	f7fd fd34 	bl	800406c <HAL_GetTick>
 8006604:	4602      	mov	r2, r0
 8006606:	693b      	ldr	r3, [r7, #16]
 8006608:	1ad3      	subs	r3, r2, r3
 800660a:	2b02      	cmp	r3, #2
 800660c:	d901      	bls.n	8006612 <HAL_RCC_OscConfig+0x5de>
 800660e:	2303      	movs	r3, #3
 8006610:	e11c      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006612:	4b66      	ldr	r3, [pc, #408]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006614:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006618:	f003 0302 	and.w	r3, r3, #2
 800661c:	2b00      	cmp	r3, #0
 800661e:	d0ef      	beq.n	8006600 <HAL_RCC_OscConfig+0x5cc>
 8006620:	e01b      	b.n	800665a <HAL_RCC_OscConfig+0x626>
 8006622:	4b62      	ldr	r3, [pc, #392]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006624:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006628:	4a60      	ldr	r2, [pc, #384]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800662a:	f023 0301 	bic.w	r3, r3, #1
 800662e:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8006632:	f7fd fd1b 	bl	800406c <HAL_GetTick>
 8006636:	6138      	str	r0, [r7, #16]
 8006638:	e008      	b.n	800664c <HAL_RCC_OscConfig+0x618>
 800663a:	f7fd fd17 	bl	800406c <HAL_GetTick>
 800663e:	4602      	mov	r2, r0
 8006640:	693b      	ldr	r3, [r7, #16]
 8006642:	1ad3      	subs	r3, r2, r3
 8006644:	2b02      	cmp	r3, #2
 8006646:	d901      	bls.n	800664c <HAL_RCC_OscConfig+0x618>
 8006648:	2303      	movs	r3, #3
 800664a:	e0ff      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800664c:	4b57      	ldr	r3, [pc, #348]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800664e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8006652:	f003 0302 	and.w	r3, r3, #2
 8006656:	2b00      	cmp	r3, #0
 8006658:	d1ef      	bne.n	800663a <HAL_RCC_OscConfig+0x606>
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800665e:	2b00      	cmp	r3, #0
 8006660:	f000 80f3 	beq.w	800684a <HAL_RCC_OscConfig+0x816>
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006668:	2b02      	cmp	r3, #2
 800666a:	f040 80c9 	bne.w	8006800 <HAL_RCC_OscConfig+0x7cc>
 800666e:	4b4f      	ldr	r3, [pc, #316]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006670:	68db      	ldr	r3, [r3, #12]
 8006672:	617b      	str	r3, [r7, #20]
 8006674:	697b      	ldr	r3, [r7, #20]
 8006676:	f003 0203 	and.w	r2, r3, #3
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800667e:	429a      	cmp	r2, r3
 8006680:	d12c      	bne.n	80066dc <HAL_RCC_OscConfig+0x6a8>
 8006682:	697b      	ldr	r3, [r7, #20]
 8006684:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800668c:	3b01      	subs	r3, #1
 800668e:	011b      	lsls	r3, r3, #4
 8006690:	429a      	cmp	r2, r3
 8006692:	d123      	bne.n	80066dc <HAL_RCC_OscConfig+0x6a8>
 8006694:	697b      	ldr	r3, [r7, #20]
 8006696:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800669e:	021b      	lsls	r3, r3, #8
 80066a0:	429a      	cmp	r2, r3
 80066a2:	d11b      	bne.n	80066dc <HAL_RCC_OscConfig+0x6a8>
 80066a4:	697b      	ldr	r3, [r7, #20]
 80066a6:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066ae:	06db      	lsls	r3, r3, #27
 80066b0:	429a      	cmp	r2, r3
 80066b2:	d113      	bne.n	80066dc <HAL_RCC_OscConfig+0x6a8>
 80066b4:	697b      	ldr	r3, [r7, #20]
 80066b6:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80066be:	085b      	lsrs	r3, r3, #1
 80066c0:	3b01      	subs	r3, #1
 80066c2:	055b      	lsls	r3, r3, #21
 80066c4:	429a      	cmp	r2, r3
 80066c6:	d109      	bne.n	80066dc <HAL_RCC_OscConfig+0x6a8>
 80066c8:	697b      	ldr	r3, [r7, #20]
 80066ca:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80066d2:	085b      	lsrs	r3, r3, #1
 80066d4:	3b01      	subs	r3, #1
 80066d6:	065b      	lsls	r3, r3, #25
 80066d8:	429a      	cmp	r2, r3
 80066da:	d06b      	beq.n	80067b4 <HAL_RCC_OscConfig+0x780>
 80066dc:	69bb      	ldr	r3, [r7, #24]
 80066de:	2b0c      	cmp	r3, #12
 80066e0:	d062      	beq.n	80067a8 <HAL_RCC_OscConfig+0x774>
 80066e2:	4b32      	ldr	r3, [pc, #200]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	d001      	beq.n	80066f2 <HAL_RCC_OscConfig+0x6be>
 80066ee:	2301      	movs	r3, #1
 80066f0:	e0ac      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80066f2:	4b2e      	ldr	r3, [pc, #184]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	4a2d      	ldr	r2, [pc, #180]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 80066f8:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80066fc:	6013      	str	r3, [r2, #0]
 80066fe:	f7fd fcb5 	bl	800406c <HAL_GetTick>
 8006702:	6138      	str	r0, [r7, #16]
 8006704:	e008      	b.n	8006718 <HAL_RCC_OscConfig+0x6e4>
 8006706:	f7fd fcb1 	bl	800406c <HAL_GetTick>
 800670a:	4602      	mov	r2, r0
 800670c:	693b      	ldr	r3, [r7, #16]
 800670e:	1ad3      	subs	r3, r2, r3
 8006710:	2b02      	cmp	r3, #2
 8006712:	d901      	bls.n	8006718 <HAL_RCC_OscConfig+0x6e4>
 8006714:	2303      	movs	r3, #3
 8006716:	e099      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 8006718:	4b24      	ldr	r3, [pc, #144]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800671a:	681b      	ldr	r3, [r3, #0]
 800671c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006720:	2b00      	cmp	r3, #0
 8006722:	d1f0      	bne.n	8006706 <HAL_RCC_OscConfig+0x6d2>
 8006724:	4b21      	ldr	r3, [pc, #132]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006726:	68da      	ldr	r2, [r3, #12]
 8006728:	4b21      	ldr	r3, [pc, #132]	@ (80067b0 <HAL_RCC_OscConfig+0x77c>)
 800672a:	4013      	ands	r3, r2
 800672c:	687a      	ldr	r2, [r7, #4]
 800672e:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8006730:	687a      	ldr	r2, [r7, #4]
 8006732:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8006734:	3a01      	subs	r2, #1
 8006736:	0112      	lsls	r2, r2, #4
 8006738:	4311      	orrs	r1, r2
 800673a:	687a      	ldr	r2, [r7, #4]
 800673c:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800673e:	0212      	lsls	r2, r2, #8
 8006740:	4311      	orrs	r1, r2
 8006742:	687a      	ldr	r2, [r7, #4]
 8006744:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8006746:	0852      	lsrs	r2, r2, #1
 8006748:	3a01      	subs	r2, #1
 800674a:	0552      	lsls	r2, r2, #21
 800674c:	4311      	orrs	r1, r2
 800674e:	687a      	ldr	r2, [r7, #4]
 8006750:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8006752:	0852      	lsrs	r2, r2, #1
 8006754:	3a01      	subs	r2, #1
 8006756:	0652      	lsls	r2, r2, #25
 8006758:	4311      	orrs	r1, r2
 800675a:	687a      	ldr	r2, [r7, #4]
 800675c:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800675e:	06d2      	lsls	r2, r2, #27
 8006760:	430a      	orrs	r2, r1
 8006762:	4912      	ldr	r1, [pc, #72]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006764:	4313      	orrs	r3, r2
 8006766:	60cb      	str	r3, [r1, #12]
 8006768:	4b10      	ldr	r3, [pc, #64]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800676a:	681b      	ldr	r3, [r3, #0]
 800676c:	4a0f      	ldr	r2, [pc, #60]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800676e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006772:	6013      	str	r3, [r2, #0]
 8006774:	4b0d      	ldr	r3, [pc, #52]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 8006776:	68db      	ldr	r3, [r3, #12]
 8006778:	4a0c      	ldr	r2, [pc, #48]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800677a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800677e:	60d3      	str	r3, [r2, #12]
 8006780:	f7fd fc74 	bl	800406c <HAL_GetTick>
 8006784:	6138      	str	r0, [r7, #16]
 8006786:	e008      	b.n	800679a <HAL_RCC_OscConfig+0x766>
 8006788:	f7fd fc70 	bl	800406c <HAL_GetTick>
 800678c:	4602      	mov	r2, r0
 800678e:	693b      	ldr	r3, [r7, #16]
 8006790:	1ad3      	subs	r3, r2, r3
 8006792:	2b02      	cmp	r3, #2
 8006794:	d901      	bls.n	800679a <HAL_RCC_OscConfig+0x766>
 8006796:	2303      	movs	r3, #3
 8006798:	e058      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800679a:	4b04      	ldr	r3, [pc, #16]	@ (80067ac <HAL_RCC_OscConfig+0x778>)
 800679c:	681b      	ldr	r3, [r3, #0]
 800679e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80067a2:	2b00      	cmp	r3, #0
 80067a4:	d0f0      	beq.n	8006788 <HAL_RCC_OscConfig+0x754>
 80067a6:	e050      	b.n	800684a <HAL_RCC_OscConfig+0x816>
 80067a8:	2301      	movs	r3, #1
 80067aa:	e04f      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80067ac:	40021000 	.word	0x40021000
 80067b0:	019d808c 	.word	0x019d808c
 80067b4:	4b27      	ldr	r3, [pc, #156]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 80067b6:	681b      	ldr	r3, [r3, #0]
 80067b8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80067bc:	2b00      	cmp	r3, #0
 80067be:	d144      	bne.n	800684a <HAL_RCC_OscConfig+0x816>
 80067c0:	4b24      	ldr	r3, [pc, #144]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	4a23      	ldr	r2, [pc, #140]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 80067c6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80067ca:	6013      	str	r3, [r2, #0]
 80067cc:	4b21      	ldr	r3, [pc, #132]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 80067ce:	68db      	ldr	r3, [r3, #12]
 80067d0:	4a20      	ldr	r2, [pc, #128]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 80067d2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80067d6:	60d3      	str	r3, [r2, #12]
 80067d8:	f7fd fc48 	bl	800406c <HAL_GetTick>
 80067dc:	6138      	str	r0, [r7, #16]
 80067de:	e008      	b.n	80067f2 <HAL_RCC_OscConfig+0x7be>
 80067e0:	f7fd fc44 	bl	800406c <HAL_GetTick>
 80067e4:	4602      	mov	r2, r0
 80067e6:	693b      	ldr	r3, [r7, #16]
 80067e8:	1ad3      	subs	r3, r2, r3
 80067ea:	2b02      	cmp	r3, #2
 80067ec:	d901      	bls.n	80067f2 <HAL_RCC_OscConfig+0x7be>
 80067ee:	2303      	movs	r3, #3
 80067f0:	e02c      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 80067f2:	4b18      	ldr	r3, [pc, #96]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d0f0      	beq.n	80067e0 <HAL_RCC_OscConfig+0x7ac>
 80067fe:	e024      	b.n	800684a <HAL_RCC_OscConfig+0x816>
 8006800:	69bb      	ldr	r3, [r7, #24]
 8006802:	2b0c      	cmp	r3, #12
 8006804:	d01f      	beq.n	8006846 <HAL_RCC_OscConfig+0x812>
 8006806:	4b13      	ldr	r3, [pc, #76]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	4a12      	ldr	r2, [pc, #72]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 800680c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006810:	6013      	str	r3, [r2, #0]
 8006812:	f7fd fc2b 	bl	800406c <HAL_GetTick>
 8006816:	6138      	str	r0, [r7, #16]
 8006818:	e008      	b.n	800682c <HAL_RCC_OscConfig+0x7f8>
 800681a:	f7fd fc27 	bl	800406c <HAL_GetTick>
 800681e:	4602      	mov	r2, r0
 8006820:	693b      	ldr	r3, [r7, #16]
 8006822:	1ad3      	subs	r3, r2, r3
 8006824:	2b02      	cmp	r3, #2
 8006826:	d901      	bls.n	800682c <HAL_RCC_OscConfig+0x7f8>
 8006828:	2303      	movs	r3, #3
 800682a:	e00f      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800682c:	4b09      	ldr	r3, [pc, #36]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 800682e:	681b      	ldr	r3, [r3, #0]
 8006830:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006834:	2b00      	cmp	r3, #0
 8006836:	d1f0      	bne.n	800681a <HAL_RCC_OscConfig+0x7e6>
 8006838:	4b06      	ldr	r3, [pc, #24]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 800683a:	68da      	ldr	r2, [r3, #12]
 800683c:	4905      	ldr	r1, [pc, #20]	@ (8006854 <HAL_RCC_OscConfig+0x820>)
 800683e:	4b06      	ldr	r3, [pc, #24]	@ (8006858 <HAL_RCC_OscConfig+0x824>)
 8006840:	4013      	ands	r3, r2
 8006842:	60cb      	str	r3, [r1, #12]
 8006844:	e001      	b.n	800684a <HAL_RCC_OscConfig+0x816>
 8006846:	2301      	movs	r3, #1
 8006848:	e000      	b.n	800684c <HAL_RCC_OscConfig+0x818>
 800684a:	2300      	movs	r3, #0
 800684c:	4618      	mov	r0, r3
 800684e:	3720      	adds	r7, #32
 8006850:	46bd      	mov	sp, r7
 8006852:	bd80      	pop	{r7, pc}
 8006854:	40021000 	.word	0x40021000
 8006858:	feeefffc 	.word	0xfeeefffc

0800685c <HAL_RCC_ClockConfig>:
 800685c:	b580      	push	{r7, lr}
 800685e:	b084      	sub	sp, #16
 8006860:	af00      	add	r7, sp, #0
 8006862:	6078      	str	r0, [r7, #4]
 8006864:	6039      	str	r1, [r7, #0]
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	2b00      	cmp	r3, #0
 800686a:	d101      	bne.n	8006870 <HAL_RCC_ClockConfig+0x14>
 800686c:	2301      	movs	r3, #1
 800686e:	e0e7      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 8006870:	4b75      	ldr	r3, [pc, #468]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	f003 0307 	and.w	r3, r3, #7
 8006878:	683a      	ldr	r2, [r7, #0]
 800687a:	429a      	cmp	r2, r3
 800687c:	d910      	bls.n	80068a0 <HAL_RCC_ClockConfig+0x44>
 800687e:	4b72      	ldr	r3, [pc, #456]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 8006880:	681b      	ldr	r3, [r3, #0]
 8006882:	f023 0207 	bic.w	r2, r3, #7
 8006886:	4970      	ldr	r1, [pc, #448]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 8006888:	683b      	ldr	r3, [r7, #0]
 800688a:	4313      	orrs	r3, r2
 800688c:	600b      	str	r3, [r1, #0]
 800688e:	4b6e      	ldr	r3, [pc, #440]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 8006890:	681b      	ldr	r3, [r3, #0]
 8006892:	f003 0307 	and.w	r3, r3, #7
 8006896:	683a      	ldr	r2, [r7, #0]
 8006898:	429a      	cmp	r2, r3
 800689a:	d001      	beq.n	80068a0 <HAL_RCC_ClockConfig+0x44>
 800689c:	2301      	movs	r3, #1
 800689e:	e0cf      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	f003 0302 	and.w	r3, r3, #2
 80068a8:	2b00      	cmp	r3, #0
 80068aa:	d010      	beq.n	80068ce <HAL_RCC_ClockConfig+0x72>
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	689a      	ldr	r2, [r3, #8]
 80068b0:	4b66      	ldr	r3, [pc, #408]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80068b2:	689b      	ldr	r3, [r3, #8]
 80068b4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80068b8:	429a      	cmp	r2, r3
 80068ba:	d908      	bls.n	80068ce <HAL_RCC_ClockConfig+0x72>
 80068bc:	4b63      	ldr	r3, [pc, #396]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80068be:	689b      	ldr	r3, [r3, #8]
 80068c0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	689b      	ldr	r3, [r3, #8]
 80068c8:	4960      	ldr	r1, [pc, #384]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80068ca:	4313      	orrs	r3, r2
 80068cc:	608b      	str	r3, [r1, #8]
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	f003 0301 	and.w	r3, r3, #1
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	d04c      	beq.n	8006974 <HAL_RCC_ClockConfig+0x118>
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	685b      	ldr	r3, [r3, #4]
 80068de:	2b03      	cmp	r3, #3
 80068e0:	d107      	bne.n	80068f2 <HAL_RCC_ClockConfig+0x96>
 80068e2:	4b5a      	ldr	r3, [pc, #360]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80068e4:	681b      	ldr	r3, [r3, #0]
 80068e6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80068ea:	2b00      	cmp	r3, #0
 80068ec:	d121      	bne.n	8006932 <HAL_RCC_ClockConfig+0xd6>
 80068ee:	2301      	movs	r3, #1
 80068f0:	e0a6      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	685b      	ldr	r3, [r3, #4]
 80068f6:	2b02      	cmp	r3, #2
 80068f8:	d107      	bne.n	800690a <HAL_RCC_ClockConfig+0xae>
 80068fa:	4b54      	ldr	r3, [pc, #336]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006902:	2b00      	cmp	r3, #0
 8006904:	d115      	bne.n	8006932 <HAL_RCC_ClockConfig+0xd6>
 8006906:	2301      	movs	r3, #1
 8006908:	e09a      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 800690a:	687b      	ldr	r3, [r7, #4]
 800690c:	685b      	ldr	r3, [r3, #4]
 800690e:	2b00      	cmp	r3, #0
 8006910:	d107      	bne.n	8006922 <HAL_RCC_ClockConfig+0xc6>
 8006912:	4b4e      	ldr	r3, [pc, #312]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	f003 0302 	and.w	r3, r3, #2
 800691a:	2b00      	cmp	r3, #0
 800691c:	d109      	bne.n	8006932 <HAL_RCC_ClockConfig+0xd6>
 800691e:	2301      	movs	r3, #1
 8006920:	e08e      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 8006922:	4b4a      	ldr	r3, [pc, #296]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800692a:	2b00      	cmp	r3, #0
 800692c:	d101      	bne.n	8006932 <HAL_RCC_ClockConfig+0xd6>
 800692e:	2301      	movs	r3, #1
 8006930:	e086      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 8006932:	4b46      	ldr	r3, [pc, #280]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006934:	689b      	ldr	r3, [r3, #8]
 8006936:	f023 0203 	bic.w	r2, r3, #3
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	685b      	ldr	r3, [r3, #4]
 800693e:	4943      	ldr	r1, [pc, #268]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006940:	4313      	orrs	r3, r2
 8006942:	608b      	str	r3, [r1, #8]
 8006944:	f7fd fb92 	bl	800406c <HAL_GetTick>
 8006948:	60f8      	str	r0, [r7, #12]
 800694a:	e00a      	b.n	8006962 <HAL_RCC_ClockConfig+0x106>
 800694c:	f7fd fb8e 	bl	800406c <HAL_GetTick>
 8006950:	4602      	mov	r2, r0
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	1ad3      	subs	r3, r2, r3
 8006956:	f241 3288 	movw	r2, #5000	@ 0x1388
 800695a:	4293      	cmp	r3, r2
 800695c:	d901      	bls.n	8006962 <HAL_RCC_ClockConfig+0x106>
 800695e:	2303      	movs	r3, #3
 8006960:	e06e      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 8006962:	4b3a      	ldr	r3, [pc, #232]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006964:	689b      	ldr	r3, [r3, #8]
 8006966:	f003 020c 	and.w	r2, r3, #12
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	685b      	ldr	r3, [r3, #4]
 800696e:	009b      	lsls	r3, r3, #2
 8006970:	429a      	cmp	r2, r3
 8006972:	d1eb      	bne.n	800694c <HAL_RCC_ClockConfig+0xf0>
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	f003 0302 	and.w	r3, r3, #2
 800697c:	2b00      	cmp	r3, #0
 800697e:	d010      	beq.n	80069a2 <HAL_RCC_ClockConfig+0x146>
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	689a      	ldr	r2, [r3, #8]
 8006984:	4b31      	ldr	r3, [pc, #196]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006986:	689b      	ldr	r3, [r3, #8]
 8006988:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800698c:	429a      	cmp	r2, r3
 800698e:	d208      	bcs.n	80069a2 <HAL_RCC_ClockConfig+0x146>
 8006990:	4b2e      	ldr	r3, [pc, #184]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006992:	689b      	ldr	r3, [r3, #8]
 8006994:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	689b      	ldr	r3, [r3, #8]
 800699c:	492b      	ldr	r1, [pc, #172]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 800699e:	4313      	orrs	r3, r2
 80069a0:	608b      	str	r3, [r1, #8]
 80069a2:	4b29      	ldr	r3, [pc, #164]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	f003 0307 	and.w	r3, r3, #7
 80069aa:	683a      	ldr	r2, [r7, #0]
 80069ac:	429a      	cmp	r2, r3
 80069ae:	d210      	bcs.n	80069d2 <HAL_RCC_ClockConfig+0x176>
 80069b0:	4b25      	ldr	r3, [pc, #148]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	f023 0207 	bic.w	r2, r3, #7
 80069b8:	4923      	ldr	r1, [pc, #140]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 80069ba:	683b      	ldr	r3, [r7, #0]
 80069bc:	4313      	orrs	r3, r2
 80069be:	600b      	str	r3, [r1, #0]
 80069c0:	4b21      	ldr	r3, [pc, #132]	@ (8006a48 <HAL_RCC_ClockConfig+0x1ec>)
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	f003 0307 	and.w	r3, r3, #7
 80069c8:	683a      	ldr	r2, [r7, #0]
 80069ca:	429a      	cmp	r2, r3
 80069cc:	d001      	beq.n	80069d2 <HAL_RCC_ClockConfig+0x176>
 80069ce:	2301      	movs	r3, #1
 80069d0:	e036      	b.n	8006a40 <HAL_RCC_ClockConfig+0x1e4>
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	681b      	ldr	r3, [r3, #0]
 80069d6:	f003 0304 	and.w	r3, r3, #4
 80069da:	2b00      	cmp	r3, #0
 80069dc:	d008      	beq.n	80069f0 <HAL_RCC_ClockConfig+0x194>
 80069de:	4b1b      	ldr	r3, [pc, #108]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80069e0:	689b      	ldr	r3, [r3, #8]
 80069e2:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	68db      	ldr	r3, [r3, #12]
 80069ea:	4918      	ldr	r1, [pc, #96]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80069ec:	4313      	orrs	r3, r2
 80069ee:	608b      	str	r3, [r1, #8]
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	f003 0308 	and.w	r3, r3, #8
 80069f8:	2b00      	cmp	r3, #0
 80069fa:	d009      	beq.n	8006a10 <HAL_RCC_ClockConfig+0x1b4>
 80069fc:	4b13      	ldr	r3, [pc, #76]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 80069fe:	689b      	ldr	r3, [r3, #8]
 8006a00:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	691b      	ldr	r3, [r3, #16]
 8006a08:	00db      	lsls	r3, r3, #3
 8006a0a:	4910      	ldr	r1, [pc, #64]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006a0c:	4313      	orrs	r3, r2
 8006a0e:	608b      	str	r3, [r1, #8]
 8006a10:	f000 f858 	bl	8006ac4 <HAL_RCC_GetSysClockFreq>
 8006a14:	4602      	mov	r2, r0
 8006a16:	4b0d      	ldr	r3, [pc, #52]	@ (8006a4c <HAL_RCC_ClockConfig+0x1f0>)
 8006a18:	689b      	ldr	r3, [r3, #8]
 8006a1a:	091b      	lsrs	r3, r3, #4
 8006a1c:	f003 030f 	and.w	r3, r3, #15
 8006a20:	490b      	ldr	r1, [pc, #44]	@ (8006a50 <HAL_RCC_ClockConfig+0x1f4>)
 8006a22:	5ccb      	ldrb	r3, [r1, r3]
 8006a24:	f003 031f 	and.w	r3, r3, #31
 8006a28:	fa22 f303 	lsr.w	r3, r2, r3
 8006a2c:	4a09      	ldr	r2, [pc, #36]	@ (8006a54 <HAL_RCC_ClockConfig+0x1f8>)
 8006a2e:	6013      	str	r3, [r2, #0]
 8006a30:	4b09      	ldr	r3, [pc, #36]	@ (8006a58 <HAL_RCC_ClockConfig+0x1fc>)
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	4618      	mov	r0, r3
 8006a36:	f7fd fac9 	bl	8003fcc <HAL_InitTick>
 8006a3a:	4603      	mov	r3, r0
 8006a3c:	72fb      	strb	r3, [r7, #11]
 8006a3e:	7afb      	ldrb	r3, [r7, #11]
 8006a40:	4618      	mov	r0, r3
 8006a42:	3710      	adds	r7, #16
 8006a44:	46bd      	mov	sp, r7
 8006a46:	bd80      	pop	{r7, pc}
 8006a48:	40022000 	.word	0x40022000
 8006a4c:	40021000 	.word	0x40021000
 8006a50:	0800d294 	.word	0x0800d294
 8006a54:	200000a0 	.word	0x200000a0
 8006a58:	200000a4 	.word	0x200000a4

08006a5c <HAL_RCC_MCOConfig>:
 8006a5c:	b580      	push	{r7, lr}
 8006a5e:	b08a      	sub	sp, #40	@ 0x28
 8006a60:	af00      	add	r7, sp, #0
 8006a62:	60f8      	str	r0, [r7, #12]
 8006a64:	60b9      	str	r1, [r7, #8]
 8006a66:	607a      	str	r2, [r7, #4]
 8006a68:	4b15      	ldr	r3, [pc, #84]	@ (8006ac0 <HAL_RCC_MCOConfig+0x64>)
 8006a6a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006a6c:	4a14      	ldr	r2, [pc, #80]	@ (8006ac0 <HAL_RCC_MCOConfig+0x64>)
 8006a6e:	f043 0301 	orr.w	r3, r3, #1
 8006a72:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8006a74:	4b12      	ldr	r3, [pc, #72]	@ (8006ac0 <HAL_RCC_MCOConfig+0x64>)
 8006a76:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006a78:	f003 0301 	and.w	r3, r3, #1
 8006a7c:	613b      	str	r3, [r7, #16]
 8006a7e:	693b      	ldr	r3, [r7, #16]
 8006a80:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006a84:	617b      	str	r3, [r7, #20]
 8006a86:	2302      	movs	r3, #2
 8006a88:	61bb      	str	r3, [r7, #24]
 8006a8a:	2302      	movs	r3, #2
 8006a8c:	623b      	str	r3, [r7, #32]
 8006a8e:	2300      	movs	r3, #0
 8006a90:	61fb      	str	r3, [r7, #28]
 8006a92:	2300      	movs	r3, #0
 8006a94:	627b      	str	r3, [r7, #36]	@ 0x24
 8006a96:	f107 0314 	add.w	r3, r7, #20
 8006a9a:	4619      	mov	r1, r3
 8006a9c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8006aa0:	f7ff f8b8 	bl	8005c14 <HAL_GPIO_Init>
 8006aa4:	4b06      	ldr	r3, [pc, #24]	@ (8006ac0 <HAL_RCC_MCOConfig+0x64>)
 8006aa6:	689b      	ldr	r3, [r3, #8]
 8006aa8:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006aac:	68b9      	ldr	r1, [r7, #8]
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	430b      	orrs	r3, r1
 8006ab2:	4903      	ldr	r1, [pc, #12]	@ (8006ac0 <HAL_RCC_MCOConfig+0x64>)
 8006ab4:	4313      	orrs	r3, r2
 8006ab6:	608b      	str	r3, [r1, #8]
 8006ab8:	bf00      	nop
 8006aba:	3728      	adds	r7, #40	@ 0x28
 8006abc:	46bd      	mov	sp, r7
 8006abe:	bd80      	pop	{r7, pc}
 8006ac0:	40021000 	.word	0x40021000

08006ac4 <HAL_RCC_GetSysClockFreq>:
 8006ac4:	b480      	push	{r7}
 8006ac6:	b089      	sub	sp, #36	@ 0x24
 8006ac8:	af00      	add	r7, sp, #0
 8006aca:	2300      	movs	r3, #0
 8006acc:	61fb      	str	r3, [r7, #28]
 8006ace:	2300      	movs	r3, #0
 8006ad0:	61bb      	str	r3, [r7, #24]
 8006ad2:	4b3e      	ldr	r3, [pc, #248]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006ad4:	689b      	ldr	r3, [r3, #8]
 8006ad6:	f003 030c 	and.w	r3, r3, #12
 8006ada:	613b      	str	r3, [r7, #16]
 8006adc:	4b3b      	ldr	r3, [pc, #236]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006ade:	68db      	ldr	r3, [r3, #12]
 8006ae0:	f003 0303 	and.w	r3, r3, #3
 8006ae4:	60fb      	str	r3, [r7, #12]
 8006ae6:	693b      	ldr	r3, [r7, #16]
 8006ae8:	2b00      	cmp	r3, #0
 8006aea:	d005      	beq.n	8006af8 <HAL_RCC_GetSysClockFreq+0x34>
 8006aec:	693b      	ldr	r3, [r7, #16]
 8006aee:	2b0c      	cmp	r3, #12
 8006af0:	d121      	bne.n	8006b36 <HAL_RCC_GetSysClockFreq+0x72>
 8006af2:	68fb      	ldr	r3, [r7, #12]
 8006af4:	2b01      	cmp	r3, #1
 8006af6:	d11e      	bne.n	8006b36 <HAL_RCC_GetSysClockFreq+0x72>
 8006af8:	4b34      	ldr	r3, [pc, #208]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006afa:	681b      	ldr	r3, [r3, #0]
 8006afc:	f003 0308 	and.w	r3, r3, #8
 8006b00:	2b00      	cmp	r3, #0
 8006b02:	d107      	bne.n	8006b14 <HAL_RCC_GetSysClockFreq+0x50>
 8006b04:	4b31      	ldr	r3, [pc, #196]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006b06:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006b0a:	0a1b      	lsrs	r3, r3, #8
 8006b0c:	f003 030f 	and.w	r3, r3, #15
 8006b10:	61fb      	str	r3, [r7, #28]
 8006b12:	e005      	b.n	8006b20 <HAL_RCC_GetSysClockFreq+0x5c>
 8006b14:	4b2d      	ldr	r3, [pc, #180]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006b16:	681b      	ldr	r3, [r3, #0]
 8006b18:	091b      	lsrs	r3, r3, #4
 8006b1a:	f003 030f 	and.w	r3, r3, #15
 8006b1e:	61fb      	str	r3, [r7, #28]
 8006b20:	4a2b      	ldr	r2, [pc, #172]	@ (8006bd0 <HAL_RCC_GetSysClockFreq+0x10c>)
 8006b22:	69fb      	ldr	r3, [r7, #28]
 8006b24:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006b28:	61fb      	str	r3, [r7, #28]
 8006b2a:	693b      	ldr	r3, [r7, #16]
 8006b2c:	2b00      	cmp	r3, #0
 8006b2e:	d10d      	bne.n	8006b4c <HAL_RCC_GetSysClockFreq+0x88>
 8006b30:	69fb      	ldr	r3, [r7, #28]
 8006b32:	61bb      	str	r3, [r7, #24]
 8006b34:	e00a      	b.n	8006b4c <HAL_RCC_GetSysClockFreq+0x88>
 8006b36:	693b      	ldr	r3, [r7, #16]
 8006b38:	2b04      	cmp	r3, #4
 8006b3a:	d102      	bne.n	8006b42 <HAL_RCC_GetSysClockFreq+0x7e>
 8006b3c:	4b25      	ldr	r3, [pc, #148]	@ (8006bd4 <HAL_RCC_GetSysClockFreq+0x110>)
 8006b3e:	61bb      	str	r3, [r7, #24]
 8006b40:	e004      	b.n	8006b4c <HAL_RCC_GetSysClockFreq+0x88>
 8006b42:	693b      	ldr	r3, [r7, #16]
 8006b44:	2b08      	cmp	r3, #8
 8006b46:	d101      	bne.n	8006b4c <HAL_RCC_GetSysClockFreq+0x88>
 8006b48:	4b23      	ldr	r3, [pc, #140]	@ (8006bd8 <HAL_RCC_GetSysClockFreq+0x114>)
 8006b4a:	61bb      	str	r3, [r7, #24]
 8006b4c:	693b      	ldr	r3, [r7, #16]
 8006b4e:	2b0c      	cmp	r3, #12
 8006b50:	d134      	bne.n	8006bbc <HAL_RCC_GetSysClockFreq+0xf8>
 8006b52:	4b1e      	ldr	r3, [pc, #120]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006b54:	68db      	ldr	r3, [r3, #12]
 8006b56:	f003 0303 	and.w	r3, r3, #3
 8006b5a:	60bb      	str	r3, [r7, #8]
 8006b5c:	68bb      	ldr	r3, [r7, #8]
 8006b5e:	2b02      	cmp	r3, #2
 8006b60:	d003      	beq.n	8006b6a <HAL_RCC_GetSysClockFreq+0xa6>
 8006b62:	68bb      	ldr	r3, [r7, #8]
 8006b64:	2b03      	cmp	r3, #3
 8006b66:	d003      	beq.n	8006b70 <HAL_RCC_GetSysClockFreq+0xac>
 8006b68:	e005      	b.n	8006b76 <HAL_RCC_GetSysClockFreq+0xb2>
 8006b6a:	4b1a      	ldr	r3, [pc, #104]	@ (8006bd4 <HAL_RCC_GetSysClockFreq+0x110>)
 8006b6c:	617b      	str	r3, [r7, #20]
 8006b6e:	e005      	b.n	8006b7c <HAL_RCC_GetSysClockFreq+0xb8>
 8006b70:	4b19      	ldr	r3, [pc, #100]	@ (8006bd8 <HAL_RCC_GetSysClockFreq+0x114>)
 8006b72:	617b      	str	r3, [r7, #20]
 8006b74:	e002      	b.n	8006b7c <HAL_RCC_GetSysClockFreq+0xb8>
 8006b76:	69fb      	ldr	r3, [r7, #28]
 8006b78:	617b      	str	r3, [r7, #20]
 8006b7a:	bf00      	nop
 8006b7c:	4b13      	ldr	r3, [pc, #76]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006b7e:	68db      	ldr	r3, [r3, #12]
 8006b80:	091b      	lsrs	r3, r3, #4
 8006b82:	f003 0307 	and.w	r3, r3, #7
 8006b86:	3301      	adds	r3, #1
 8006b88:	607b      	str	r3, [r7, #4]
 8006b8a:	4b10      	ldr	r3, [pc, #64]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006b8c:	68db      	ldr	r3, [r3, #12]
 8006b8e:	0a1b      	lsrs	r3, r3, #8
 8006b90:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006b94:	697a      	ldr	r2, [r7, #20]
 8006b96:	fb03 f202 	mul.w	r2, r3, r2
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006ba0:	617b      	str	r3, [r7, #20]
 8006ba2:	4b0a      	ldr	r3, [pc, #40]	@ (8006bcc <HAL_RCC_GetSysClockFreq+0x108>)
 8006ba4:	68db      	ldr	r3, [r3, #12]
 8006ba6:	0e5b      	lsrs	r3, r3, #25
 8006ba8:	f003 0303 	and.w	r3, r3, #3
 8006bac:	3301      	adds	r3, #1
 8006bae:	005b      	lsls	r3, r3, #1
 8006bb0:	603b      	str	r3, [r7, #0]
 8006bb2:	697a      	ldr	r2, [r7, #20]
 8006bb4:	683b      	ldr	r3, [r7, #0]
 8006bb6:	fbb2 f3f3 	udiv	r3, r2, r3
 8006bba:	61bb      	str	r3, [r7, #24]
 8006bbc:	69bb      	ldr	r3, [r7, #24]
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	3724      	adds	r7, #36	@ 0x24
 8006bc2:	46bd      	mov	sp, r7
 8006bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bc8:	4770      	bx	lr
 8006bca:	bf00      	nop
 8006bcc:	40021000 	.word	0x40021000
 8006bd0:	0800d2ac 	.word	0x0800d2ac
 8006bd4:	00f42400 	.word	0x00f42400
 8006bd8:	007a1200 	.word	0x007a1200

08006bdc <HAL_RCC_GetHCLKFreq>:
 8006bdc:	b480      	push	{r7}
 8006bde:	af00      	add	r7, sp, #0
 8006be0:	4b03      	ldr	r3, [pc, #12]	@ (8006bf0 <HAL_RCC_GetHCLKFreq+0x14>)
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	4618      	mov	r0, r3
 8006be6:	46bd      	mov	sp, r7
 8006be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bec:	4770      	bx	lr
 8006bee:	bf00      	nop
 8006bf0:	200000a0 	.word	0x200000a0

08006bf4 <HAL_RCC_GetPCLK1Freq>:
 8006bf4:	b580      	push	{r7, lr}
 8006bf6:	af00      	add	r7, sp, #0
 8006bf8:	f7ff fff0 	bl	8006bdc <HAL_RCC_GetHCLKFreq>
 8006bfc:	4602      	mov	r2, r0
 8006bfe:	4b06      	ldr	r3, [pc, #24]	@ (8006c18 <HAL_RCC_GetPCLK1Freq+0x24>)
 8006c00:	689b      	ldr	r3, [r3, #8]
 8006c02:	0a1b      	lsrs	r3, r3, #8
 8006c04:	f003 0307 	and.w	r3, r3, #7
 8006c08:	4904      	ldr	r1, [pc, #16]	@ (8006c1c <HAL_RCC_GetPCLK1Freq+0x28>)
 8006c0a:	5ccb      	ldrb	r3, [r1, r3]
 8006c0c:	f003 031f 	and.w	r3, r3, #31
 8006c10:	fa22 f303 	lsr.w	r3, r2, r3
 8006c14:	4618      	mov	r0, r3
 8006c16:	bd80      	pop	{r7, pc}
 8006c18:	40021000 	.word	0x40021000
 8006c1c:	0800d2a4 	.word	0x0800d2a4

08006c20 <HAL_RCC_GetPCLK2Freq>:
 8006c20:	b580      	push	{r7, lr}
 8006c22:	af00      	add	r7, sp, #0
 8006c24:	f7ff ffda 	bl	8006bdc <HAL_RCC_GetHCLKFreq>
 8006c28:	4602      	mov	r2, r0
 8006c2a:	4b06      	ldr	r3, [pc, #24]	@ (8006c44 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006c2c:	689b      	ldr	r3, [r3, #8]
 8006c2e:	0adb      	lsrs	r3, r3, #11
 8006c30:	f003 0307 	and.w	r3, r3, #7
 8006c34:	4904      	ldr	r1, [pc, #16]	@ (8006c48 <HAL_RCC_GetPCLK2Freq+0x28>)
 8006c36:	5ccb      	ldrb	r3, [r1, r3]
 8006c38:	f003 031f 	and.w	r3, r3, #31
 8006c3c:	fa22 f303 	lsr.w	r3, r2, r3
 8006c40:	4618      	mov	r0, r3
 8006c42:	bd80      	pop	{r7, pc}
 8006c44:	40021000 	.word	0x40021000
 8006c48:	0800d2a4 	.word	0x0800d2a4

08006c4c <RCC_SetFlashLatencyFromMSIRange>:
 8006c4c:	b580      	push	{r7, lr}
 8006c4e:	b086      	sub	sp, #24
 8006c50:	af00      	add	r7, sp, #0
 8006c52:	6078      	str	r0, [r7, #4]
 8006c54:	2300      	movs	r3, #0
 8006c56:	613b      	str	r3, [r7, #16]
 8006c58:	4b2a      	ldr	r3, [pc, #168]	@ (8006d04 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006c5a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006c5c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006c60:	2b00      	cmp	r3, #0
 8006c62:	d003      	beq.n	8006c6c <RCC_SetFlashLatencyFromMSIRange+0x20>
 8006c64:	f7ff f982 	bl	8005f6c <HAL_PWREx_GetVoltageRange>
 8006c68:	6178      	str	r0, [r7, #20]
 8006c6a:	e014      	b.n	8006c96 <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8006c6c:	4b25      	ldr	r3, [pc, #148]	@ (8006d04 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006c6e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006c70:	4a24      	ldr	r2, [pc, #144]	@ (8006d04 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006c72:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006c76:	6593      	str	r3, [r2, #88]	@ 0x58
 8006c78:	4b22      	ldr	r3, [pc, #136]	@ (8006d04 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006c7a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006c7c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006c80:	60fb      	str	r3, [r7, #12]
 8006c82:	68fb      	ldr	r3, [r7, #12]
 8006c84:	f7ff f972 	bl	8005f6c <HAL_PWREx_GetVoltageRange>
 8006c88:	6178      	str	r0, [r7, #20]
 8006c8a:	4b1e      	ldr	r3, [pc, #120]	@ (8006d04 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006c8c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006c8e:	4a1d      	ldr	r2, [pc, #116]	@ (8006d04 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8006c90:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006c94:	6593      	str	r3, [r2, #88]	@ 0x58
 8006c96:	697b      	ldr	r3, [r7, #20]
 8006c98:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006c9c:	d10b      	bne.n	8006cb6 <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	2b80      	cmp	r3, #128	@ 0x80
 8006ca2:	d919      	bls.n	8006cd8 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	2ba0      	cmp	r3, #160	@ 0xa0
 8006ca8:	d902      	bls.n	8006cb0 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8006caa:	2302      	movs	r3, #2
 8006cac:	613b      	str	r3, [r7, #16]
 8006cae:	e013      	b.n	8006cd8 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8006cb0:	2301      	movs	r3, #1
 8006cb2:	613b      	str	r3, [r7, #16]
 8006cb4:	e010      	b.n	8006cd8 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	2b80      	cmp	r3, #128	@ 0x80
 8006cba:	d902      	bls.n	8006cc2 <RCC_SetFlashLatencyFromMSIRange+0x76>
 8006cbc:	2303      	movs	r3, #3
 8006cbe:	613b      	str	r3, [r7, #16]
 8006cc0:	e00a      	b.n	8006cd8 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	2b80      	cmp	r3, #128	@ 0x80
 8006cc6:	d102      	bne.n	8006cce <RCC_SetFlashLatencyFromMSIRange+0x82>
 8006cc8:	2302      	movs	r3, #2
 8006cca:	613b      	str	r3, [r7, #16]
 8006ccc:	e004      	b.n	8006cd8 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	2b70      	cmp	r3, #112	@ 0x70
 8006cd2:	d101      	bne.n	8006cd8 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8006cd4:	2301      	movs	r3, #1
 8006cd6:	613b      	str	r3, [r7, #16]
 8006cd8:	4b0b      	ldr	r3, [pc, #44]	@ (8006d08 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8006cda:	681b      	ldr	r3, [r3, #0]
 8006cdc:	f023 0207 	bic.w	r2, r3, #7
 8006ce0:	4909      	ldr	r1, [pc, #36]	@ (8006d08 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8006ce2:	693b      	ldr	r3, [r7, #16]
 8006ce4:	4313      	orrs	r3, r2
 8006ce6:	600b      	str	r3, [r1, #0]
 8006ce8:	4b07      	ldr	r3, [pc, #28]	@ (8006d08 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8006cea:	681b      	ldr	r3, [r3, #0]
 8006cec:	f003 0307 	and.w	r3, r3, #7
 8006cf0:	693a      	ldr	r2, [r7, #16]
 8006cf2:	429a      	cmp	r2, r3
 8006cf4:	d001      	beq.n	8006cfa <RCC_SetFlashLatencyFromMSIRange+0xae>
 8006cf6:	2301      	movs	r3, #1
 8006cf8:	e000      	b.n	8006cfc <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8006cfa:	2300      	movs	r3, #0
 8006cfc:	4618      	mov	r0, r3
 8006cfe:	3718      	adds	r7, #24
 8006d00:	46bd      	mov	sp, r7
 8006d02:	bd80      	pop	{r7, pc}
 8006d04:	40021000 	.word	0x40021000
 8006d08:	40022000 	.word	0x40022000

08006d0c <HAL_RCCEx_PeriphCLKConfig>:
 8006d0c:	b580      	push	{r7, lr}
 8006d0e:	b086      	sub	sp, #24
 8006d10:	af00      	add	r7, sp, #0
 8006d12:	6078      	str	r0, [r7, #4]
 8006d14:	2300      	movs	r3, #0
 8006d16:	74fb      	strb	r3, [r7, #19]
 8006d18:	2300      	movs	r3, #0
 8006d1a:	74bb      	strb	r3, [r7, #18]
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006d24:	2b00      	cmp	r3, #0
 8006d26:	d031      	beq.n	8006d8c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006d2c:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8006d30:	d01a      	beq.n	8006d68 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8006d32:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8006d36:	d814      	bhi.n	8006d62 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8006d38:	2b00      	cmp	r3, #0
 8006d3a:	d009      	beq.n	8006d50 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8006d3c:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8006d40:	d10f      	bne.n	8006d62 <HAL_RCCEx_PeriphCLKConfig+0x56>
 8006d42:	4b5d      	ldr	r3, [pc, #372]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006d44:	68db      	ldr	r3, [r3, #12]
 8006d46:	4a5c      	ldr	r2, [pc, #368]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006d48:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006d4c:	60d3      	str	r3, [r2, #12]
 8006d4e:	e00c      	b.n	8006d6a <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	3304      	adds	r3, #4
 8006d54:	2100      	movs	r1, #0
 8006d56:	4618      	mov	r0, r3
 8006d58:	f000 f9f0 	bl	800713c <RCCEx_PLLSAI1_Config>
 8006d5c:	4603      	mov	r3, r0
 8006d5e:	74fb      	strb	r3, [r7, #19]
 8006d60:	e003      	b.n	8006d6a <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8006d62:	2301      	movs	r3, #1
 8006d64:	74fb      	strb	r3, [r7, #19]
 8006d66:	e000      	b.n	8006d6a <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8006d68:	bf00      	nop
 8006d6a:	7cfb      	ldrb	r3, [r7, #19]
 8006d6c:	2b00      	cmp	r3, #0
 8006d6e:	d10b      	bne.n	8006d88 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8006d70:	4b51      	ldr	r3, [pc, #324]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006d72:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006d76:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006d7e:	494e      	ldr	r1, [pc, #312]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006d80:	4313      	orrs	r3, r2
 8006d82:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006d86:	e001      	b.n	8006d8c <HAL_RCCEx_PeriphCLKConfig+0x80>
 8006d88:	7cfb      	ldrb	r3, [r7, #19]
 8006d8a:	74bb      	strb	r3, [r7, #18]
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	f000 809e 	beq.w	8006ed6 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
 8006d9a:	2300      	movs	r3, #0
 8006d9c:	747b      	strb	r3, [r7, #17]
 8006d9e:	4b46      	ldr	r3, [pc, #280]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006da0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006da2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	d101      	bne.n	8006dae <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8006daa:	2301      	movs	r3, #1
 8006dac:	e000      	b.n	8006db0 <HAL_RCCEx_PeriphCLKConfig+0xa4>
 8006dae:	2300      	movs	r3, #0
 8006db0:	2b00      	cmp	r3, #0
 8006db2:	d00d      	beq.n	8006dd0 <HAL_RCCEx_PeriphCLKConfig+0xc4>
 8006db4:	4b40      	ldr	r3, [pc, #256]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006db6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006db8:	4a3f      	ldr	r2, [pc, #252]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006dba:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006dbe:	6593      	str	r3, [r2, #88]	@ 0x58
 8006dc0:	4b3d      	ldr	r3, [pc, #244]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006dc2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006dc4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006dc8:	60bb      	str	r3, [r7, #8]
 8006dca:	68bb      	ldr	r3, [r7, #8]
 8006dcc:	2301      	movs	r3, #1
 8006dce:	747b      	strb	r3, [r7, #17]
 8006dd0:	4b3a      	ldr	r3, [pc, #232]	@ (8006ebc <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 8006dd2:	681b      	ldr	r3, [r3, #0]
 8006dd4:	4a39      	ldr	r2, [pc, #228]	@ (8006ebc <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 8006dd6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006dda:	6013      	str	r3, [r2, #0]
 8006ddc:	f7fd f946 	bl	800406c <HAL_GetTick>
 8006de0:	60f8      	str	r0, [r7, #12]
 8006de2:	e009      	b.n	8006df8 <HAL_RCCEx_PeriphCLKConfig+0xec>
 8006de4:	f7fd f942 	bl	800406c <HAL_GetTick>
 8006de8:	4602      	mov	r2, r0
 8006dea:	68fb      	ldr	r3, [r7, #12]
 8006dec:	1ad3      	subs	r3, r2, r3
 8006dee:	2b02      	cmp	r3, #2
 8006df0:	d902      	bls.n	8006df8 <HAL_RCCEx_PeriphCLKConfig+0xec>
 8006df2:	2303      	movs	r3, #3
 8006df4:	74fb      	strb	r3, [r7, #19]
 8006df6:	e005      	b.n	8006e04 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 8006df8:	4b30      	ldr	r3, [pc, #192]	@ (8006ebc <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006e00:	2b00      	cmp	r3, #0
 8006e02:	d0ef      	beq.n	8006de4 <HAL_RCCEx_PeriphCLKConfig+0xd8>
 8006e04:	7cfb      	ldrb	r3, [r7, #19]
 8006e06:	2b00      	cmp	r3, #0
 8006e08:	d15a      	bne.n	8006ec0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8006e0a:	4b2b      	ldr	r3, [pc, #172]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e0c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e10:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006e14:	617b      	str	r3, [r7, #20]
 8006e16:	697b      	ldr	r3, [r7, #20]
 8006e18:	2b00      	cmp	r3, #0
 8006e1a:	d01e      	beq.n	8006e5a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006e20:	697a      	ldr	r2, [r7, #20]
 8006e22:	429a      	cmp	r2, r3
 8006e24:	d019      	beq.n	8006e5a <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8006e26:	4b24      	ldr	r3, [pc, #144]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e28:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e2c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006e30:	617b      	str	r3, [r7, #20]
 8006e32:	4b21      	ldr	r3, [pc, #132]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e34:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e38:	4a1f      	ldr	r2, [pc, #124]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e3a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e3e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006e42:	4b1d      	ldr	r3, [pc, #116]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e44:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e48:	4a1b      	ldr	r2, [pc, #108]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e4a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006e4e:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006e52:	4a19      	ldr	r2, [pc, #100]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e54:	697b      	ldr	r3, [r7, #20]
 8006e56:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8006e5a:	697b      	ldr	r3, [r7, #20]
 8006e5c:	f003 0301 	and.w	r3, r3, #1
 8006e60:	2b00      	cmp	r3, #0
 8006e62:	d016      	beq.n	8006e92 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8006e64:	f7fd f902 	bl	800406c <HAL_GetTick>
 8006e68:	60f8      	str	r0, [r7, #12]
 8006e6a:	e00b      	b.n	8006e84 <HAL_RCCEx_PeriphCLKConfig+0x178>
 8006e6c:	f7fd f8fe 	bl	800406c <HAL_GetTick>
 8006e70:	4602      	mov	r2, r0
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	1ad3      	subs	r3, r2, r3
 8006e76:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006e7a:	4293      	cmp	r3, r2
 8006e7c:	d902      	bls.n	8006e84 <HAL_RCCEx_PeriphCLKConfig+0x178>
 8006e7e:	2303      	movs	r3, #3
 8006e80:	74fb      	strb	r3, [r7, #19]
 8006e82:	e006      	b.n	8006e92 <HAL_RCCEx_PeriphCLKConfig+0x186>
 8006e84:	4b0c      	ldr	r3, [pc, #48]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e86:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e8a:	f003 0302 	and.w	r3, r3, #2
 8006e8e:	2b00      	cmp	r3, #0
 8006e90:	d0ec      	beq.n	8006e6c <HAL_RCCEx_PeriphCLKConfig+0x160>
 8006e92:	7cfb      	ldrb	r3, [r7, #19]
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d10b      	bne.n	8006eb0 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8006e98:	4b07      	ldr	r3, [pc, #28]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006e9a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006e9e:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006ea2:	687b      	ldr	r3, [r7, #4]
 8006ea4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006ea6:	4904      	ldr	r1, [pc, #16]	@ (8006eb8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8006ea8:	4313      	orrs	r3, r2
 8006eaa:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8006eae:	e009      	b.n	8006ec4 <HAL_RCCEx_PeriphCLKConfig+0x1b8>
 8006eb0:	7cfb      	ldrb	r3, [r7, #19]
 8006eb2:	74bb      	strb	r3, [r7, #18]
 8006eb4:	e006      	b.n	8006ec4 <HAL_RCCEx_PeriphCLKConfig+0x1b8>
 8006eb6:	bf00      	nop
 8006eb8:	40021000 	.word	0x40021000
 8006ebc:	40007000 	.word	0x40007000
 8006ec0:	7cfb      	ldrb	r3, [r7, #19]
 8006ec2:	74bb      	strb	r3, [r7, #18]
 8006ec4:	7c7b      	ldrb	r3, [r7, #17]
 8006ec6:	2b01      	cmp	r3, #1
 8006ec8:	d105      	bne.n	8006ed6 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
 8006eca:	4b9b      	ldr	r3, [pc, #620]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006ecc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006ece:	4a9a      	ldr	r2, [pc, #616]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006ed0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006ed4:	6593      	str	r3, [r2, #88]	@ 0x58
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	681b      	ldr	r3, [r3, #0]
 8006eda:	f003 0301 	and.w	r3, r3, #1
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d00a      	beq.n	8006ef8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
 8006ee2:	4b95      	ldr	r3, [pc, #596]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006ee4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006ee8:	f023 0203 	bic.w	r2, r3, #3
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	6a1b      	ldr	r3, [r3, #32]
 8006ef0:	4991      	ldr	r1, [pc, #580]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006ef2:	4313      	orrs	r3, r2
 8006ef4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006ef8:	687b      	ldr	r3, [r7, #4]
 8006efa:	681b      	ldr	r3, [r3, #0]
 8006efc:	f003 0302 	and.w	r3, r3, #2
 8006f00:	2b00      	cmp	r3, #0
 8006f02:	d00a      	beq.n	8006f1a <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8006f04:	4b8c      	ldr	r3, [pc, #560]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006f0a:	f023 020c 	bic.w	r2, r3, #12
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006f12:	4989      	ldr	r1, [pc, #548]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f14:	4313      	orrs	r3, r2
 8006f16:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	f003 0304 	and.w	r3, r3, #4
 8006f22:	2b00      	cmp	r3, #0
 8006f24:	d00a      	beq.n	8006f3c <HAL_RCCEx_PeriphCLKConfig+0x230>
 8006f26:	4b84      	ldr	r3, [pc, #528]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f28:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006f2c:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f34:	4980      	ldr	r1, [pc, #512]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f36:	4313      	orrs	r3, r2
 8006f38:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	f003 0320 	and.w	r3, r3, #32
 8006f44:	2b00      	cmp	r3, #0
 8006f46:	d00a      	beq.n	8006f5e <HAL_RCCEx_PeriphCLKConfig+0x252>
 8006f48:	4b7b      	ldr	r3, [pc, #492]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006f4e:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8006f52:	687b      	ldr	r3, [r7, #4]
 8006f54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006f56:	4978      	ldr	r1, [pc, #480]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f58:	4313      	orrs	r3, r2
 8006f5a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d00a      	beq.n	8006f80 <HAL_RCCEx_PeriphCLKConfig+0x274>
 8006f6a:	4b73      	ldr	r3, [pc, #460]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f6c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006f70:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006f78:	496f      	ldr	r1, [pc, #444]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f7a:	4313      	orrs	r3, r2
 8006f7c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	681b      	ldr	r3, [r3, #0]
 8006f84:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d00a      	beq.n	8006fa2 <HAL_RCCEx_PeriphCLKConfig+0x296>
 8006f8c:	4b6a      	ldr	r3, [pc, #424]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006f92:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006f9a:	4967      	ldr	r1, [pc, #412]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006f9c:	4313      	orrs	r3, r2
 8006f9e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006faa:	2b00      	cmp	r3, #0
 8006fac:	d00a      	beq.n	8006fc4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 8006fae:	4b62      	ldr	r3, [pc, #392]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006fb0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006fb4:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006fbc:	495e      	ldr	r1, [pc, #376]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006fbe:	4313      	orrs	r3, r2
 8006fc0:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	681b      	ldr	r3, [r3, #0]
 8006fc8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006fcc:	2b00      	cmp	r3, #0
 8006fce:	d00a      	beq.n	8006fe6 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8006fd0:	4b59      	ldr	r3, [pc, #356]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006fd2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006fd6:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006fde:	4956      	ldr	r1, [pc, #344]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006fe0:	4313      	orrs	r3, r2
 8006fe2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006fee:	2b00      	cmp	r3, #0
 8006ff0:	d00a      	beq.n	8007008 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8006ff2:	4b51      	ldr	r3, [pc, #324]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006ff4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006ff8:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007000:	494d      	ldr	r1, [pc, #308]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007002:	4313      	orrs	r3, r2
 8007004:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	681b      	ldr	r3, [r3, #0]
 800700c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8007010:	2b00      	cmp	r3, #0
 8007012:	d028      	beq.n	8007066 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8007014:	4b48      	ldr	r3, [pc, #288]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007016:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800701a:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007022:	4945      	ldr	r1, [pc, #276]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007024:	4313      	orrs	r3, r2
 8007026:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800702e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007032:	d106      	bne.n	8007042 <HAL_RCCEx_PeriphCLKConfig+0x336>
 8007034:	4b40      	ldr	r3, [pc, #256]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007036:	68db      	ldr	r3, [r3, #12]
 8007038:	4a3f      	ldr	r2, [pc, #252]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800703a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800703e:	60d3      	str	r3, [r2, #12]
 8007040:	e011      	b.n	8007066 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007046:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800704a:	d10c      	bne.n	8007066 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	3304      	adds	r3, #4
 8007050:	2101      	movs	r1, #1
 8007052:	4618      	mov	r0, r3
 8007054:	f000 f872 	bl	800713c <RCCEx_PLLSAI1_Config>
 8007058:	4603      	mov	r3, r0
 800705a:	74fb      	strb	r3, [r7, #19]
 800705c:	7cfb      	ldrb	r3, [r7, #19]
 800705e:	2b00      	cmp	r3, #0
 8007060:	d001      	beq.n	8007066 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8007062:	7cfb      	ldrb	r3, [r7, #19]
 8007064:	74bb      	strb	r3, [r7, #18]
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800706e:	2b00      	cmp	r3, #0
 8007070:	d028      	beq.n	80070c4 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 8007072:	4b31      	ldr	r3, [pc, #196]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007074:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007078:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007080:	492d      	ldr	r1, [pc, #180]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007082:	4313      	orrs	r3, r2
 8007084:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800708c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007090:	d106      	bne.n	80070a0 <HAL_RCCEx_PeriphCLKConfig+0x394>
 8007092:	4b29      	ldr	r3, [pc, #164]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007094:	68db      	ldr	r3, [r3, #12]
 8007096:	4a28      	ldr	r2, [pc, #160]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007098:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800709c:	60d3      	str	r3, [r2, #12]
 800709e:	e011      	b.n	80070c4 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80070a4:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80070a8:	d10c      	bne.n	80070c4 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	3304      	adds	r3, #4
 80070ae:	2101      	movs	r1, #1
 80070b0:	4618      	mov	r0, r3
 80070b2:	f000 f843 	bl	800713c <RCCEx_PLLSAI1_Config>
 80070b6:	4603      	mov	r3, r0
 80070b8:	74fb      	strb	r3, [r7, #19]
 80070ba:	7cfb      	ldrb	r3, [r7, #19]
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d001      	beq.n	80070c4 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 80070c0:	7cfb      	ldrb	r3, [r7, #19]
 80070c2:	74bb      	strb	r3, [r7, #18]
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80070cc:	2b00      	cmp	r3, #0
 80070ce:	d01c      	beq.n	800710a <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 80070d0:	4b19      	ldr	r3, [pc, #100]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80070d2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80070d6:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80070de:	4916      	ldr	r1, [pc, #88]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80070e0:	4313      	orrs	r3, r2
 80070e2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80070ea:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80070ee:	d10c      	bne.n	800710a <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	3304      	adds	r3, #4
 80070f4:	2102      	movs	r1, #2
 80070f6:	4618      	mov	r0, r3
 80070f8:	f000 f820 	bl	800713c <RCCEx_PLLSAI1_Config>
 80070fc:	4603      	mov	r3, r0
 80070fe:	74fb      	strb	r3, [r7, #19]
 8007100:	7cfb      	ldrb	r3, [r7, #19]
 8007102:	2b00      	cmp	r3, #0
 8007104:	d001      	beq.n	800710a <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 8007106:	7cfb      	ldrb	r3, [r7, #19]
 8007108:	74bb      	strb	r3, [r7, #18]
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	681b      	ldr	r3, [r3, #0]
 800710e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8007112:	2b00      	cmp	r3, #0
 8007114:	d00a      	beq.n	800712c <HAL_RCCEx_PeriphCLKConfig+0x420>
 8007116:	4b08      	ldr	r3, [pc, #32]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007118:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800711c:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 8007120:	687b      	ldr	r3, [r7, #4]
 8007122:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007124:	4904      	ldr	r1, [pc, #16]	@ (8007138 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8007126:	4313      	orrs	r3, r2
 8007128:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800712c:	7cbb      	ldrb	r3, [r7, #18]
 800712e:	4618      	mov	r0, r3
 8007130:	3718      	adds	r7, #24
 8007132:	46bd      	mov	sp, r7
 8007134:	bd80      	pop	{r7, pc}
 8007136:	bf00      	nop
 8007138:	40021000 	.word	0x40021000

0800713c <RCCEx_PLLSAI1_Config>:
 800713c:	b580      	push	{r7, lr}
 800713e:	b084      	sub	sp, #16
 8007140:	af00      	add	r7, sp, #0
 8007142:	6078      	str	r0, [r7, #4]
 8007144:	6039      	str	r1, [r7, #0]
 8007146:	2300      	movs	r3, #0
 8007148:	73fb      	strb	r3, [r7, #15]
 800714a:	4b74      	ldr	r3, [pc, #464]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 800714c:	68db      	ldr	r3, [r3, #12]
 800714e:	f003 0303 	and.w	r3, r3, #3
 8007152:	2b00      	cmp	r3, #0
 8007154:	d018      	beq.n	8007188 <RCCEx_PLLSAI1_Config+0x4c>
 8007156:	4b71      	ldr	r3, [pc, #452]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 8007158:	68db      	ldr	r3, [r3, #12]
 800715a:	f003 0203 	and.w	r2, r3, #3
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	681b      	ldr	r3, [r3, #0]
 8007162:	429a      	cmp	r2, r3
 8007164:	d10d      	bne.n	8007182 <RCCEx_PLLSAI1_Config+0x46>
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	681b      	ldr	r3, [r3, #0]
 800716a:	2b00      	cmp	r3, #0
 800716c:	d009      	beq.n	8007182 <RCCEx_PLLSAI1_Config+0x46>
 800716e:	4b6b      	ldr	r3, [pc, #428]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 8007170:	68db      	ldr	r3, [r3, #12]
 8007172:	091b      	lsrs	r3, r3, #4
 8007174:	f003 0307 	and.w	r3, r3, #7
 8007178:	1c5a      	adds	r2, r3, #1
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	685b      	ldr	r3, [r3, #4]
 800717e:	429a      	cmp	r2, r3
 8007180:	d047      	beq.n	8007212 <RCCEx_PLLSAI1_Config+0xd6>
 8007182:	2301      	movs	r3, #1
 8007184:	73fb      	strb	r3, [r7, #15]
 8007186:	e044      	b.n	8007212 <RCCEx_PLLSAI1_Config+0xd6>
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	2b03      	cmp	r3, #3
 800718e:	d018      	beq.n	80071c2 <RCCEx_PLLSAI1_Config+0x86>
 8007190:	2b03      	cmp	r3, #3
 8007192:	d825      	bhi.n	80071e0 <RCCEx_PLLSAI1_Config+0xa4>
 8007194:	2b01      	cmp	r3, #1
 8007196:	d002      	beq.n	800719e <RCCEx_PLLSAI1_Config+0x62>
 8007198:	2b02      	cmp	r3, #2
 800719a:	d009      	beq.n	80071b0 <RCCEx_PLLSAI1_Config+0x74>
 800719c:	e020      	b.n	80071e0 <RCCEx_PLLSAI1_Config+0xa4>
 800719e:	4b5f      	ldr	r3, [pc, #380]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80071a0:	681b      	ldr	r3, [r3, #0]
 80071a2:	f003 0302 	and.w	r3, r3, #2
 80071a6:	2b00      	cmp	r3, #0
 80071a8:	d11d      	bne.n	80071e6 <RCCEx_PLLSAI1_Config+0xaa>
 80071aa:	2301      	movs	r3, #1
 80071ac:	73fb      	strb	r3, [r7, #15]
 80071ae:	e01a      	b.n	80071e6 <RCCEx_PLLSAI1_Config+0xaa>
 80071b0:	4b5a      	ldr	r3, [pc, #360]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80071b2:	681b      	ldr	r3, [r3, #0]
 80071b4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80071b8:	2b00      	cmp	r3, #0
 80071ba:	d116      	bne.n	80071ea <RCCEx_PLLSAI1_Config+0xae>
 80071bc:	2301      	movs	r3, #1
 80071be:	73fb      	strb	r3, [r7, #15]
 80071c0:	e013      	b.n	80071ea <RCCEx_PLLSAI1_Config+0xae>
 80071c2:	4b56      	ldr	r3, [pc, #344]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80071c4:	681b      	ldr	r3, [r3, #0]
 80071c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d10f      	bne.n	80071ee <RCCEx_PLLSAI1_Config+0xb2>
 80071ce:	4b53      	ldr	r3, [pc, #332]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80071d0:	681b      	ldr	r3, [r3, #0]
 80071d2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d109      	bne.n	80071ee <RCCEx_PLLSAI1_Config+0xb2>
 80071da:	2301      	movs	r3, #1
 80071dc:	73fb      	strb	r3, [r7, #15]
 80071de:	e006      	b.n	80071ee <RCCEx_PLLSAI1_Config+0xb2>
 80071e0:	2301      	movs	r3, #1
 80071e2:	73fb      	strb	r3, [r7, #15]
 80071e4:	e004      	b.n	80071f0 <RCCEx_PLLSAI1_Config+0xb4>
 80071e6:	bf00      	nop
 80071e8:	e002      	b.n	80071f0 <RCCEx_PLLSAI1_Config+0xb4>
 80071ea:	bf00      	nop
 80071ec:	e000      	b.n	80071f0 <RCCEx_PLLSAI1_Config+0xb4>
 80071ee:	bf00      	nop
 80071f0:	7bfb      	ldrb	r3, [r7, #15]
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d10d      	bne.n	8007212 <RCCEx_PLLSAI1_Config+0xd6>
 80071f6:	4b49      	ldr	r3, [pc, #292]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80071f8:	68db      	ldr	r3, [r3, #12]
 80071fa:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	6819      	ldr	r1, [r3, #0]
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	685b      	ldr	r3, [r3, #4]
 8007206:	3b01      	subs	r3, #1
 8007208:	011b      	lsls	r3, r3, #4
 800720a:	430b      	orrs	r3, r1
 800720c:	4943      	ldr	r1, [pc, #268]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 800720e:	4313      	orrs	r3, r2
 8007210:	60cb      	str	r3, [r1, #12]
 8007212:	7bfb      	ldrb	r3, [r7, #15]
 8007214:	2b00      	cmp	r3, #0
 8007216:	d17c      	bne.n	8007312 <RCCEx_PLLSAI1_Config+0x1d6>
 8007218:	4b40      	ldr	r3, [pc, #256]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 800721a:	681b      	ldr	r3, [r3, #0]
 800721c:	4a3f      	ldr	r2, [pc, #252]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 800721e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007222:	6013      	str	r3, [r2, #0]
 8007224:	f7fc ff22 	bl	800406c <HAL_GetTick>
 8007228:	60b8      	str	r0, [r7, #8]
 800722a:	e009      	b.n	8007240 <RCCEx_PLLSAI1_Config+0x104>
 800722c:	f7fc ff1e 	bl	800406c <HAL_GetTick>
 8007230:	4602      	mov	r2, r0
 8007232:	68bb      	ldr	r3, [r7, #8]
 8007234:	1ad3      	subs	r3, r2, r3
 8007236:	2b02      	cmp	r3, #2
 8007238:	d902      	bls.n	8007240 <RCCEx_PLLSAI1_Config+0x104>
 800723a:	2303      	movs	r3, #3
 800723c:	73fb      	strb	r3, [r7, #15]
 800723e:	e005      	b.n	800724c <RCCEx_PLLSAI1_Config+0x110>
 8007240:	4b36      	ldr	r3, [pc, #216]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007248:	2b00      	cmp	r3, #0
 800724a:	d1ef      	bne.n	800722c <RCCEx_PLLSAI1_Config+0xf0>
 800724c:	7bfb      	ldrb	r3, [r7, #15]
 800724e:	2b00      	cmp	r3, #0
 8007250:	d15f      	bne.n	8007312 <RCCEx_PLLSAI1_Config+0x1d6>
 8007252:	683b      	ldr	r3, [r7, #0]
 8007254:	2b00      	cmp	r3, #0
 8007256:	d110      	bne.n	800727a <RCCEx_PLLSAI1_Config+0x13e>
 8007258:	4b30      	ldr	r3, [pc, #192]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 800725a:	691b      	ldr	r3, [r3, #16]
 800725c:	f023 4378 	bic.w	r3, r3, #4160749568	@ 0xf8000000
 8007260:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 8007264:	687a      	ldr	r2, [r7, #4]
 8007266:	6892      	ldr	r2, [r2, #8]
 8007268:	0211      	lsls	r1, r2, #8
 800726a:	687a      	ldr	r2, [r7, #4]
 800726c:	68d2      	ldr	r2, [r2, #12]
 800726e:	06d2      	lsls	r2, r2, #27
 8007270:	430a      	orrs	r2, r1
 8007272:	492a      	ldr	r1, [pc, #168]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 8007274:	4313      	orrs	r3, r2
 8007276:	610b      	str	r3, [r1, #16]
 8007278:	e027      	b.n	80072ca <RCCEx_PLLSAI1_Config+0x18e>
 800727a:	683b      	ldr	r3, [r7, #0]
 800727c:	2b01      	cmp	r3, #1
 800727e:	d112      	bne.n	80072a6 <RCCEx_PLLSAI1_Config+0x16a>
 8007280:	4b26      	ldr	r3, [pc, #152]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 8007282:	691b      	ldr	r3, [r3, #16]
 8007284:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 8007288:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 800728c:	687a      	ldr	r2, [r7, #4]
 800728e:	6892      	ldr	r2, [r2, #8]
 8007290:	0211      	lsls	r1, r2, #8
 8007292:	687a      	ldr	r2, [r7, #4]
 8007294:	6912      	ldr	r2, [r2, #16]
 8007296:	0852      	lsrs	r2, r2, #1
 8007298:	3a01      	subs	r2, #1
 800729a:	0552      	lsls	r2, r2, #21
 800729c:	430a      	orrs	r2, r1
 800729e:	491f      	ldr	r1, [pc, #124]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80072a0:	4313      	orrs	r3, r2
 80072a2:	610b      	str	r3, [r1, #16]
 80072a4:	e011      	b.n	80072ca <RCCEx_PLLSAI1_Config+0x18e>
 80072a6:	4b1d      	ldr	r3, [pc, #116]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80072a8:	691b      	ldr	r3, [r3, #16]
 80072aa:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 80072ae:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80072b2:	687a      	ldr	r2, [r7, #4]
 80072b4:	6892      	ldr	r2, [r2, #8]
 80072b6:	0211      	lsls	r1, r2, #8
 80072b8:	687a      	ldr	r2, [r7, #4]
 80072ba:	6952      	ldr	r2, [r2, #20]
 80072bc:	0852      	lsrs	r2, r2, #1
 80072be:	3a01      	subs	r2, #1
 80072c0:	0652      	lsls	r2, r2, #25
 80072c2:	430a      	orrs	r2, r1
 80072c4:	4915      	ldr	r1, [pc, #84]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80072c6:	4313      	orrs	r3, r2
 80072c8:	610b      	str	r3, [r1, #16]
 80072ca:	4b14      	ldr	r3, [pc, #80]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80072cc:	681b      	ldr	r3, [r3, #0]
 80072ce:	4a13      	ldr	r2, [pc, #76]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80072d0:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80072d4:	6013      	str	r3, [r2, #0]
 80072d6:	f7fc fec9 	bl	800406c <HAL_GetTick>
 80072da:	60b8      	str	r0, [r7, #8]
 80072dc:	e009      	b.n	80072f2 <RCCEx_PLLSAI1_Config+0x1b6>
 80072de:	f7fc fec5 	bl	800406c <HAL_GetTick>
 80072e2:	4602      	mov	r2, r0
 80072e4:	68bb      	ldr	r3, [r7, #8]
 80072e6:	1ad3      	subs	r3, r2, r3
 80072e8:	2b02      	cmp	r3, #2
 80072ea:	d902      	bls.n	80072f2 <RCCEx_PLLSAI1_Config+0x1b6>
 80072ec:	2303      	movs	r3, #3
 80072ee:	73fb      	strb	r3, [r7, #15]
 80072f0:	e005      	b.n	80072fe <RCCEx_PLLSAI1_Config+0x1c2>
 80072f2:	4b0a      	ldr	r3, [pc, #40]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 80072f4:	681b      	ldr	r3, [r3, #0]
 80072f6:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80072fa:	2b00      	cmp	r3, #0
 80072fc:	d0ef      	beq.n	80072de <RCCEx_PLLSAI1_Config+0x1a2>
 80072fe:	7bfb      	ldrb	r3, [r7, #15]
 8007300:	2b00      	cmp	r3, #0
 8007302:	d106      	bne.n	8007312 <RCCEx_PLLSAI1_Config+0x1d6>
 8007304:	4b05      	ldr	r3, [pc, #20]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 8007306:	691a      	ldr	r2, [r3, #16]
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	699b      	ldr	r3, [r3, #24]
 800730c:	4903      	ldr	r1, [pc, #12]	@ (800731c <RCCEx_PLLSAI1_Config+0x1e0>)
 800730e:	4313      	orrs	r3, r2
 8007310:	610b      	str	r3, [r1, #16]
 8007312:	7bfb      	ldrb	r3, [r7, #15]
 8007314:	4618      	mov	r0, r3
 8007316:	3710      	adds	r7, #16
 8007318:	46bd      	mov	sp, r7
 800731a:	bd80      	pop	{r7, pc}
 800731c:	40021000 	.word	0x40021000

08007320 <HAL_SPI_Init>:
 8007320:	b580      	push	{r7, lr}
 8007322:	b084      	sub	sp, #16
 8007324:	af00      	add	r7, sp, #0
 8007326:	6078      	str	r0, [r7, #4]
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	2b00      	cmp	r3, #0
 800732c:	d101      	bne.n	8007332 <HAL_SPI_Init+0x12>
 800732e:	2301      	movs	r3, #1
 8007330:	e0be      	b.n	80074b0 <HAL_SPI_Init+0x190>
 8007332:	687b      	ldr	r3, [r7, #4]
 8007334:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007336:	2b00      	cmp	r3, #0
 8007338:	d108      	bne.n	800734c <HAL_SPI_Init+0x2c>
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	685b      	ldr	r3, [r3, #4]
 800733e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007342:	d009      	beq.n	8007358 <HAL_SPI_Init+0x38>
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	2200      	movs	r2, #0
 8007348:	61da      	str	r2, [r3, #28]
 800734a:	e005      	b.n	8007358 <HAL_SPI_Init+0x38>
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	2200      	movs	r2, #0
 8007350:	611a      	str	r2, [r3, #16]
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	2200      	movs	r2, #0
 8007356:	615a      	str	r2, [r3, #20]
 8007358:	687b      	ldr	r3, [r7, #4]
 800735a:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800735e:	b2db      	uxtb	r3, r3
 8007360:	2b00      	cmp	r3, #0
 8007362:	d106      	bne.n	8007372 <HAL_SPI_Init+0x52>
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	2200      	movs	r2, #0
 8007368:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 800736c:	6878      	ldr	r0, [r7, #4]
 800736e:	f7fc fb77 	bl	8003a60 <HAL_SPI_MspInit>
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	2202      	movs	r2, #2
 8007376:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	681b      	ldr	r3, [r3, #0]
 800737e:	681a      	ldr	r2, [r3, #0]
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007388:	601a      	str	r2, [r3, #0]
 800738a:	687b      	ldr	r3, [r7, #4]
 800738c:	68db      	ldr	r3, [r3, #12]
 800738e:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8007392:	d902      	bls.n	800739a <HAL_SPI_Init+0x7a>
 8007394:	2300      	movs	r3, #0
 8007396:	60fb      	str	r3, [r7, #12]
 8007398:	e002      	b.n	80073a0 <HAL_SPI_Init+0x80>
 800739a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800739e:	60fb      	str	r3, [r7, #12]
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	68db      	ldr	r3, [r3, #12]
 80073a4:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 80073a8:	d007      	beq.n	80073ba <HAL_SPI_Init+0x9a>
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	68db      	ldr	r3, [r3, #12]
 80073ae:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80073b2:	d002      	beq.n	80073ba <HAL_SPI_Init+0x9a>
 80073b4:	687b      	ldr	r3, [r7, #4]
 80073b6:	2200      	movs	r2, #0
 80073b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	685b      	ldr	r3, [r3, #4]
 80073be:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80073c2:	687b      	ldr	r3, [r7, #4]
 80073c4:	689b      	ldr	r3, [r3, #8]
 80073c6:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80073ca:	431a      	orrs	r2, r3
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	691b      	ldr	r3, [r3, #16]
 80073d0:	f003 0302 	and.w	r3, r3, #2
 80073d4:	431a      	orrs	r2, r3
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	695b      	ldr	r3, [r3, #20]
 80073da:	f003 0301 	and.w	r3, r3, #1
 80073de:	431a      	orrs	r2, r3
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	699b      	ldr	r3, [r3, #24]
 80073e4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80073e8:	431a      	orrs	r2, r3
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	69db      	ldr	r3, [r3, #28]
 80073ee:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80073f2:	431a      	orrs	r2, r3
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	6a1b      	ldr	r3, [r3, #32]
 80073f8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80073fc:	ea42 0103 	orr.w	r1, r2, r3
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007404:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	681b      	ldr	r3, [r3, #0]
 800740c:	430a      	orrs	r2, r1
 800740e:	601a      	str	r2, [r3, #0]
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007414:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007418:	d11b      	bne.n	8007452 <HAL_SPI_Init+0x132>
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800741e:	2b00      	cmp	r3, #0
 8007420:	d10b      	bne.n	800743a <HAL_SPI_Init+0x11a>
 8007422:	687b      	ldr	r3, [r7, #4]
 8007424:	68db      	ldr	r3, [r3, #12]
 8007426:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800742a:	d903      	bls.n	8007434 <HAL_SPI_Init+0x114>
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	2202      	movs	r2, #2
 8007430:	631a      	str	r2, [r3, #48]	@ 0x30
 8007432:	e002      	b.n	800743a <HAL_SPI_Init+0x11a>
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	2201      	movs	r2, #1
 8007438:	631a      	str	r2, [r3, #48]	@ 0x30
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800743e:	2b02      	cmp	r3, #2
 8007440:	d107      	bne.n	8007452 <HAL_SPI_Init+0x132>
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	681a      	ldr	r2, [r3, #0]
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007450:	601a      	str	r2, [r3, #0]
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	699b      	ldr	r3, [r3, #24]
 8007456:	0c1b      	lsrs	r3, r3, #16
 8007458:	f003 0204 	and.w	r2, r3, #4
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007460:	f003 0310 	and.w	r3, r3, #16
 8007464:	431a      	orrs	r2, r3
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800746a:	f003 0308 	and.w	r3, r3, #8
 800746e:	431a      	orrs	r2, r3
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	68db      	ldr	r3, [r3, #12]
 8007474:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8007478:	ea42 0103 	orr.w	r1, r2, r3
 800747c:	68fb      	ldr	r3, [r7, #12]
 800747e:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8007482:	687b      	ldr	r3, [r7, #4]
 8007484:	681b      	ldr	r3, [r3, #0]
 8007486:	430a      	orrs	r2, r1
 8007488:	605a      	str	r2, [r3, #4]
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800748e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007492:	d105      	bne.n	80074a0 <HAL_SPI_Init+0x180>
 8007494:	687b      	ldr	r3, [r7, #4]
 8007496:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8007498:	687b      	ldr	r3, [r7, #4]
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	b292      	uxth	r2, r2
 800749e:	611a      	str	r2, [r3, #16]
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	2200      	movs	r2, #0
 80074a4:	661a      	str	r2, [r3, #96]	@ 0x60
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	2201      	movs	r2, #1
 80074aa:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80074ae:	2300      	movs	r3, #0
 80074b0:	4618      	mov	r0, r3
 80074b2:	3710      	adds	r7, #16
 80074b4:	46bd      	mov	sp, r7
 80074b6:	bd80      	pop	{r7, pc}

080074b8 <HAL_TIM_Base_Init>:
 80074b8:	b580      	push	{r7, lr}
 80074ba:	b082      	sub	sp, #8
 80074bc:	af00      	add	r7, sp, #0
 80074be:	6078      	str	r0, [r7, #4]
 80074c0:	687b      	ldr	r3, [r7, #4]
 80074c2:	2b00      	cmp	r3, #0
 80074c4:	d101      	bne.n	80074ca <HAL_TIM_Base_Init+0x12>
 80074c6:	2301      	movs	r3, #1
 80074c8:	e049      	b.n	800755e <HAL_TIM_Base_Init+0xa6>
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80074d0:	b2db      	uxtb	r3, r3
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d106      	bne.n	80074e4 <HAL_TIM_Base_Init+0x2c>
 80074d6:	687b      	ldr	r3, [r7, #4]
 80074d8:	2200      	movs	r2, #0
 80074da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80074de:	6878      	ldr	r0, [r7, #4]
 80074e0:	f7fc fb00 	bl	8003ae4 <HAL_TIM_Base_MspInit>
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	2202      	movs	r2, #2
 80074e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	681a      	ldr	r2, [r3, #0]
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	3304      	adds	r3, #4
 80074f4:	4619      	mov	r1, r3
 80074f6:	4610      	mov	r0, r2
 80074f8:	f000 fa82 	bl	8007a00 <TIM_Base_SetConfig>
 80074fc:	687b      	ldr	r3, [r7, #4]
 80074fe:	2201      	movs	r2, #1
 8007500:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	2201      	movs	r2, #1
 8007508:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	2201      	movs	r2, #1
 8007510:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	2201      	movs	r2, #1
 8007518:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	2201      	movs	r2, #1
 8007520:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	2201      	movs	r2, #1
 8007528:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	2201      	movs	r2, #1
 8007530:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	2201      	movs	r2, #1
 8007538:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	2201      	movs	r2, #1
 8007540:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	2201      	movs	r2, #1
 8007548:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	2201      	movs	r2, #1
 8007550:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	2201      	movs	r2, #1
 8007558:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800755c:	2300      	movs	r3, #0
 800755e:	4618      	mov	r0, r3
 8007560:	3708      	adds	r7, #8
 8007562:	46bd      	mov	sp, r7
 8007564:	bd80      	pop	{r7, pc}
	...

08007568 <HAL_TIM_Base_Start_IT>:
 8007568:	b480      	push	{r7}
 800756a:	b085      	sub	sp, #20
 800756c:	af00      	add	r7, sp, #0
 800756e:	6078      	str	r0, [r7, #4]
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007576:	b2db      	uxtb	r3, r3
 8007578:	2b01      	cmp	r3, #1
 800757a:	d001      	beq.n	8007580 <HAL_TIM_Base_Start_IT+0x18>
 800757c:	2301      	movs	r3, #1
 800757e:	e03b      	b.n	80075f8 <HAL_TIM_Base_Start_IT+0x90>
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	2202      	movs	r2, #2
 8007584:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	681b      	ldr	r3, [r3, #0]
 800758c:	68da      	ldr	r2, [r3, #12]
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	681b      	ldr	r3, [r3, #0]
 8007592:	f042 0201 	orr.w	r2, r2, #1
 8007596:	60da      	str	r2, [r3, #12]
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	681b      	ldr	r3, [r3, #0]
 800759c:	4a19      	ldr	r2, [pc, #100]	@ (8007604 <HAL_TIM_Base_Start_IT+0x9c>)
 800759e:	4293      	cmp	r3, r2
 80075a0:	d009      	beq.n	80075b6 <HAL_TIM_Base_Start_IT+0x4e>
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	681b      	ldr	r3, [r3, #0]
 80075a6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80075aa:	d004      	beq.n	80075b6 <HAL_TIM_Base_Start_IT+0x4e>
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	4a15      	ldr	r2, [pc, #84]	@ (8007608 <HAL_TIM_Base_Start_IT+0xa0>)
 80075b2:	4293      	cmp	r3, r2
 80075b4:	d115      	bne.n	80075e2 <HAL_TIM_Base_Start_IT+0x7a>
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	681b      	ldr	r3, [r3, #0]
 80075ba:	689a      	ldr	r2, [r3, #8]
 80075bc:	4b13      	ldr	r3, [pc, #76]	@ (800760c <HAL_TIM_Base_Start_IT+0xa4>)
 80075be:	4013      	ands	r3, r2
 80075c0:	60fb      	str	r3, [r7, #12]
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	2b06      	cmp	r3, #6
 80075c6:	d015      	beq.n	80075f4 <HAL_TIM_Base_Start_IT+0x8c>
 80075c8:	68fb      	ldr	r3, [r7, #12]
 80075ca:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80075ce:	d011      	beq.n	80075f4 <HAL_TIM_Base_Start_IT+0x8c>
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	681b      	ldr	r3, [r3, #0]
 80075d4:	681a      	ldr	r2, [r3, #0]
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	f042 0201 	orr.w	r2, r2, #1
 80075de:	601a      	str	r2, [r3, #0]
 80075e0:	e008      	b.n	80075f4 <HAL_TIM_Base_Start_IT+0x8c>
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	681b      	ldr	r3, [r3, #0]
 80075e6:	681a      	ldr	r2, [r3, #0]
 80075e8:	687b      	ldr	r3, [r7, #4]
 80075ea:	681b      	ldr	r3, [r3, #0]
 80075ec:	f042 0201 	orr.w	r2, r2, #1
 80075f0:	601a      	str	r2, [r3, #0]
 80075f2:	e000      	b.n	80075f6 <HAL_TIM_Base_Start_IT+0x8e>
 80075f4:	bf00      	nop
 80075f6:	2300      	movs	r3, #0
 80075f8:	4618      	mov	r0, r3
 80075fa:	3714      	adds	r7, #20
 80075fc:	46bd      	mov	sp, r7
 80075fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007602:	4770      	bx	lr
 8007604:	40012c00 	.word	0x40012c00
 8007608:	40014000 	.word	0x40014000
 800760c:	00010007 	.word	0x00010007

08007610 <HAL_TIM_IRQHandler>:
 8007610:	b580      	push	{r7, lr}
 8007612:	b084      	sub	sp, #16
 8007614:	af00      	add	r7, sp, #0
 8007616:	6078      	str	r0, [r7, #4]
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	68db      	ldr	r3, [r3, #12]
 800761e:	60fb      	str	r3, [r7, #12]
 8007620:	687b      	ldr	r3, [r7, #4]
 8007622:	681b      	ldr	r3, [r3, #0]
 8007624:	691b      	ldr	r3, [r3, #16]
 8007626:	60bb      	str	r3, [r7, #8]
 8007628:	68bb      	ldr	r3, [r7, #8]
 800762a:	f003 0302 	and.w	r3, r3, #2
 800762e:	2b00      	cmp	r3, #0
 8007630:	d020      	beq.n	8007674 <HAL_TIM_IRQHandler+0x64>
 8007632:	68fb      	ldr	r3, [r7, #12]
 8007634:	f003 0302 	and.w	r3, r3, #2
 8007638:	2b00      	cmp	r3, #0
 800763a:	d01b      	beq.n	8007674 <HAL_TIM_IRQHandler+0x64>
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	f06f 0202 	mvn.w	r2, #2
 8007644:	611a      	str	r2, [r3, #16]
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	2201      	movs	r2, #1
 800764a:	771a      	strb	r2, [r3, #28]
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	699b      	ldr	r3, [r3, #24]
 8007652:	f003 0303 	and.w	r3, r3, #3
 8007656:	2b00      	cmp	r3, #0
 8007658:	d003      	beq.n	8007662 <HAL_TIM_IRQHandler+0x52>
 800765a:	6878      	ldr	r0, [r7, #4]
 800765c:	f000 f9b2 	bl	80079c4 <HAL_TIM_IC_CaptureCallback>
 8007660:	e005      	b.n	800766e <HAL_TIM_IRQHandler+0x5e>
 8007662:	6878      	ldr	r0, [r7, #4]
 8007664:	f000 f9a4 	bl	80079b0 <HAL_TIM_OC_DelayElapsedCallback>
 8007668:	6878      	ldr	r0, [r7, #4]
 800766a:	f000 f9b5 	bl	80079d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	2200      	movs	r2, #0
 8007672:	771a      	strb	r2, [r3, #28]
 8007674:	68bb      	ldr	r3, [r7, #8]
 8007676:	f003 0304 	and.w	r3, r3, #4
 800767a:	2b00      	cmp	r3, #0
 800767c:	d020      	beq.n	80076c0 <HAL_TIM_IRQHandler+0xb0>
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	f003 0304 	and.w	r3, r3, #4
 8007684:	2b00      	cmp	r3, #0
 8007686:	d01b      	beq.n	80076c0 <HAL_TIM_IRQHandler+0xb0>
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	681b      	ldr	r3, [r3, #0]
 800768c:	f06f 0204 	mvn.w	r2, #4
 8007690:	611a      	str	r2, [r3, #16]
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	2202      	movs	r2, #2
 8007696:	771a      	strb	r2, [r3, #28]
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	681b      	ldr	r3, [r3, #0]
 800769c:	699b      	ldr	r3, [r3, #24]
 800769e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	d003      	beq.n	80076ae <HAL_TIM_IRQHandler+0x9e>
 80076a6:	6878      	ldr	r0, [r7, #4]
 80076a8:	f000 f98c 	bl	80079c4 <HAL_TIM_IC_CaptureCallback>
 80076ac:	e005      	b.n	80076ba <HAL_TIM_IRQHandler+0xaa>
 80076ae:	6878      	ldr	r0, [r7, #4]
 80076b0:	f000 f97e 	bl	80079b0 <HAL_TIM_OC_DelayElapsedCallback>
 80076b4:	6878      	ldr	r0, [r7, #4]
 80076b6:	f000 f98f 	bl	80079d8 <HAL_TIM_PWM_PulseFinishedCallback>
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	2200      	movs	r2, #0
 80076be:	771a      	strb	r2, [r3, #28]
 80076c0:	68bb      	ldr	r3, [r7, #8]
 80076c2:	f003 0308 	and.w	r3, r3, #8
 80076c6:	2b00      	cmp	r3, #0
 80076c8:	d020      	beq.n	800770c <HAL_TIM_IRQHandler+0xfc>
 80076ca:	68fb      	ldr	r3, [r7, #12]
 80076cc:	f003 0308 	and.w	r3, r3, #8
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d01b      	beq.n	800770c <HAL_TIM_IRQHandler+0xfc>
 80076d4:	687b      	ldr	r3, [r7, #4]
 80076d6:	681b      	ldr	r3, [r3, #0]
 80076d8:	f06f 0208 	mvn.w	r2, #8
 80076dc:	611a      	str	r2, [r3, #16]
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	2204      	movs	r2, #4
 80076e2:	771a      	strb	r2, [r3, #28]
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	681b      	ldr	r3, [r3, #0]
 80076e8:	69db      	ldr	r3, [r3, #28]
 80076ea:	f003 0303 	and.w	r3, r3, #3
 80076ee:	2b00      	cmp	r3, #0
 80076f0:	d003      	beq.n	80076fa <HAL_TIM_IRQHandler+0xea>
 80076f2:	6878      	ldr	r0, [r7, #4]
 80076f4:	f000 f966 	bl	80079c4 <HAL_TIM_IC_CaptureCallback>
 80076f8:	e005      	b.n	8007706 <HAL_TIM_IRQHandler+0xf6>
 80076fa:	6878      	ldr	r0, [r7, #4]
 80076fc:	f000 f958 	bl	80079b0 <HAL_TIM_OC_DelayElapsedCallback>
 8007700:	6878      	ldr	r0, [r7, #4]
 8007702:	f000 f969 	bl	80079d8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	2200      	movs	r2, #0
 800770a:	771a      	strb	r2, [r3, #28]
 800770c:	68bb      	ldr	r3, [r7, #8]
 800770e:	f003 0310 	and.w	r3, r3, #16
 8007712:	2b00      	cmp	r3, #0
 8007714:	d020      	beq.n	8007758 <HAL_TIM_IRQHandler+0x148>
 8007716:	68fb      	ldr	r3, [r7, #12]
 8007718:	f003 0310 	and.w	r3, r3, #16
 800771c:	2b00      	cmp	r3, #0
 800771e:	d01b      	beq.n	8007758 <HAL_TIM_IRQHandler+0x148>
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	681b      	ldr	r3, [r3, #0]
 8007724:	f06f 0210 	mvn.w	r2, #16
 8007728:	611a      	str	r2, [r3, #16]
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	2208      	movs	r2, #8
 800772e:	771a      	strb	r2, [r3, #28]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	69db      	ldr	r3, [r3, #28]
 8007736:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800773a:	2b00      	cmp	r3, #0
 800773c:	d003      	beq.n	8007746 <HAL_TIM_IRQHandler+0x136>
 800773e:	6878      	ldr	r0, [r7, #4]
 8007740:	f000 f940 	bl	80079c4 <HAL_TIM_IC_CaptureCallback>
 8007744:	e005      	b.n	8007752 <HAL_TIM_IRQHandler+0x142>
 8007746:	6878      	ldr	r0, [r7, #4]
 8007748:	f000 f932 	bl	80079b0 <HAL_TIM_OC_DelayElapsedCallback>
 800774c:	6878      	ldr	r0, [r7, #4]
 800774e:	f000 f943 	bl	80079d8 <HAL_TIM_PWM_PulseFinishedCallback>
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	2200      	movs	r2, #0
 8007756:	771a      	strb	r2, [r3, #28]
 8007758:	68bb      	ldr	r3, [r7, #8]
 800775a:	f003 0301 	and.w	r3, r3, #1
 800775e:	2b00      	cmp	r3, #0
 8007760:	d00c      	beq.n	800777c <HAL_TIM_IRQHandler+0x16c>
 8007762:	68fb      	ldr	r3, [r7, #12]
 8007764:	f003 0301 	and.w	r3, r3, #1
 8007768:	2b00      	cmp	r3, #0
 800776a:	d007      	beq.n	800777c <HAL_TIM_IRQHandler+0x16c>
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	681b      	ldr	r3, [r3, #0]
 8007770:	f06f 0201 	mvn.w	r2, #1
 8007774:	611a      	str	r2, [r3, #16]
 8007776:	6878      	ldr	r0, [r7, #4]
 8007778:	f7fb fada 	bl	8002d30 <HAL_TIM_PeriodElapsedCallback>
 800777c:	68bb      	ldr	r3, [r7, #8]
 800777e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007782:	2b00      	cmp	r3, #0
 8007784:	d104      	bne.n	8007790 <HAL_TIM_IRQHandler+0x180>
 8007786:	68bb      	ldr	r3, [r7, #8]
 8007788:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800778c:	2b00      	cmp	r3, #0
 800778e:	d00c      	beq.n	80077aa <HAL_TIM_IRQHandler+0x19a>
 8007790:	68fb      	ldr	r3, [r7, #12]
 8007792:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007796:	2b00      	cmp	r3, #0
 8007798:	d007      	beq.n	80077aa <HAL_TIM_IRQHandler+0x19a>
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	681b      	ldr	r3, [r3, #0]
 800779e:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 80077a2:	611a      	str	r2, [r3, #16]
 80077a4:	6878      	ldr	r0, [r7, #4]
 80077a6:	f000 faa5 	bl	8007cf4 <HAL_TIMEx_BreakCallback>
 80077aa:	68bb      	ldr	r3, [r7, #8]
 80077ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	d00c      	beq.n	80077ce <HAL_TIM_IRQHandler+0x1be>
 80077b4:	68fb      	ldr	r3, [r7, #12]
 80077b6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d007      	beq.n	80077ce <HAL_TIM_IRQHandler+0x1be>
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 80077c6:	611a      	str	r2, [r3, #16]
 80077c8:	6878      	ldr	r0, [r7, #4]
 80077ca:	f000 fa9d 	bl	8007d08 <HAL_TIMEx_Break2Callback>
 80077ce:	68bb      	ldr	r3, [r7, #8]
 80077d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80077d4:	2b00      	cmp	r3, #0
 80077d6:	d00c      	beq.n	80077f2 <HAL_TIM_IRQHandler+0x1e2>
 80077d8:	68fb      	ldr	r3, [r7, #12]
 80077da:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80077de:	2b00      	cmp	r3, #0
 80077e0:	d007      	beq.n	80077f2 <HAL_TIM_IRQHandler+0x1e2>
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80077ea:	611a      	str	r2, [r3, #16]
 80077ec:	6878      	ldr	r0, [r7, #4]
 80077ee:	f000 f8fd 	bl	80079ec <HAL_TIM_TriggerCallback>
 80077f2:	68bb      	ldr	r3, [r7, #8]
 80077f4:	f003 0320 	and.w	r3, r3, #32
 80077f8:	2b00      	cmp	r3, #0
 80077fa:	d00c      	beq.n	8007816 <HAL_TIM_IRQHandler+0x206>
 80077fc:	68fb      	ldr	r3, [r7, #12]
 80077fe:	f003 0320 	and.w	r3, r3, #32
 8007802:	2b00      	cmp	r3, #0
 8007804:	d007      	beq.n	8007816 <HAL_TIM_IRQHandler+0x206>
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	681b      	ldr	r3, [r3, #0]
 800780a:	f06f 0220 	mvn.w	r2, #32
 800780e:	611a      	str	r2, [r3, #16]
 8007810:	6878      	ldr	r0, [r7, #4]
 8007812:	f000 fa65 	bl	8007ce0 <HAL_TIMEx_CommutCallback>
 8007816:	bf00      	nop
 8007818:	3710      	adds	r7, #16
 800781a:	46bd      	mov	sp, r7
 800781c:	bd80      	pop	{r7, pc}

0800781e <HAL_TIM_ConfigClockSource>:
 800781e:	b580      	push	{r7, lr}
 8007820:	b084      	sub	sp, #16
 8007822:	af00      	add	r7, sp, #0
 8007824:	6078      	str	r0, [r7, #4]
 8007826:	6039      	str	r1, [r7, #0]
 8007828:	2300      	movs	r3, #0
 800782a:	73fb      	strb	r3, [r7, #15]
 800782c:	687b      	ldr	r3, [r7, #4]
 800782e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007832:	2b01      	cmp	r3, #1
 8007834:	d101      	bne.n	800783a <HAL_TIM_ConfigClockSource+0x1c>
 8007836:	2302      	movs	r3, #2
 8007838:	e0b6      	b.n	80079a8 <HAL_TIM_ConfigClockSource+0x18a>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	2201      	movs	r2, #1
 800783e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	2202      	movs	r2, #2
 8007846:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	681b      	ldr	r3, [r3, #0]
 800784e:	689b      	ldr	r3, [r3, #8]
 8007850:	60bb      	str	r3, [r7, #8]
 8007852:	68bb      	ldr	r3, [r7, #8]
 8007854:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007858:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800785c:	60bb      	str	r3, [r7, #8]
 800785e:	68bb      	ldr	r3, [r7, #8]
 8007860:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007864:	60bb      	str	r3, [r7, #8]
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	681b      	ldr	r3, [r3, #0]
 800786a:	68ba      	ldr	r2, [r7, #8]
 800786c:	609a      	str	r2, [r3, #8]
 800786e:	683b      	ldr	r3, [r7, #0]
 8007870:	681b      	ldr	r3, [r3, #0]
 8007872:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007876:	d03e      	beq.n	80078f6 <HAL_TIM_ConfigClockSource+0xd8>
 8007878:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800787c:	f200 8087 	bhi.w	800798e <HAL_TIM_ConfigClockSource+0x170>
 8007880:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007884:	f000 8086 	beq.w	8007994 <HAL_TIM_ConfigClockSource+0x176>
 8007888:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800788c:	d87f      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 800788e:	2b70      	cmp	r3, #112	@ 0x70
 8007890:	d01a      	beq.n	80078c8 <HAL_TIM_ConfigClockSource+0xaa>
 8007892:	2b70      	cmp	r3, #112	@ 0x70
 8007894:	d87b      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 8007896:	2b60      	cmp	r3, #96	@ 0x60
 8007898:	d050      	beq.n	800793c <HAL_TIM_ConfigClockSource+0x11e>
 800789a:	2b60      	cmp	r3, #96	@ 0x60
 800789c:	d877      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 800789e:	2b50      	cmp	r3, #80	@ 0x50
 80078a0:	d03c      	beq.n	800791c <HAL_TIM_ConfigClockSource+0xfe>
 80078a2:	2b50      	cmp	r3, #80	@ 0x50
 80078a4:	d873      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 80078a6:	2b40      	cmp	r3, #64	@ 0x40
 80078a8:	d058      	beq.n	800795c <HAL_TIM_ConfigClockSource+0x13e>
 80078aa:	2b40      	cmp	r3, #64	@ 0x40
 80078ac:	d86f      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 80078ae:	2b30      	cmp	r3, #48	@ 0x30
 80078b0:	d064      	beq.n	800797c <HAL_TIM_ConfigClockSource+0x15e>
 80078b2:	2b30      	cmp	r3, #48	@ 0x30
 80078b4:	d86b      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 80078b6:	2b20      	cmp	r3, #32
 80078b8:	d060      	beq.n	800797c <HAL_TIM_ConfigClockSource+0x15e>
 80078ba:	2b20      	cmp	r3, #32
 80078bc:	d867      	bhi.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 80078be:	2b00      	cmp	r3, #0
 80078c0:	d05c      	beq.n	800797c <HAL_TIM_ConfigClockSource+0x15e>
 80078c2:	2b10      	cmp	r3, #16
 80078c4:	d05a      	beq.n	800797c <HAL_TIM_ConfigClockSource+0x15e>
 80078c6:	e062      	b.n	800798e <HAL_TIM_ConfigClockSource+0x170>
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	6818      	ldr	r0, [r3, #0]
 80078cc:	683b      	ldr	r3, [r7, #0]
 80078ce:	6899      	ldr	r1, [r3, #8]
 80078d0:	683b      	ldr	r3, [r7, #0]
 80078d2:	685a      	ldr	r2, [r3, #4]
 80078d4:	683b      	ldr	r3, [r7, #0]
 80078d6:	68db      	ldr	r3, [r3, #12]
 80078d8:	f000 f97c 	bl	8007bd4 <TIM_ETR_SetConfig>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	689b      	ldr	r3, [r3, #8]
 80078e2:	60bb      	str	r3, [r7, #8]
 80078e4:	68bb      	ldr	r3, [r7, #8]
 80078e6:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80078ea:	60bb      	str	r3, [r7, #8]
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	68ba      	ldr	r2, [r7, #8]
 80078f2:	609a      	str	r2, [r3, #8]
 80078f4:	e04f      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	6818      	ldr	r0, [r3, #0]
 80078fa:	683b      	ldr	r3, [r7, #0]
 80078fc:	6899      	ldr	r1, [r3, #8]
 80078fe:	683b      	ldr	r3, [r7, #0]
 8007900:	685a      	ldr	r2, [r3, #4]
 8007902:	683b      	ldr	r3, [r7, #0]
 8007904:	68db      	ldr	r3, [r3, #12]
 8007906:	f000 f965 	bl	8007bd4 <TIM_ETR_SetConfig>
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	689a      	ldr	r2, [r3, #8]
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007918:	609a      	str	r2, [r3, #8]
 800791a:	e03c      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	6818      	ldr	r0, [r3, #0]
 8007920:	683b      	ldr	r3, [r7, #0]
 8007922:	6859      	ldr	r1, [r3, #4]
 8007924:	683b      	ldr	r3, [r7, #0]
 8007926:	68db      	ldr	r3, [r3, #12]
 8007928:	461a      	mov	r2, r3
 800792a:	f000 f8d9 	bl	8007ae0 <TIM_TI1_ConfigInputStage>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	681b      	ldr	r3, [r3, #0]
 8007932:	2150      	movs	r1, #80	@ 0x50
 8007934:	4618      	mov	r0, r3
 8007936:	f000 f932 	bl	8007b9e <TIM_ITRx_SetConfig>
 800793a:	e02c      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	6818      	ldr	r0, [r3, #0]
 8007940:	683b      	ldr	r3, [r7, #0]
 8007942:	6859      	ldr	r1, [r3, #4]
 8007944:	683b      	ldr	r3, [r7, #0]
 8007946:	68db      	ldr	r3, [r3, #12]
 8007948:	461a      	mov	r2, r3
 800794a:	f000 f8f8 	bl	8007b3e <TIM_TI2_ConfigInputStage>
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	681b      	ldr	r3, [r3, #0]
 8007952:	2160      	movs	r1, #96	@ 0x60
 8007954:	4618      	mov	r0, r3
 8007956:	f000 f922 	bl	8007b9e <TIM_ITRx_SetConfig>
 800795a:	e01c      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	6818      	ldr	r0, [r3, #0]
 8007960:	683b      	ldr	r3, [r7, #0]
 8007962:	6859      	ldr	r1, [r3, #4]
 8007964:	683b      	ldr	r3, [r7, #0]
 8007966:	68db      	ldr	r3, [r3, #12]
 8007968:	461a      	mov	r2, r3
 800796a:	f000 f8b9 	bl	8007ae0 <TIM_TI1_ConfigInputStage>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	2140      	movs	r1, #64	@ 0x40
 8007974:	4618      	mov	r0, r3
 8007976:	f000 f912 	bl	8007b9e <TIM_ITRx_SetConfig>
 800797a:	e00c      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	681a      	ldr	r2, [r3, #0]
 8007980:	683b      	ldr	r3, [r7, #0]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	4619      	mov	r1, r3
 8007986:	4610      	mov	r0, r2
 8007988:	f000 f909 	bl	8007b9e <TIM_ITRx_SetConfig>
 800798c:	e003      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 800798e:	2301      	movs	r3, #1
 8007990:	73fb      	strb	r3, [r7, #15]
 8007992:	e000      	b.n	8007996 <HAL_TIM_ConfigClockSource+0x178>
 8007994:	bf00      	nop
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	2201      	movs	r2, #1
 800799a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	2200      	movs	r2, #0
 80079a2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80079a6:	7bfb      	ldrb	r3, [r7, #15]
 80079a8:	4618      	mov	r0, r3
 80079aa:	3710      	adds	r7, #16
 80079ac:	46bd      	mov	sp, r7
 80079ae:	bd80      	pop	{r7, pc}

080079b0 <HAL_TIM_OC_DelayElapsedCallback>:
 80079b0:	b480      	push	{r7}
 80079b2:	b083      	sub	sp, #12
 80079b4:	af00      	add	r7, sp, #0
 80079b6:	6078      	str	r0, [r7, #4]
 80079b8:	bf00      	nop
 80079ba:	370c      	adds	r7, #12
 80079bc:	46bd      	mov	sp, r7
 80079be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079c2:	4770      	bx	lr

080079c4 <HAL_TIM_IC_CaptureCallback>:
 80079c4:	b480      	push	{r7}
 80079c6:	b083      	sub	sp, #12
 80079c8:	af00      	add	r7, sp, #0
 80079ca:	6078      	str	r0, [r7, #4]
 80079cc:	bf00      	nop
 80079ce:	370c      	adds	r7, #12
 80079d0:	46bd      	mov	sp, r7
 80079d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079d6:	4770      	bx	lr

080079d8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80079d8:	b480      	push	{r7}
 80079da:	b083      	sub	sp, #12
 80079dc:	af00      	add	r7, sp, #0
 80079de:	6078      	str	r0, [r7, #4]
 80079e0:	bf00      	nop
 80079e2:	370c      	adds	r7, #12
 80079e4:	46bd      	mov	sp, r7
 80079e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ea:	4770      	bx	lr

080079ec <HAL_TIM_TriggerCallback>:
 80079ec:	b480      	push	{r7}
 80079ee:	b083      	sub	sp, #12
 80079f0:	af00      	add	r7, sp, #0
 80079f2:	6078      	str	r0, [r7, #4]
 80079f4:	bf00      	nop
 80079f6:	370c      	adds	r7, #12
 80079f8:	46bd      	mov	sp, r7
 80079fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079fe:	4770      	bx	lr

08007a00 <TIM_Base_SetConfig>:
 8007a00:	b480      	push	{r7}
 8007a02:	b085      	sub	sp, #20
 8007a04:	af00      	add	r7, sp, #0
 8007a06:	6078      	str	r0, [r7, #4]
 8007a08:	6039      	str	r1, [r7, #0]
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	60fb      	str	r3, [r7, #12]
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	4a30      	ldr	r2, [pc, #192]	@ (8007ad4 <TIM_Base_SetConfig+0xd4>)
 8007a14:	4293      	cmp	r3, r2
 8007a16:	d003      	beq.n	8007a20 <TIM_Base_SetConfig+0x20>
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a1e:	d108      	bne.n	8007a32 <TIM_Base_SetConfig+0x32>
 8007a20:	68fb      	ldr	r3, [r7, #12]
 8007a22:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a26:	60fb      	str	r3, [r7, #12]
 8007a28:	683b      	ldr	r3, [r7, #0]
 8007a2a:	685b      	ldr	r3, [r3, #4]
 8007a2c:	68fa      	ldr	r2, [r7, #12]
 8007a2e:	4313      	orrs	r3, r2
 8007a30:	60fb      	str	r3, [r7, #12]
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	4a27      	ldr	r2, [pc, #156]	@ (8007ad4 <TIM_Base_SetConfig+0xd4>)
 8007a36:	4293      	cmp	r3, r2
 8007a38:	d00b      	beq.n	8007a52 <TIM_Base_SetConfig+0x52>
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a40:	d007      	beq.n	8007a52 <TIM_Base_SetConfig+0x52>
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	4a24      	ldr	r2, [pc, #144]	@ (8007ad8 <TIM_Base_SetConfig+0xd8>)
 8007a46:	4293      	cmp	r3, r2
 8007a48:	d003      	beq.n	8007a52 <TIM_Base_SetConfig+0x52>
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	4a23      	ldr	r2, [pc, #140]	@ (8007adc <TIM_Base_SetConfig+0xdc>)
 8007a4e:	4293      	cmp	r3, r2
 8007a50:	d108      	bne.n	8007a64 <TIM_Base_SetConfig+0x64>
 8007a52:	68fb      	ldr	r3, [r7, #12]
 8007a54:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007a58:	60fb      	str	r3, [r7, #12]
 8007a5a:	683b      	ldr	r3, [r7, #0]
 8007a5c:	68db      	ldr	r3, [r3, #12]
 8007a5e:	68fa      	ldr	r2, [r7, #12]
 8007a60:	4313      	orrs	r3, r2
 8007a62:	60fb      	str	r3, [r7, #12]
 8007a64:	68fb      	ldr	r3, [r7, #12]
 8007a66:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8007a6a:	683b      	ldr	r3, [r7, #0]
 8007a6c:	695b      	ldr	r3, [r3, #20]
 8007a6e:	4313      	orrs	r3, r2
 8007a70:	60fb      	str	r3, [r7, #12]
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	68fa      	ldr	r2, [r7, #12]
 8007a76:	601a      	str	r2, [r3, #0]
 8007a78:	683b      	ldr	r3, [r7, #0]
 8007a7a:	689a      	ldr	r2, [r3, #8]
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007a80:	683b      	ldr	r3, [r7, #0]
 8007a82:	681a      	ldr	r2, [r3, #0]
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	629a      	str	r2, [r3, #40]	@ 0x28
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	4a12      	ldr	r2, [pc, #72]	@ (8007ad4 <TIM_Base_SetConfig+0xd4>)
 8007a8c:	4293      	cmp	r3, r2
 8007a8e:	d007      	beq.n	8007aa0 <TIM_Base_SetConfig+0xa0>
 8007a90:	687b      	ldr	r3, [r7, #4]
 8007a92:	4a11      	ldr	r2, [pc, #68]	@ (8007ad8 <TIM_Base_SetConfig+0xd8>)
 8007a94:	4293      	cmp	r3, r2
 8007a96:	d003      	beq.n	8007aa0 <TIM_Base_SetConfig+0xa0>
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	4a10      	ldr	r2, [pc, #64]	@ (8007adc <TIM_Base_SetConfig+0xdc>)
 8007a9c:	4293      	cmp	r3, r2
 8007a9e:	d103      	bne.n	8007aa8 <TIM_Base_SetConfig+0xa8>
 8007aa0:	683b      	ldr	r3, [r7, #0]
 8007aa2:	691a      	ldr	r2, [r3, #16]
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	631a      	str	r2, [r3, #48]	@ 0x30
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	2201      	movs	r2, #1
 8007aac:	615a      	str	r2, [r3, #20]
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	691b      	ldr	r3, [r3, #16]
 8007ab2:	f003 0301 	and.w	r3, r3, #1
 8007ab6:	2b01      	cmp	r3, #1
 8007ab8:	d105      	bne.n	8007ac6 <TIM_Base_SetConfig+0xc6>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	691b      	ldr	r3, [r3, #16]
 8007abe:	f023 0201 	bic.w	r2, r3, #1
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	611a      	str	r2, [r3, #16]
 8007ac6:	bf00      	nop
 8007ac8:	3714      	adds	r7, #20
 8007aca:	46bd      	mov	sp, r7
 8007acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ad0:	4770      	bx	lr
 8007ad2:	bf00      	nop
 8007ad4:	40012c00 	.word	0x40012c00
 8007ad8:	40014000 	.word	0x40014000
 8007adc:	40014400 	.word	0x40014400

08007ae0 <TIM_TI1_ConfigInputStage>:
 8007ae0:	b480      	push	{r7}
 8007ae2:	b087      	sub	sp, #28
 8007ae4:	af00      	add	r7, sp, #0
 8007ae6:	60f8      	str	r0, [r7, #12]
 8007ae8:	60b9      	str	r1, [r7, #8]
 8007aea:	607a      	str	r2, [r7, #4]
 8007aec:	68fb      	ldr	r3, [r7, #12]
 8007aee:	6a1b      	ldr	r3, [r3, #32]
 8007af0:	617b      	str	r3, [r7, #20]
 8007af2:	68fb      	ldr	r3, [r7, #12]
 8007af4:	6a1b      	ldr	r3, [r3, #32]
 8007af6:	f023 0201 	bic.w	r2, r3, #1
 8007afa:	68fb      	ldr	r3, [r7, #12]
 8007afc:	621a      	str	r2, [r3, #32]
 8007afe:	68fb      	ldr	r3, [r7, #12]
 8007b00:	699b      	ldr	r3, [r3, #24]
 8007b02:	613b      	str	r3, [r7, #16]
 8007b04:	693b      	ldr	r3, [r7, #16]
 8007b06:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007b0a:	613b      	str	r3, [r7, #16]
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	011b      	lsls	r3, r3, #4
 8007b10:	693a      	ldr	r2, [r7, #16]
 8007b12:	4313      	orrs	r3, r2
 8007b14:	613b      	str	r3, [r7, #16]
 8007b16:	697b      	ldr	r3, [r7, #20]
 8007b18:	f023 030a 	bic.w	r3, r3, #10
 8007b1c:	617b      	str	r3, [r7, #20]
 8007b1e:	697a      	ldr	r2, [r7, #20]
 8007b20:	68bb      	ldr	r3, [r7, #8]
 8007b22:	4313      	orrs	r3, r2
 8007b24:	617b      	str	r3, [r7, #20]
 8007b26:	68fb      	ldr	r3, [r7, #12]
 8007b28:	693a      	ldr	r2, [r7, #16]
 8007b2a:	619a      	str	r2, [r3, #24]
 8007b2c:	68fb      	ldr	r3, [r7, #12]
 8007b2e:	697a      	ldr	r2, [r7, #20]
 8007b30:	621a      	str	r2, [r3, #32]
 8007b32:	bf00      	nop
 8007b34:	371c      	adds	r7, #28
 8007b36:	46bd      	mov	sp, r7
 8007b38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b3c:	4770      	bx	lr

08007b3e <TIM_TI2_ConfigInputStage>:
 8007b3e:	b480      	push	{r7}
 8007b40:	b087      	sub	sp, #28
 8007b42:	af00      	add	r7, sp, #0
 8007b44:	60f8      	str	r0, [r7, #12]
 8007b46:	60b9      	str	r1, [r7, #8]
 8007b48:	607a      	str	r2, [r7, #4]
 8007b4a:	68fb      	ldr	r3, [r7, #12]
 8007b4c:	6a1b      	ldr	r3, [r3, #32]
 8007b4e:	617b      	str	r3, [r7, #20]
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	6a1b      	ldr	r3, [r3, #32]
 8007b54:	f023 0210 	bic.w	r2, r3, #16
 8007b58:	68fb      	ldr	r3, [r7, #12]
 8007b5a:	621a      	str	r2, [r3, #32]
 8007b5c:	68fb      	ldr	r3, [r7, #12]
 8007b5e:	699b      	ldr	r3, [r3, #24]
 8007b60:	613b      	str	r3, [r7, #16]
 8007b62:	693b      	ldr	r3, [r7, #16]
 8007b64:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007b68:	613b      	str	r3, [r7, #16]
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	031b      	lsls	r3, r3, #12
 8007b6e:	693a      	ldr	r2, [r7, #16]
 8007b70:	4313      	orrs	r3, r2
 8007b72:	613b      	str	r3, [r7, #16]
 8007b74:	697b      	ldr	r3, [r7, #20]
 8007b76:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007b7a:	617b      	str	r3, [r7, #20]
 8007b7c:	68bb      	ldr	r3, [r7, #8]
 8007b7e:	011b      	lsls	r3, r3, #4
 8007b80:	697a      	ldr	r2, [r7, #20]
 8007b82:	4313      	orrs	r3, r2
 8007b84:	617b      	str	r3, [r7, #20]
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	693a      	ldr	r2, [r7, #16]
 8007b8a:	619a      	str	r2, [r3, #24]
 8007b8c:	68fb      	ldr	r3, [r7, #12]
 8007b8e:	697a      	ldr	r2, [r7, #20]
 8007b90:	621a      	str	r2, [r3, #32]
 8007b92:	bf00      	nop
 8007b94:	371c      	adds	r7, #28
 8007b96:	46bd      	mov	sp, r7
 8007b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b9c:	4770      	bx	lr

08007b9e <TIM_ITRx_SetConfig>:
 8007b9e:	b480      	push	{r7}
 8007ba0:	b085      	sub	sp, #20
 8007ba2:	af00      	add	r7, sp, #0
 8007ba4:	6078      	str	r0, [r7, #4]
 8007ba6:	6039      	str	r1, [r7, #0]
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	689b      	ldr	r3, [r3, #8]
 8007bac:	60fb      	str	r3, [r7, #12]
 8007bae:	68fb      	ldr	r3, [r7, #12]
 8007bb0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007bb4:	60fb      	str	r3, [r7, #12]
 8007bb6:	683a      	ldr	r2, [r7, #0]
 8007bb8:	68fb      	ldr	r3, [r7, #12]
 8007bba:	4313      	orrs	r3, r2
 8007bbc:	f043 0307 	orr.w	r3, r3, #7
 8007bc0:	60fb      	str	r3, [r7, #12]
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	68fa      	ldr	r2, [r7, #12]
 8007bc6:	609a      	str	r2, [r3, #8]
 8007bc8:	bf00      	nop
 8007bca:	3714      	adds	r7, #20
 8007bcc:	46bd      	mov	sp, r7
 8007bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bd2:	4770      	bx	lr

08007bd4 <TIM_ETR_SetConfig>:
 8007bd4:	b480      	push	{r7}
 8007bd6:	b087      	sub	sp, #28
 8007bd8:	af00      	add	r7, sp, #0
 8007bda:	60f8      	str	r0, [r7, #12]
 8007bdc:	60b9      	str	r1, [r7, #8]
 8007bde:	607a      	str	r2, [r7, #4]
 8007be0:	603b      	str	r3, [r7, #0]
 8007be2:	68fb      	ldr	r3, [r7, #12]
 8007be4:	689b      	ldr	r3, [r3, #8]
 8007be6:	617b      	str	r3, [r7, #20]
 8007be8:	697b      	ldr	r3, [r7, #20]
 8007bea:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007bee:	617b      	str	r3, [r7, #20]
 8007bf0:	683b      	ldr	r3, [r7, #0]
 8007bf2:	021a      	lsls	r2, r3, #8
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	431a      	orrs	r2, r3
 8007bf8:	68bb      	ldr	r3, [r7, #8]
 8007bfa:	4313      	orrs	r3, r2
 8007bfc:	697a      	ldr	r2, [r7, #20]
 8007bfe:	4313      	orrs	r3, r2
 8007c00:	617b      	str	r3, [r7, #20]
 8007c02:	68fb      	ldr	r3, [r7, #12]
 8007c04:	697a      	ldr	r2, [r7, #20]
 8007c06:	609a      	str	r2, [r3, #8]
 8007c08:	bf00      	nop
 8007c0a:	371c      	adds	r7, #28
 8007c0c:	46bd      	mov	sp, r7
 8007c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c12:	4770      	bx	lr

08007c14 <HAL_TIMEx_MasterConfigSynchronization>:
 8007c14:	b480      	push	{r7}
 8007c16:	b085      	sub	sp, #20
 8007c18:	af00      	add	r7, sp, #0
 8007c1a:	6078      	str	r0, [r7, #4]
 8007c1c:	6039      	str	r1, [r7, #0]
 8007c1e:	687b      	ldr	r3, [r7, #4]
 8007c20:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007c24:	2b01      	cmp	r3, #1
 8007c26:	d101      	bne.n	8007c2c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007c28:	2302      	movs	r3, #2
 8007c2a:	e04f      	b.n	8007ccc <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	2201      	movs	r2, #1
 8007c30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	2202      	movs	r2, #2
 8007c38:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	685b      	ldr	r3, [r3, #4]
 8007c42:	60fb      	str	r3, [r7, #12]
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	681b      	ldr	r3, [r3, #0]
 8007c48:	689b      	ldr	r3, [r3, #8]
 8007c4a:	60bb      	str	r3, [r7, #8]
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	681b      	ldr	r3, [r3, #0]
 8007c50:	4a21      	ldr	r2, [pc, #132]	@ (8007cd8 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 8007c52:	4293      	cmp	r3, r2
 8007c54:	d108      	bne.n	8007c68 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 8007c56:	68fb      	ldr	r3, [r7, #12]
 8007c58:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8007c5c:	60fb      	str	r3, [r7, #12]
 8007c5e:	683b      	ldr	r3, [r7, #0]
 8007c60:	685b      	ldr	r3, [r3, #4]
 8007c62:	68fa      	ldr	r2, [r7, #12]
 8007c64:	4313      	orrs	r3, r2
 8007c66:	60fb      	str	r3, [r7, #12]
 8007c68:	68fb      	ldr	r3, [r7, #12]
 8007c6a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c6e:	60fb      	str	r3, [r7, #12]
 8007c70:	683b      	ldr	r3, [r7, #0]
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	68fa      	ldr	r2, [r7, #12]
 8007c76:	4313      	orrs	r3, r2
 8007c78:	60fb      	str	r3, [r7, #12]
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	68fa      	ldr	r2, [r7, #12]
 8007c80:	605a      	str	r2, [r3, #4]
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	681b      	ldr	r3, [r3, #0]
 8007c86:	4a14      	ldr	r2, [pc, #80]	@ (8007cd8 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 8007c88:	4293      	cmp	r3, r2
 8007c8a:	d009      	beq.n	8007ca0 <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	681b      	ldr	r3, [r3, #0]
 8007c90:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007c94:	d004      	beq.n	8007ca0 <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 8007c96:	687b      	ldr	r3, [r7, #4]
 8007c98:	681b      	ldr	r3, [r3, #0]
 8007c9a:	4a10      	ldr	r2, [pc, #64]	@ (8007cdc <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8007c9c:	4293      	cmp	r3, r2
 8007c9e:	d10c      	bne.n	8007cba <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8007ca0:	68bb      	ldr	r3, [r7, #8]
 8007ca2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007ca6:	60bb      	str	r3, [r7, #8]
 8007ca8:	683b      	ldr	r3, [r7, #0]
 8007caa:	689b      	ldr	r3, [r3, #8]
 8007cac:	68ba      	ldr	r2, [r7, #8]
 8007cae:	4313      	orrs	r3, r2
 8007cb0:	60bb      	str	r3, [r7, #8]
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	681b      	ldr	r3, [r3, #0]
 8007cb6:	68ba      	ldr	r2, [r7, #8]
 8007cb8:	609a      	str	r2, [r3, #8]
 8007cba:	687b      	ldr	r3, [r7, #4]
 8007cbc:	2201      	movs	r2, #1
 8007cbe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	2200      	movs	r2, #0
 8007cc6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007cca:	2300      	movs	r3, #0
 8007ccc:	4618      	mov	r0, r3
 8007cce:	3714      	adds	r7, #20
 8007cd0:	46bd      	mov	sp, r7
 8007cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cd6:	4770      	bx	lr
 8007cd8:	40012c00 	.word	0x40012c00
 8007cdc:	40014000 	.word	0x40014000

08007ce0 <HAL_TIMEx_CommutCallback>:
 8007ce0:	b480      	push	{r7}
 8007ce2:	b083      	sub	sp, #12
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	6078      	str	r0, [r7, #4]
 8007ce8:	bf00      	nop
 8007cea:	370c      	adds	r7, #12
 8007cec:	46bd      	mov	sp, r7
 8007cee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cf2:	4770      	bx	lr

08007cf4 <HAL_TIMEx_BreakCallback>:
 8007cf4:	b480      	push	{r7}
 8007cf6:	b083      	sub	sp, #12
 8007cf8:	af00      	add	r7, sp, #0
 8007cfa:	6078      	str	r0, [r7, #4]
 8007cfc:	bf00      	nop
 8007cfe:	370c      	adds	r7, #12
 8007d00:	46bd      	mov	sp, r7
 8007d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d06:	4770      	bx	lr

08007d08 <HAL_TIMEx_Break2Callback>:
 8007d08:	b480      	push	{r7}
 8007d0a:	b083      	sub	sp, #12
 8007d0c:	af00      	add	r7, sp, #0
 8007d0e:	6078      	str	r0, [r7, #4]
 8007d10:	bf00      	nop
 8007d12:	370c      	adds	r7, #12
 8007d14:	46bd      	mov	sp, r7
 8007d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d1a:	4770      	bx	lr

08007d1c <HAL_UART_Init>:
 8007d1c:	b580      	push	{r7, lr}
 8007d1e:	b082      	sub	sp, #8
 8007d20:	af00      	add	r7, sp, #0
 8007d22:	6078      	str	r0, [r7, #4]
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	2b00      	cmp	r3, #0
 8007d28:	d101      	bne.n	8007d2e <HAL_UART_Init+0x12>
 8007d2a:	2301      	movs	r3, #1
 8007d2c:	e040      	b.n	8007db0 <HAL_UART_Init+0x94>
 8007d2e:	687b      	ldr	r3, [r7, #4]
 8007d30:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007d32:	2b00      	cmp	r3, #0
 8007d34:	d106      	bne.n	8007d44 <HAL_UART_Init+0x28>
 8007d36:	687b      	ldr	r3, [r7, #4]
 8007d38:	2200      	movs	r2, #0
 8007d3a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007d3e:	6878      	ldr	r0, [r7, #4]
 8007d40:	f7fb ff10 	bl	8003b64 <HAL_UART_MspInit>
 8007d44:	687b      	ldr	r3, [r7, #4]
 8007d46:	2224      	movs	r2, #36	@ 0x24
 8007d48:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007d4a:	687b      	ldr	r3, [r7, #4]
 8007d4c:	681b      	ldr	r3, [r3, #0]
 8007d4e:	681a      	ldr	r2, [r3, #0]
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	681b      	ldr	r3, [r3, #0]
 8007d54:	f022 0201 	bic.w	r2, r2, #1
 8007d58:	601a      	str	r2, [r3, #0]
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007d5e:	2b00      	cmp	r3, #0
 8007d60:	d002      	beq.n	8007d68 <HAL_UART_Init+0x4c>
 8007d62:	6878      	ldr	r0, [r7, #4]
 8007d64:	f000 fb2a 	bl	80083bc <UART_AdvFeatureConfig>
 8007d68:	6878      	ldr	r0, [r7, #4]
 8007d6a:	f000 f8cd 	bl	8007f08 <UART_SetConfig>
 8007d6e:	4603      	mov	r3, r0
 8007d70:	2b01      	cmp	r3, #1
 8007d72:	d101      	bne.n	8007d78 <HAL_UART_Init+0x5c>
 8007d74:	2301      	movs	r3, #1
 8007d76:	e01b      	b.n	8007db0 <HAL_UART_Init+0x94>
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	681b      	ldr	r3, [r3, #0]
 8007d7c:	685a      	ldr	r2, [r3, #4]
 8007d7e:	687b      	ldr	r3, [r7, #4]
 8007d80:	681b      	ldr	r3, [r3, #0]
 8007d82:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8007d86:	605a      	str	r2, [r3, #4]
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	681b      	ldr	r3, [r3, #0]
 8007d8c:	689a      	ldr	r2, [r3, #8]
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8007d96:	609a      	str	r2, [r3, #8]
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	681a      	ldr	r2, [r3, #0]
 8007d9e:	687b      	ldr	r3, [r7, #4]
 8007da0:	681b      	ldr	r3, [r3, #0]
 8007da2:	f042 0201 	orr.w	r2, r2, #1
 8007da6:	601a      	str	r2, [r3, #0]
 8007da8:	6878      	ldr	r0, [r7, #4]
 8007daa:	f000 fba9 	bl	8008500 <UART_CheckIdleState>
 8007dae:	4603      	mov	r3, r0
 8007db0:	4618      	mov	r0, r3
 8007db2:	3708      	adds	r7, #8
 8007db4:	46bd      	mov	sp, r7
 8007db6:	bd80      	pop	{r7, pc}

08007db8 <HAL_UART_Transmit>:
 8007db8:	b580      	push	{r7, lr}
 8007dba:	b08a      	sub	sp, #40	@ 0x28
 8007dbc:	af02      	add	r7, sp, #8
 8007dbe:	60f8      	str	r0, [r7, #12]
 8007dc0:	60b9      	str	r1, [r7, #8]
 8007dc2:	603b      	str	r3, [r7, #0]
 8007dc4:	4613      	mov	r3, r2
 8007dc6:	80fb      	strh	r3, [r7, #6]
 8007dc8:	68fb      	ldr	r3, [r7, #12]
 8007dca:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007dcc:	2b20      	cmp	r3, #32
 8007dce:	d177      	bne.n	8007ec0 <HAL_UART_Transmit+0x108>
 8007dd0:	68bb      	ldr	r3, [r7, #8]
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d002      	beq.n	8007ddc <HAL_UART_Transmit+0x24>
 8007dd6:	88fb      	ldrh	r3, [r7, #6]
 8007dd8:	2b00      	cmp	r3, #0
 8007dda:	d101      	bne.n	8007de0 <HAL_UART_Transmit+0x28>
 8007ddc:	2301      	movs	r3, #1
 8007dde:	e070      	b.n	8007ec2 <HAL_UART_Transmit+0x10a>
 8007de0:	68fb      	ldr	r3, [r7, #12]
 8007de2:	2200      	movs	r2, #0
 8007de4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007de8:	68fb      	ldr	r3, [r7, #12]
 8007dea:	2221      	movs	r2, #33	@ 0x21
 8007dec:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007dee:	f7fc f93d 	bl	800406c <HAL_GetTick>
 8007df2:	6178      	str	r0, [r7, #20]
 8007df4:	68fb      	ldr	r3, [r7, #12]
 8007df6:	88fa      	ldrh	r2, [r7, #6]
 8007df8:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	88fa      	ldrh	r2, [r7, #6]
 8007e00:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8007e04:	68fb      	ldr	r3, [r7, #12]
 8007e06:	689b      	ldr	r3, [r3, #8]
 8007e08:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007e0c:	d108      	bne.n	8007e20 <HAL_UART_Transmit+0x68>
 8007e0e:	68fb      	ldr	r3, [r7, #12]
 8007e10:	691b      	ldr	r3, [r3, #16]
 8007e12:	2b00      	cmp	r3, #0
 8007e14:	d104      	bne.n	8007e20 <HAL_UART_Transmit+0x68>
 8007e16:	2300      	movs	r3, #0
 8007e18:	61fb      	str	r3, [r7, #28]
 8007e1a:	68bb      	ldr	r3, [r7, #8]
 8007e1c:	61bb      	str	r3, [r7, #24]
 8007e1e:	e003      	b.n	8007e28 <HAL_UART_Transmit+0x70>
 8007e20:	68bb      	ldr	r3, [r7, #8]
 8007e22:	61fb      	str	r3, [r7, #28]
 8007e24:	2300      	movs	r3, #0
 8007e26:	61bb      	str	r3, [r7, #24]
 8007e28:	e02f      	b.n	8007e8a <HAL_UART_Transmit+0xd2>
 8007e2a:	683b      	ldr	r3, [r7, #0]
 8007e2c:	9300      	str	r3, [sp, #0]
 8007e2e:	697b      	ldr	r3, [r7, #20]
 8007e30:	2200      	movs	r2, #0
 8007e32:	2180      	movs	r1, #128	@ 0x80
 8007e34:	68f8      	ldr	r0, [r7, #12]
 8007e36:	f000 fc0b 	bl	8008650 <UART_WaitOnFlagUntilTimeout>
 8007e3a:	4603      	mov	r3, r0
 8007e3c:	2b00      	cmp	r3, #0
 8007e3e:	d004      	beq.n	8007e4a <HAL_UART_Transmit+0x92>
 8007e40:	68fb      	ldr	r3, [r7, #12]
 8007e42:	2220      	movs	r2, #32
 8007e44:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007e46:	2303      	movs	r3, #3
 8007e48:	e03b      	b.n	8007ec2 <HAL_UART_Transmit+0x10a>
 8007e4a:	69fb      	ldr	r3, [r7, #28]
 8007e4c:	2b00      	cmp	r3, #0
 8007e4e:	d10b      	bne.n	8007e68 <HAL_UART_Transmit+0xb0>
 8007e50:	69bb      	ldr	r3, [r7, #24]
 8007e52:	881a      	ldrh	r2, [r3, #0]
 8007e54:	68fb      	ldr	r3, [r7, #12]
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007e5c:	b292      	uxth	r2, r2
 8007e5e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8007e60:	69bb      	ldr	r3, [r7, #24]
 8007e62:	3302      	adds	r3, #2
 8007e64:	61bb      	str	r3, [r7, #24]
 8007e66:	e007      	b.n	8007e78 <HAL_UART_Transmit+0xc0>
 8007e68:	69fb      	ldr	r3, [r7, #28]
 8007e6a:	781a      	ldrb	r2, [r3, #0]
 8007e6c:	68fb      	ldr	r3, [r7, #12]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	851a      	strh	r2, [r3, #40]	@ 0x28
 8007e72:	69fb      	ldr	r3, [r7, #28]
 8007e74:	3301      	adds	r3, #1
 8007e76:	61fb      	str	r3, [r7, #28]
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8007e7e:	b29b      	uxth	r3, r3
 8007e80:	3b01      	subs	r3, #1
 8007e82:	b29a      	uxth	r2, r3
 8007e84:	68fb      	ldr	r3, [r7, #12]
 8007e86:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8007e8a:	68fb      	ldr	r3, [r7, #12]
 8007e8c:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
 8007e90:	b29b      	uxth	r3, r3
 8007e92:	2b00      	cmp	r3, #0
 8007e94:	d1c9      	bne.n	8007e2a <HAL_UART_Transmit+0x72>
 8007e96:	683b      	ldr	r3, [r7, #0]
 8007e98:	9300      	str	r3, [sp, #0]
 8007e9a:	697b      	ldr	r3, [r7, #20]
 8007e9c:	2200      	movs	r2, #0
 8007e9e:	2140      	movs	r1, #64	@ 0x40
 8007ea0:	68f8      	ldr	r0, [r7, #12]
 8007ea2:	f000 fbd5 	bl	8008650 <UART_WaitOnFlagUntilTimeout>
 8007ea6:	4603      	mov	r3, r0
 8007ea8:	2b00      	cmp	r3, #0
 8007eaa:	d004      	beq.n	8007eb6 <HAL_UART_Transmit+0xfe>
 8007eac:	68fb      	ldr	r3, [r7, #12]
 8007eae:	2220      	movs	r2, #32
 8007eb0:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007eb2:	2303      	movs	r3, #3
 8007eb4:	e005      	b.n	8007ec2 <HAL_UART_Transmit+0x10a>
 8007eb6:	68fb      	ldr	r3, [r7, #12]
 8007eb8:	2220      	movs	r2, #32
 8007eba:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007ebc:	2300      	movs	r3, #0
 8007ebe:	e000      	b.n	8007ec2 <HAL_UART_Transmit+0x10a>
 8007ec0:	2302      	movs	r3, #2
 8007ec2:	4618      	mov	r0, r3
 8007ec4:	3720      	adds	r7, #32
 8007ec6:	46bd      	mov	sp, r7
 8007ec8:	bd80      	pop	{r7, pc}

08007eca <HAL_UART_RxCpltCallback>:
 8007eca:	b480      	push	{r7}
 8007ecc:	b083      	sub	sp, #12
 8007ece:	af00      	add	r7, sp, #0
 8007ed0:	6078      	str	r0, [r7, #4]
 8007ed2:	bf00      	nop
 8007ed4:	370c      	adds	r7, #12
 8007ed6:	46bd      	mov	sp, r7
 8007ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007edc:	4770      	bx	lr

08007ede <HAL_UART_RxHalfCpltCallback>:
 8007ede:	b480      	push	{r7}
 8007ee0:	b083      	sub	sp, #12
 8007ee2:	af00      	add	r7, sp, #0
 8007ee4:	6078      	str	r0, [r7, #4]
 8007ee6:	bf00      	nop
 8007ee8:	370c      	adds	r7, #12
 8007eea:	46bd      	mov	sp, r7
 8007eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef0:	4770      	bx	lr

08007ef2 <HAL_UART_ErrorCallback>:
 8007ef2:	b480      	push	{r7}
 8007ef4:	b083      	sub	sp, #12
 8007ef6:	af00      	add	r7, sp, #0
 8007ef8:	6078      	str	r0, [r7, #4]
 8007efa:	bf00      	nop
 8007efc:	370c      	adds	r7, #12
 8007efe:	46bd      	mov	sp, r7
 8007f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f04:	4770      	bx	lr
	...

08007f08 <UART_SetConfig>:
 8007f08:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007f0c:	b08a      	sub	sp, #40	@ 0x28
 8007f0e:	af00      	add	r7, sp, #0
 8007f10:	60f8      	str	r0, [r7, #12]
 8007f12:	2300      	movs	r3, #0
 8007f14:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8007f18:	68fb      	ldr	r3, [r7, #12]
 8007f1a:	689a      	ldr	r2, [r3, #8]
 8007f1c:	68fb      	ldr	r3, [r7, #12]
 8007f1e:	691b      	ldr	r3, [r3, #16]
 8007f20:	431a      	orrs	r2, r3
 8007f22:	68fb      	ldr	r3, [r7, #12]
 8007f24:	695b      	ldr	r3, [r3, #20]
 8007f26:	431a      	orrs	r2, r3
 8007f28:	68fb      	ldr	r3, [r7, #12]
 8007f2a:	69db      	ldr	r3, [r3, #28]
 8007f2c:	4313      	orrs	r3, r2
 8007f2e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007f30:	68fb      	ldr	r3, [r7, #12]
 8007f32:	681b      	ldr	r3, [r3, #0]
 8007f34:	681a      	ldr	r2, [r3, #0]
 8007f36:	4b9e      	ldr	r3, [pc, #632]	@ (80081b0 <UART_SetConfig+0x2a8>)
 8007f38:	4013      	ands	r3, r2
 8007f3a:	68fa      	ldr	r2, [r7, #12]
 8007f3c:	6812      	ldr	r2, [r2, #0]
 8007f3e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8007f40:	430b      	orrs	r3, r1
 8007f42:	6013      	str	r3, [r2, #0]
 8007f44:	68fb      	ldr	r3, [r7, #12]
 8007f46:	681b      	ldr	r3, [r3, #0]
 8007f48:	685b      	ldr	r3, [r3, #4]
 8007f4a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8007f4e:	68fb      	ldr	r3, [r7, #12]
 8007f50:	68da      	ldr	r2, [r3, #12]
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	430a      	orrs	r2, r1
 8007f58:	605a      	str	r2, [r3, #4]
 8007f5a:	68fb      	ldr	r3, [r7, #12]
 8007f5c:	699b      	ldr	r3, [r3, #24]
 8007f5e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	681b      	ldr	r3, [r3, #0]
 8007f64:	4a93      	ldr	r2, [pc, #588]	@ (80081b4 <UART_SetConfig+0x2ac>)
 8007f66:	4293      	cmp	r3, r2
 8007f68:	d004      	beq.n	8007f74 <UART_SetConfig+0x6c>
 8007f6a:	68fb      	ldr	r3, [r7, #12]
 8007f6c:	6a1b      	ldr	r3, [r3, #32]
 8007f6e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007f70:	4313      	orrs	r3, r2
 8007f72:	627b      	str	r3, [r7, #36]	@ 0x24
 8007f74:	68fb      	ldr	r3, [r7, #12]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	689b      	ldr	r3, [r3, #8]
 8007f7a:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 8007f7e:	68fb      	ldr	r3, [r7, #12]
 8007f80:	681b      	ldr	r3, [r3, #0]
 8007f82:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007f84:	430a      	orrs	r2, r1
 8007f86:	609a      	str	r2, [r3, #8]
 8007f88:	68fb      	ldr	r3, [r7, #12]
 8007f8a:	681b      	ldr	r3, [r3, #0]
 8007f8c:	4a8a      	ldr	r2, [pc, #552]	@ (80081b8 <UART_SetConfig+0x2b0>)
 8007f8e:	4293      	cmp	r3, r2
 8007f90:	d126      	bne.n	8007fe0 <UART_SetConfig+0xd8>
 8007f92:	4b8a      	ldr	r3, [pc, #552]	@ (80081bc <UART_SetConfig+0x2b4>)
 8007f94:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007f98:	f003 0303 	and.w	r3, r3, #3
 8007f9c:	2b03      	cmp	r3, #3
 8007f9e:	d81b      	bhi.n	8007fd8 <UART_SetConfig+0xd0>
 8007fa0:	a201      	add	r2, pc, #4	@ (adr r2, 8007fa8 <UART_SetConfig+0xa0>)
 8007fa2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007fa6:	bf00      	nop
 8007fa8:	08007fb9 	.word	0x08007fb9
 8007fac:	08007fc9 	.word	0x08007fc9
 8007fb0:	08007fc1 	.word	0x08007fc1
 8007fb4:	08007fd1 	.word	0x08007fd1
 8007fb8:	2301      	movs	r3, #1
 8007fba:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007fbe:	e0ab      	b.n	8008118 <UART_SetConfig+0x210>
 8007fc0:	2302      	movs	r3, #2
 8007fc2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007fc6:	e0a7      	b.n	8008118 <UART_SetConfig+0x210>
 8007fc8:	2304      	movs	r3, #4
 8007fca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007fce:	e0a3      	b.n	8008118 <UART_SetConfig+0x210>
 8007fd0:	2308      	movs	r3, #8
 8007fd2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007fd6:	e09f      	b.n	8008118 <UART_SetConfig+0x210>
 8007fd8:	2310      	movs	r3, #16
 8007fda:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007fde:	e09b      	b.n	8008118 <UART_SetConfig+0x210>
 8007fe0:	68fb      	ldr	r3, [r7, #12]
 8007fe2:	681b      	ldr	r3, [r3, #0]
 8007fe4:	4a76      	ldr	r2, [pc, #472]	@ (80081c0 <UART_SetConfig+0x2b8>)
 8007fe6:	4293      	cmp	r3, r2
 8007fe8:	d138      	bne.n	800805c <UART_SetConfig+0x154>
 8007fea:	4b74      	ldr	r3, [pc, #464]	@ (80081bc <UART_SetConfig+0x2b4>)
 8007fec:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007ff0:	f003 030c 	and.w	r3, r3, #12
 8007ff4:	2b0c      	cmp	r3, #12
 8007ff6:	d82d      	bhi.n	8008054 <UART_SetConfig+0x14c>
 8007ff8:	a201      	add	r2, pc, #4	@ (adr r2, 8008000 <UART_SetConfig+0xf8>)
 8007ffa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007ffe:	bf00      	nop
 8008000:	08008035 	.word	0x08008035
 8008004:	08008055 	.word	0x08008055
 8008008:	08008055 	.word	0x08008055
 800800c:	08008055 	.word	0x08008055
 8008010:	08008045 	.word	0x08008045
 8008014:	08008055 	.word	0x08008055
 8008018:	08008055 	.word	0x08008055
 800801c:	08008055 	.word	0x08008055
 8008020:	0800803d 	.word	0x0800803d
 8008024:	08008055 	.word	0x08008055
 8008028:	08008055 	.word	0x08008055
 800802c:	08008055 	.word	0x08008055
 8008030:	0800804d 	.word	0x0800804d
 8008034:	2300      	movs	r3, #0
 8008036:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800803a:	e06d      	b.n	8008118 <UART_SetConfig+0x210>
 800803c:	2302      	movs	r3, #2
 800803e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008042:	e069      	b.n	8008118 <UART_SetConfig+0x210>
 8008044:	2304      	movs	r3, #4
 8008046:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800804a:	e065      	b.n	8008118 <UART_SetConfig+0x210>
 800804c:	2308      	movs	r3, #8
 800804e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008052:	e061      	b.n	8008118 <UART_SetConfig+0x210>
 8008054:	2310      	movs	r3, #16
 8008056:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800805a:	e05d      	b.n	8008118 <UART_SetConfig+0x210>
 800805c:	68fb      	ldr	r3, [r7, #12]
 800805e:	681b      	ldr	r3, [r3, #0]
 8008060:	4a58      	ldr	r2, [pc, #352]	@ (80081c4 <UART_SetConfig+0x2bc>)
 8008062:	4293      	cmp	r3, r2
 8008064:	d125      	bne.n	80080b2 <UART_SetConfig+0x1aa>
 8008066:	4b55      	ldr	r3, [pc, #340]	@ (80081bc <UART_SetConfig+0x2b4>)
 8008068:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800806c:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8008070:	2b30      	cmp	r3, #48	@ 0x30
 8008072:	d016      	beq.n	80080a2 <UART_SetConfig+0x19a>
 8008074:	2b30      	cmp	r3, #48	@ 0x30
 8008076:	d818      	bhi.n	80080aa <UART_SetConfig+0x1a2>
 8008078:	2b20      	cmp	r3, #32
 800807a:	d00a      	beq.n	8008092 <UART_SetConfig+0x18a>
 800807c:	2b20      	cmp	r3, #32
 800807e:	d814      	bhi.n	80080aa <UART_SetConfig+0x1a2>
 8008080:	2b00      	cmp	r3, #0
 8008082:	d002      	beq.n	800808a <UART_SetConfig+0x182>
 8008084:	2b10      	cmp	r3, #16
 8008086:	d008      	beq.n	800809a <UART_SetConfig+0x192>
 8008088:	e00f      	b.n	80080aa <UART_SetConfig+0x1a2>
 800808a:	2300      	movs	r3, #0
 800808c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008090:	e042      	b.n	8008118 <UART_SetConfig+0x210>
 8008092:	2302      	movs	r3, #2
 8008094:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008098:	e03e      	b.n	8008118 <UART_SetConfig+0x210>
 800809a:	2304      	movs	r3, #4
 800809c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80080a0:	e03a      	b.n	8008118 <UART_SetConfig+0x210>
 80080a2:	2308      	movs	r3, #8
 80080a4:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80080a8:	e036      	b.n	8008118 <UART_SetConfig+0x210>
 80080aa:	2310      	movs	r3, #16
 80080ac:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80080b0:	e032      	b.n	8008118 <UART_SetConfig+0x210>
 80080b2:	68fb      	ldr	r3, [r7, #12]
 80080b4:	681b      	ldr	r3, [r3, #0]
 80080b6:	4a3f      	ldr	r2, [pc, #252]	@ (80081b4 <UART_SetConfig+0x2ac>)
 80080b8:	4293      	cmp	r3, r2
 80080ba:	d12a      	bne.n	8008112 <UART_SetConfig+0x20a>
 80080bc:	4b3f      	ldr	r3, [pc, #252]	@ (80081bc <UART_SetConfig+0x2b4>)
 80080be:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80080c2:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80080c6:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80080ca:	d01a      	beq.n	8008102 <UART_SetConfig+0x1fa>
 80080cc:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80080d0:	d81b      	bhi.n	800810a <UART_SetConfig+0x202>
 80080d2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80080d6:	d00c      	beq.n	80080f2 <UART_SetConfig+0x1ea>
 80080d8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80080dc:	d815      	bhi.n	800810a <UART_SetConfig+0x202>
 80080de:	2b00      	cmp	r3, #0
 80080e0:	d003      	beq.n	80080ea <UART_SetConfig+0x1e2>
 80080e2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80080e6:	d008      	beq.n	80080fa <UART_SetConfig+0x1f2>
 80080e8:	e00f      	b.n	800810a <UART_SetConfig+0x202>
 80080ea:	2300      	movs	r3, #0
 80080ec:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80080f0:	e012      	b.n	8008118 <UART_SetConfig+0x210>
 80080f2:	2302      	movs	r3, #2
 80080f4:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80080f8:	e00e      	b.n	8008118 <UART_SetConfig+0x210>
 80080fa:	2304      	movs	r3, #4
 80080fc:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008100:	e00a      	b.n	8008118 <UART_SetConfig+0x210>
 8008102:	2308      	movs	r3, #8
 8008104:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008108:	e006      	b.n	8008118 <UART_SetConfig+0x210>
 800810a:	2310      	movs	r3, #16
 800810c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008110:	e002      	b.n	8008118 <UART_SetConfig+0x210>
 8008112:	2310      	movs	r3, #16
 8008114:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008118:	68fb      	ldr	r3, [r7, #12]
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	4a25      	ldr	r2, [pc, #148]	@ (80081b4 <UART_SetConfig+0x2ac>)
 800811e:	4293      	cmp	r3, r2
 8008120:	f040 808a 	bne.w	8008238 <UART_SetConfig+0x330>
 8008124:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8008128:	2b08      	cmp	r3, #8
 800812a:	d824      	bhi.n	8008176 <UART_SetConfig+0x26e>
 800812c:	a201      	add	r2, pc, #4	@ (adr r2, 8008134 <UART_SetConfig+0x22c>)
 800812e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008132:	bf00      	nop
 8008134:	08008159 	.word	0x08008159
 8008138:	08008177 	.word	0x08008177
 800813c:	08008161 	.word	0x08008161
 8008140:	08008177 	.word	0x08008177
 8008144:	08008167 	.word	0x08008167
 8008148:	08008177 	.word	0x08008177
 800814c:	08008177 	.word	0x08008177
 8008150:	08008177 	.word	0x08008177
 8008154:	0800816f 	.word	0x0800816f
 8008158:	f7fe fd4c 	bl	8006bf4 <HAL_RCC_GetPCLK1Freq>
 800815c:	61f8      	str	r0, [r7, #28]
 800815e:	e010      	b.n	8008182 <UART_SetConfig+0x27a>
 8008160:	4b19      	ldr	r3, [pc, #100]	@ (80081c8 <UART_SetConfig+0x2c0>)
 8008162:	61fb      	str	r3, [r7, #28]
 8008164:	e00d      	b.n	8008182 <UART_SetConfig+0x27a>
 8008166:	f7fe fcad 	bl	8006ac4 <HAL_RCC_GetSysClockFreq>
 800816a:	61f8      	str	r0, [r7, #28]
 800816c:	e009      	b.n	8008182 <UART_SetConfig+0x27a>
 800816e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008172:	61fb      	str	r3, [r7, #28]
 8008174:	e005      	b.n	8008182 <UART_SetConfig+0x27a>
 8008176:	2300      	movs	r3, #0
 8008178:	61fb      	str	r3, [r7, #28]
 800817a:	2301      	movs	r3, #1
 800817c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8008180:	bf00      	nop
 8008182:	69fb      	ldr	r3, [r7, #28]
 8008184:	2b00      	cmp	r3, #0
 8008186:	f000 8109 	beq.w	800839c <UART_SetConfig+0x494>
 800818a:	68fb      	ldr	r3, [r7, #12]
 800818c:	685a      	ldr	r2, [r3, #4]
 800818e:	4613      	mov	r3, r2
 8008190:	005b      	lsls	r3, r3, #1
 8008192:	4413      	add	r3, r2
 8008194:	69fa      	ldr	r2, [r7, #28]
 8008196:	429a      	cmp	r2, r3
 8008198:	d305      	bcc.n	80081a6 <UART_SetConfig+0x29e>
 800819a:	68fb      	ldr	r3, [r7, #12]
 800819c:	685b      	ldr	r3, [r3, #4]
 800819e:	031b      	lsls	r3, r3, #12
 80081a0:	69fa      	ldr	r2, [r7, #28]
 80081a2:	429a      	cmp	r2, r3
 80081a4:	d912      	bls.n	80081cc <UART_SetConfig+0x2c4>
 80081a6:	2301      	movs	r3, #1
 80081a8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80081ac:	e0f6      	b.n	800839c <UART_SetConfig+0x494>
 80081ae:	bf00      	nop
 80081b0:	efff69f3 	.word	0xefff69f3
 80081b4:	40008000 	.word	0x40008000
 80081b8:	40013800 	.word	0x40013800
 80081bc:	40021000 	.word	0x40021000
 80081c0:	40004400 	.word	0x40004400
 80081c4:	40004800 	.word	0x40004800
 80081c8:	00f42400 	.word	0x00f42400
 80081cc:	69fb      	ldr	r3, [r7, #28]
 80081ce:	2200      	movs	r2, #0
 80081d0:	461c      	mov	r4, r3
 80081d2:	4615      	mov	r5, r2
 80081d4:	f04f 0200 	mov.w	r2, #0
 80081d8:	f04f 0300 	mov.w	r3, #0
 80081dc:	022b      	lsls	r3, r5, #8
 80081de:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 80081e2:	0222      	lsls	r2, r4, #8
 80081e4:	68f9      	ldr	r1, [r7, #12]
 80081e6:	6849      	ldr	r1, [r1, #4]
 80081e8:	0849      	lsrs	r1, r1, #1
 80081ea:	2000      	movs	r0, #0
 80081ec:	4688      	mov	r8, r1
 80081ee:	4681      	mov	r9, r0
 80081f0:	eb12 0a08 	adds.w	sl, r2, r8
 80081f4:	eb43 0b09 	adc.w	fp, r3, r9
 80081f8:	68fb      	ldr	r3, [r7, #12]
 80081fa:	685b      	ldr	r3, [r3, #4]
 80081fc:	2200      	movs	r2, #0
 80081fe:	603b      	str	r3, [r7, #0]
 8008200:	607a      	str	r2, [r7, #4]
 8008202:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008206:	4650      	mov	r0, sl
 8008208:	4659      	mov	r1, fp
 800820a:	f7f8 fd3d 	bl	8000c88 <__aeabi_uldivmod>
 800820e:	4602      	mov	r2, r0
 8008210:	460b      	mov	r3, r1
 8008212:	4613      	mov	r3, r2
 8008214:	61bb      	str	r3, [r7, #24]
 8008216:	69bb      	ldr	r3, [r7, #24]
 8008218:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800821c:	d308      	bcc.n	8008230 <UART_SetConfig+0x328>
 800821e:	69bb      	ldr	r3, [r7, #24]
 8008220:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008224:	d204      	bcs.n	8008230 <UART_SetConfig+0x328>
 8008226:	68fb      	ldr	r3, [r7, #12]
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	69ba      	ldr	r2, [r7, #24]
 800822c:	60da      	str	r2, [r3, #12]
 800822e:	e0b5      	b.n	800839c <UART_SetConfig+0x494>
 8008230:	2301      	movs	r3, #1
 8008232:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8008236:	e0b1      	b.n	800839c <UART_SetConfig+0x494>
 8008238:	68fb      	ldr	r3, [r7, #12]
 800823a:	69db      	ldr	r3, [r3, #28]
 800823c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008240:	d15d      	bne.n	80082fe <UART_SetConfig+0x3f6>
 8008242:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8008246:	2b08      	cmp	r3, #8
 8008248:	d827      	bhi.n	800829a <UART_SetConfig+0x392>
 800824a:	a201      	add	r2, pc, #4	@ (adr r2, 8008250 <UART_SetConfig+0x348>)
 800824c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008250:	08008275 	.word	0x08008275
 8008254:	0800827d 	.word	0x0800827d
 8008258:	08008285 	.word	0x08008285
 800825c:	0800829b 	.word	0x0800829b
 8008260:	0800828b 	.word	0x0800828b
 8008264:	0800829b 	.word	0x0800829b
 8008268:	0800829b 	.word	0x0800829b
 800826c:	0800829b 	.word	0x0800829b
 8008270:	08008293 	.word	0x08008293
 8008274:	f7fe fcbe 	bl	8006bf4 <HAL_RCC_GetPCLK1Freq>
 8008278:	61f8      	str	r0, [r7, #28]
 800827a:	e014      	b.n	80082a6 <UART_SetConfig+0x39e>
 800827c:	f7fe fcd0 	bl	8006c20 <HAL_RCC_GetPCLK2Freq>
 8008280:	61f8      	str	r0, [r7, #28]
 8008282:	e010      	b.n	80082a6 <UART_SetConfig+0x39e>
 8008284:	4b4c      	ldr	r3, [pc, #304]	@ (80083b8 <UART_SetConfig+0x4b0>)
 8008286:	61fb      	str	r3, [r7, #28]
 8008288:	e00d      	b.n	80082a6 <UART_SetConfig+0x39e>
 800828a:	f7fe fc1b 	bl	8006ac4 <HAL_RCC_GetSysClockFreq>
 800828e:	61f8      	str	r0, [r7, #28]
 8008290:	e009      	b.n	80082a6 <UART_SetConfig+0x39e>
 8008292:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008296:	61fb      	str	r3, [r7, #28]
 8008298:	e005      	b.n	80082a6 <UART_SetConfig+0x39e>
 800829a:	2300      	movs	r3, #0
 800829c:	61fb      	str	r3, [r7, #28]
 800829e:	2301      	movs	r3, #1
 80082a0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80082a4:	bf00      	nop
 80082a6:	69fb      	ldr	r3, [r7, #28]
 80082a8:	2b00      	cmp	r3, #0
 80082aa:	d077      	beq.n	800839c <UART_SetConfig+0x494>
 80082ac:	69fb      	ldr	r3, [r7, #28]
 80082ae:	005a      	lsls	r2, r3, #1
 80082b0:	68fb      	ldr	r3, [r7, #12]
 80082b2:	685b      	ldr	r3, [r3, #4]
 80082b4:	085b      	lsrs	r3, r3, #1
 80082b6:	441a      	add	r2, r3
 80082b8:	68fb      	ldr	r3, [r7, #12]
 80082ba:	685b      	ldr	r3, [r3, #4]
 80082bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80082c0:	61bb      	str	r3, [r7, #24]
 80082c2:	69bb      	ldr	r3, [r7, #24]
 80082c4:	2b0f      	cmp	r3, #15
 80082c6:	d916      	bls.n	80082f6 <UART_SetConfig+0x3ee>
 80082c8:	69bb      	ldr	r3, [r7, #24]
 80082ca:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80082ce:	d212      	bcs.n	80082f6 <UART_SetConfig+0x3ee>
 80082d0:	69bb      	ldr	r3, [r7, #24]
 80082d2:	b29b      	uxth	r3, r3
 80082d4:	f023 030f 	bic.w	r3, r3, #15
 80082d8:	82fb      	strh	r3, [r7, #22]
 80082da:	69bb      	ldr	r3, [r7, #24]
 80082dc:	085b      	lsrs	r3, r3, #1
 80082de:	b29b      	uxth	r3, r3
 80082e0:	f003 0307 	and.w	r3, r3, #7
 80082e4:	b29a      	uxth	r2, r3
 80082e6:	8afb      	ldrh	r3, [r7, #22]
 80082e8:	4313      	orrs	r3, r2
 80082ea:	82fb      	strh	r3, [r7, #22]
 80082ec:	68fb      	ldr	r3, [r7, #12]
 80082ee:	681b      	ldr	r3, [r3, #0]
 80082f0:	8afa      	ldrh	r2, [r7, #22]
 80082f2:	60da      	str	r2, [r3, #12]
 80082f4:	e052      	b.n	800839c <UART_SetConfig+0x494>
 80082f6:	2301      	movs	r3, #1
 80082f8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80082fc:	e04e      	b.n	800839c <UART_SetConfig+0x494>
 80082fe:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8008302:	2b08      	cmp	r3, #8
 8008304:	d827      	bhi.n	8008356 <UART_SetConfig+0x44e>
 8008306:	a201      	add	r2, pc, #4	@ (adr r2, 800830c <UART_SetConfig+0x404>)
 8008308:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800830c:	08008331 	.word	0x08008331
 8008310:	08008339 	.word	0x08008339
 8008314:	08008341 	.word	0x08008341
 8008318:	08008357 	.word	0x08008357
 800831c:	08008347 	.word	0x08008347
 8008320:	08008357 	.word	0x08008357
 8008324:	08008357 	.word	0x08008357
 8008328:	08008357 	.word	0x08008357
 800832c:	0800834f 	.word	0x0800834f
 8008330:	f7fe fc60 	bl	8006bf4 <HAL_RCC_GetPCLK1Freq>
 8008334:	61f8      	str	r0, [r7, #28]
 8008336:	e014      	b.n	8008362 <UART_SetConfig+0x45a>
 8008338:	f7fe fc72 	bl	8006c20 <HAL_RCC_GetPCLK2Freq>
 800833c:	61f8      	str	r0, [r7, #28]
 800833e:	e010      	b.n	8008362 <UART_SetConfig+0x45a>
 8008340:	4b1d      	ldr	r3, [pc, #116]	@ (80083b8 <UART_SetConfig+0x4b0>)
 8008342:	61fb      	str	r3, [r7, #28]
 8008344:	e00d      	b.n	8008362 <UART_SetConfig+0x45a>
 8008346:	f7fe fbbd 	bl	8006ac4 <HAL_RCC_GetSysClockFreq>
 800834a:	61f8      	str	r0, [r7, #28]
 800834c:	e009      	b.n	8008362 <UART_SetConfig+0x45a>
 800834e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8008352:	61fb      	str	r3, [r7, #28]
 8008354:	e005      	b.n	8008362 <UART_SetConfig+0x45a>
 8008356:	2300      	movs	r3, #0
 8008358:	61fb      	str	r3, [r7, #28]
 800835a:	2301      	movs	r3, #1
 800835c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8008360:	bf00      	nop
 8008362:	69fb      	ldr	r3, [r7, #28]
 8008364:	2b00      	cmp	r3, #0
 8008366:	d019      	beq.n	800839c <UART_SetConfig+0x494>
 8008368:	68fb      	ldr	r3, [r7, #12]
 800836a:	685b      	ldr	r3, [r3, #4]
 800836c:	085a      	lsrs	r2, r3, #1
 800836e:	69fb      	ldr	r3, [r7, #28]
 8008370:	441a      	add	r2, r3
 8008372:	68fb      	ldr	r3, [r7, #12]
 8008374:	685b      	ldr	r3, [r3, #4]
 8008376:	fbb2 f3f3 	udiv	r3, r2, r3
 800837a:	61bb      	str	r3, [r7, #24]
 800837c:	69bb      	ldr	r3, [r7, #24]
 800837e:	2b0f      	cmp	r3, #15
 8008380:	d909      	bls.n	8008396 <UART_SetConfig+0x48e>
 8008382:	69bb      	ldr	r3, [r7, #24]
 8008384:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008388:	d205      	bcs.n	8008396 <UART_SetConfig+0x48e>
 800838a:	69bb      	ldr	r3, [r7, #24]
 800838c:	b29a      	uxth	r2, r3
 800838e:	68fb      	ldr	r3, [r7, #12]
 8008390:	681b      	ldr	r3, [r3, #0]
 8008392:	60da      	str	r2, [r3, #12]
 8008394:	e002      	b.n	800839c <UART_SetConfig+0x494>
 8008396:	2301      	movs	r3, #1
 8008398:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800839c:	68fb      	ldr	r3, [r7, #12]
 800839e:	2200      	movs	r2, #0
 80083a0:	669a      	str	r2, [r3, #104]	@ 0x68
 80083a2:	68fb      	ldr	r3, [r7, #12]
 80083a4:	2200      	movs	r2, #0
 80083a6:	66da      	str	r2, [r3, #108]	@ 0x6c
 80083a8:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 80083ac:	4618      	mov	r0, r3
 80083ae:	3728      	adds	r7, #40	@ 0x28
 80083b0:	46bd      	mov	sp, r7
 80083b2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80083b6:	bf00      	nop
 80083b8:	00f42400 	.word	0x00f42400

080083bc <UART_AdvFeatureConfig>:
 80083bc:	b480      	push	{r7}
 80083be:	b083      	sub	sp, #12
 80083c0:	af00      	add	r7, sp, #0
 80083c2:	6078      	str	r0, [r7, #4]
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80083c8:	f003 0308 	and.w	r3, r3, #8
 80083cc:	2b00      	cmp	r3, #0
 80083ce:	d00a      	beq.n	80083e6 <UART_AdvFeatureConfig+0x2a>
 80083d0:	687b      	ldr	r3, [r7, #4]
 80083d2:	681b      	ldr	r3, [r3, #0]
 80083d4:	685b      	ldr	r3, [r3, #4]
 80083d6:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	681b      	ldr	r3, [r3, #0]
 80083e2:	430a      	orrs	r2, r1
 80083e4:	605a      	str	r2, [r3, #4]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80083ea:	f003 0301 	and.w	r3, r3, #1
 80083ee:	2b00      	cmp	r3, #0
 80083f0:	d00a      	beq.n	8008408 <UART_AdvFeatureConfig+0x4c>
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	685b      	ldr	r3, [r3, #4]
 80083f8:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80083fc:	687b      	ldr	r3, [r7, #4]
 80083fe:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	430a      	orrs	r2, r1
 8008406:	605a      	str	r2, [r3, #4]
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800840c:	f003 0302 	and.w	r3, r3, #2
 8008410:	2b00      	cmp	r3, #0
 8008412:	d00a      	beq.n	800842a <UART_AdvFeatureConfig+0x6e>
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	681b      	ldr	r3, [r3, #0]
 8008418:	685b      	ldr	r3, [r3, #4]
 800841a:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	681b      	ldr	r3, [r3, #0]
 8008426:	430a      	orrs	r2, r1
 8008428:	605a      	str	r2, [r3, #4]
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800842e:	f003 0304 	and.w	r3, r3, #4
 8008432:	2b00      	cmp	r3, #0
 8008434:	d00a      	beq.n	800844c <UART_AdvFeatureConfig+0x90>
 8008436:	687b      	ldr	r3, [r7, #4]
 8008438:	681b      	ldr	r3, [r3, #0]
 800843a:	685b      	ldr	r3, [r3, #4]
 800843c:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8008440:	687b      	ldr	r3, [r7, #4]
 8008442:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	430a      	orrs	r2, r1
 800844a:	605a      	str	r2, [r3, #4]
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008450:	f003 0310 	and.w	r3, r3, #16
 8008454:	2b00      	cmp	r3, #0
 8008456:	d00a      	beq.n	800846e <UART_AdvFeatureConfig+0xb2>
 8008458:	687b      	ldr	r3, [r7, #4]
 800845a:	681b      	ldr	r3, [r3, #0]
 800845c:	689b      	ldr	r3, [r3, #8]
 800845e:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	681b      	ldr	r3, [r3, #0]
 800846a:	430a      	orrs	r2, r1
 800846c:	609a      	str	r2, [r3, #8]
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008472:	f003 0320 	and.w	r3, r3, #32
 8008476:	2b00      	cmp	r3, #0
 8008478:	d00a      	beq.n	8008490 <UART_AdvFeatureConfig+0xd4>
 800847a:	687b      	ldr	r3, [r7, #4]
 800847c:	681b      	ldr	r3, [r3, #0]
 800847e:	689b      	ldr	r3, [r3, #8]
 8008480:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8008484:	687b      	ldr	r3, [r7, #4]
 8008486:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	681b      	ldr	r3, [r3, #0]
 800848c:	430a      	orrs	r2, r1
 800848e:	609a      	str	r2, [r3, #8]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008494:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008498:	2b00      	cmp	r3, #0
 800849a:	d01a      	beq.n	80084d2 <UART_AdvFeatureConfig+0x116>
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	685b      	ldr	r3, [r3, #4]
 80084a2:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 80084a6:	687b      	ldr	r3, [r7, #4]
 80084a8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	430a      	orrs	r2, r1
 80084b0:	605a      	str	r2, [r3, #4]
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80084b6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80084ba:	d10a      	bne.n	80084d2 <UART_AdvFeatureConfig+0x116>
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	681b      	ldr	r3, [r3, #0]
 80084c0:	685b      	ldr	r3, [r3, #4]
 80084c2:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	681b      	ldr	r3, [r3, #0]
 80084ce:	430a      	orrs	r2, r1
 80084d0:	605a      	str	r2, [r3, #4]
 80084d2:	687b      	ldr	r3, [r7, #4]
 80084d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80084d6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d00a      	beq.n	80084f4 <UART_AdvFeatureConfig+0x138>
 80084de:	687b      	ldr	r3, [r7, #4]
 80084e0:	681b      	ldr	r3, [r3, #0]
 80084e2:	685b      	ldr	r3, [r3, #4]
 80084e4:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 80084e8:	687b      	ldr	r3, [r7, #4]
 80084ea:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	681b      	ldr	r3, [r3, #0]
 80084f0:	430a      	orrs	r2, r1
 80084f2:	605a      	str	r2, [r3, #4]
 80084f4:	bf00      	nop
 80084f6:	370c      	adds	r7, #12
 80084f8:	46bd      	mov	sp, r7
 80084fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084fe:	4770      	bx	lr

08008500 <UART_CheckIdleState>:
 8008500:	b580      	push	{r7, lr}
 8008502:	b098      	sub	sp, #96	@ 0x60
 8008504:	af02      	add	r7, sp, #8
 8008506:	6078      	str	r0, [r7, #4]
 8008508:	687b      	ldr	r3, [r7, #4]
 800850a:	2200      	movs	r2, #0
 800850c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008510:	f7fb fdac 	bl	800406c <HAL_GetTick>
 8008514:	6578      	str	r0, [r7, #84]	@ 0x54
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	681b      	ldr	r3, [r3, #0]
 800851a:	681b      	ldr	r3, [r3, #0]
 800851c:	f003 0308 	and.w	r3, r3, #8
 8008520:	2b08      	cmp	r3, #8
 8008522:	d12e      	bne.n	8008582 <UART_CheckIdleState+0x82>
 8008524:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008528:	9300      	str	r3, [sp, #0]
 800852a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800852c:	2200      	movs	r2, #0
 800852e:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8008532:	6878      	ldr	r0, [r7, #4]
 8008534:	f000 f88c 	bl	8008650 <UART_WaitOnFlagUntilTimeout>
 8008538:	4603      	mov	r3, r0
 800853a:	2b00      	cmp	r3, #0
 800853c:	d021      	beq.n	8008582 <UART_CheckIdleState+0x82>
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	681b      	ldr	r3, [r3, #0]
 8008542:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008544:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008546:	e853 3f00 	ldrex	r3, [r3]
 800854a:	637b      	str	r3, [r7, #52]	@ 0x34
 800854c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800854e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008552:	653b      	str	r3, [r7, #80]	@ 0x50
 8008554:	687b      	ldr	r3, [r7, #4]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	461a      	mov	r2, r3
 800855a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800855c:	647b      	str	r3, [r7, #68]	@ 0x44
 800855e:	643a      	str	r2, [r7, #64]	@ 0x40
 8008560:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8008562:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008564:	e841 2300 	strex	r3, r2, [r1]
 8008568:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800856a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800856c:	2b00      	cmp	r3, #0
 800856e:	d1e6      	bne.n	800853e <UART_CheckIdleState+0x3e>
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	2220      	movs	r2, #32
 8008574:	67da      	str	r2, [r3, #124]	@ 0x7c
 8008576:	687b      	ldr	r3, [r7, #4]
 8008578:	2200      	movs	r2, #0
 800857a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800857e:	2303      	movs	r3, #3
 8008580:	e062      	b.n	8008648 <UART_CheckIdleState+0x148>
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	681b      	ldr	r3, [r3, #0]
 8008586:	681b      	ldr	r3, [r3, #0]
 8008588:	f003 0304 	and.w	r3, r3, #4
 800858c:	2b04      	cmp	r3, #4
 800858e:	d149      	bne.n	8008624 <UART_CheckIdleState+0x124>
 8008590:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8008594:	9300      	str	r3, [sp, #0]
 8008596:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8008598:	2200      	movs	r2, #0
 800859a:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800859e:	6878      	ldr	r0, [r7, #4]
 80085a0:	f000 f856 	bl	8008650 <UART_WaitOnFlagUntilTimeout>
 80085a4:	4603      	mov	r3, r0
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	d03c      	beq.n	8008624 <UART_CheckIdleState+0x124>
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	627b      	str	r3, [r7, #36]	@ 0x24
 80085b0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80085b2:	e853 3f00 	ldrex	r3, [r3]
 80085b6:	623b      	str	r3, [r7, #32]
 80085b8:	6a3b      	ldr	r3, [r7, #32]
 80085ba:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80085be:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	681b      	ldr	r3, [r3, #0]
 80085c4:	461a      	mov	r2, r3
 80085c6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80085c8:	633b      	str	r3, [r7, #48]	@ 0x30
 80085ca:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80085cc:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80085ce:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80085d0:	e841 2300 	strex	r3, r2, [r1]
 80085d4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80085d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80085d8:	2b00      	cmp	r3, #0
 80085da:	d1e6      	bne.n	80085aa <UART_CheckIdleState+0xaa>
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	681b      	ldr	r3, [r3, #0]
 80085e0:	3308      	adds	r3, #8
 80085e2:	613b      	str	r3, [r7, #16]
 80085e4:	693b      	ldr	r3, [r7, #16]
 80085e6:	e853 3f00 	ldrex	r3, [r3]
 80085ea:	60fb      	str	r3, [r7, #12]
 80085ec:	68fb      	ldr	r3, [r7, #12]
 80085ee:	f023 0301 	bic.w	r3, r3, #1
 80085f2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80085f4:	687b      	ldr	r3, [r7, #4]
 80085f6:	681b      	ldr	r3, [r3, #0]
 80085f8:	3308      	adds	r3, #8
 80085fa:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80085fc:	61fa      	str	r2, [r7, #28]
 80085fe:	61bb      	str	r3, [r7, #24]
 8008600:	69b9      	ldr	r1, [r7, #24]
 8008602:	69fa      	ldr	r2, [r7, #28]
 8008604:	e841 2300 	strex	r3, r2, [r1]
 8008608:	617b      	str	r3, [r7, #20]
 800860a:	697b      	ldr	r3, [r7, #20]
 800860c:	2b00      	cmp	r3, #0
 800860e:	d1e5      	bne.n	80085dc <UART_CheckIdleState+0xdc>
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	2220      	movs	r2, #32
 8008614:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8008618:	687b      	ldr	r3, [r7, #4]
 800861a:	2200      	movs	r2, #0
 800861c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8008620:	2303      	movs	r3, #3
 8008622:	e011      	b.n	8008648 <UART_CheckIdleState+0x148>
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	2220      	movs	r2, #32
 8008628:	67da      	str	r2, [r3, #124]	@ 0x7c
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	2220      	movs	r2, #32
 800862e:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8008632:	687b      	ldr	r3, [r7, #4]
 8008634:	2200      	movs	r2, #0
 8008636:	661a      	str	r2, [r3, #96]	@ 0x60
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	2200      	movs	r2, #0
 800863c:	665a      	str	r2, [r3, #100]	@ 0x64
 800863e:	687b      	ldr	r3, [r7, #4]
 8008640:	2200      	movs	r2, #0
 8008642:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8008646:	2300      	movs	r3, #0
 8008648:	4618      	mov	r0, r3
 800864a:	3758      	adds	r7, #88	@ 0x58
 800864c:	46bd      	mov	sp, r7
 800864e:	bd80      	pop	{r7, pc}

08008650 <UART_WaitOnFlagUntilTimeout>:
 8008650:	b580      	push	{r7, lr}
 8008652:	b084      	sub	sp, #16
 8008654:	af00      	add	r7, sp, #0
 8008656:	60f8      	str	r0, [r7, #12]
 8008658:	60b9      	str	r1, [r7, #8]
 800865a:	603b      	str	r3, [r7, #0]
 800865c:	4613      	mov	r3, r2
 800865e:	71fb      	strb	r3, [r7, #7]
 8008660:	e04f      	b.n	8008702 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008662:	69bb      	ldr	r3, [r7, #24]
 8008664:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008668:	d04b      	beq.n	8008702 <UART_WaitOnFlagUntilTimeout+0xb2>
 800866a:	f7fb fcff 	bl	800406c <HAL_GetTick>
 800866e:	4602      	mov	r2, r0
 8008670:	683b      	ldr	r3, [r7, #0]
 8008672:	1ad3      	subs	r3, r2, r3
 8008674:	69ba      	ldr	r2, [r7, #24]
 8008676:	429a      	cmp	r2, r3
 8008678:	d302      	bcc.n	8008680 <UART_WaitOnFlagUntilTimeout+0x30>
 800867a:	69bb      	ldr	r3, [r7, #24]
 800867c:	2b00      	cmp	r3, #0
 800867e:	d101      	bne.n	8008684 <UART_WaitOnFlagUntilTimeout+0x34>
 8008680:	2303      	movs	r3, #3
 8008682:	e04e      	b.n	8008722 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	681b      	ldr	r3, [r3, #0]
 8008688:	681b      	ldr	r3, [r3, #0]
 800868a:	f003 0304 	and.w	r3, r3, #4
 800868e:	2b00      	cmp	r3, #0
 8008690:	d037      	beq.n	8008702 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008692:	68bb      	ldr	r3, [r7, #8]
 8008694:	2b80      	cmp	r3, #128	@ 0x80
 8008696:	d034      	beq.n	8008702 <UART_WaitOnFlagUntilTimeout+0xb2>
 8008698:	68bb      	ldr	r3, [r7, #8]
 800869a:	2b40      	cmp	r3, #64	@ 0x40
 800869c:	d031      	beq.n	8008702 <UART_WaitOnFlagUntilTimeout+0xb2>
 800869e:	68fb      	ldr	r3, [r7, #12]
 80086a0:	681b      	ldr	r3, [r3, #0]
 80086a2:	69db      	ldr	r3, [r3, #28]
 80086a4:	f003 0308 	and.w	r3, r3, #8
 80086a8:	2b08      	cmp	r3, #8
 80086aa:	d110      	bne.n	80086ce <UART_WaitOnFlagUntilTimeout+0x7e>
 80086ac:	68fb      	ldr	r3, [r7, #12]
 80086ae:	681b      	ldr	r3, [r3, #0]
 80086b0:	2208      	movs	r2, #8
 80086b2:	621a      	str	r2, [r3, #32]
 80086b4:	68f8      	ldr	r0, [r7, #12]
 80086b6:	f000 f8ff 	bl	80088b8 <UART_EndRxTransfer>
 80086ba:	68fb      	ldr	r3, [r7, #12]
 80086bc:	2208      	movs	r2, #8
 80086be:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80086c2:	68fb      	ldr	r3, [r7, #12]
 80086c4:	2200      	movs	r2, #0
 80086c6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80086ca:	2301      	movs	r3, #1
 80086cc:	e029      	b.n	8008722 <UART_WaitOnFlagUntilTimeout+0xd2>
 80086ce:	68fb      	ldr	r3, [r7, #12]
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	69db      	ldr	r3, [r3, #28]
 80086d4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80086d8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80086dc:	d111      	bne.n	8008702 <UART_WaitOnFlagUntilTimeout+0xb2>
 80086de:	68fb      	ldr	r3, [r7, #12]
 80086e0:	681b      	ldr	r3, [r3, #0]
 80086e2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80086e6:	621a      	str	r2, [r3, #32]
 80086e8:	68f8      	ldr	r0, [r7, #12]
 80086ea:	f000 f8e5 	bl	80088b8 <UART_EndRxTransfer>
 80086ee:	68fb      	ldr	r3, [r7, #12]
 80086f0:	2220      	movs	r2, #32
 80086f2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80086f6:	68fb      	ldr	r3, [r7, #12]
 80086f8:	2200      	movs	r2, #0
 80086fa:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 80086fe:	2303      	movs	r3, #3
 8008700:	e00f      	b.n	8008722 <UART_WaitOnFlagUntilTimeout+0xd2>
 8008702:	68fb      	ldr	r3, [r7, #12]
 8008704:	681b      	ldr	r3, [r3, #0]
 8008706:	69da      	ldr	r2, [r3, #28]
 8008708:	68bb      	ldr	r3, [r7, #8]
 800870a:	4013      	ands	r3, r2
 800870c:	68ba      	ldr	r2, [r7, #8]
 800870e:	429a      	cmp	r2, r3
 8008710:	bf0c      	ite	eq
 8008712:	2301      	moveq	r3, #1
 8008714:	2300      	movne	r3, #0
 8008716:	b2db      	uxtb	r3, r3
 8008718:	461a      	mov	r2, r3
 800871a:	79fb      	ldrb	r3, [r7, #7]
 800871c:	429a      	cmp	r2, r3
 800871e:	d0a0      	beq.n	8008662 <UART_WaitOnFlagUntilTimeout+0x12>
 8008720:	2300      	movs	r3, #0
 8008722:	4618      	mov	r0, r3
 8008724:	3710      	adds	r7, #16
 8008726:	46bd      	mov	sp, r7
 8008728:	bd80      	pop	{r7, pc}
	...

0800872c <UART_Start_Receive_DMA>:
 800872c:	b580      	push	{r7, lr}
 800872e:	b096      	sub	sp, #88	@ 0x58
 8008730:	af00      	add	r7, sp, #0
 8008732:	60f8      	str	r0, [r7, #12]
 8008734:	60b9      	str	r1, [r7, #8]
 8008736:	4613      	mov	r3, r2
 8008738:	80fb      	strh	r3, [r7, #6]
 800873a:	68fb      	ldr	r3, [r7, #12]
 800873c:	68ba      	ldr	r2, [r7, #8]
 800873e:	655a      	str	r2, [r3, #84]	@ 0x54
 8008740:	68fb      	ldr	r3, [r7, #12]
 8008742:	88fa      	ldrh	r2, [r7, #6]
 8008744:	f8a3 2058 	strh.w	r2, [r3, #88]	@ 0x58
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	2200      	movs	r2, #0
 800874c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008750:	68fb      	ldr	r3, [r7, #12]
 8008752:	2222      	movs	r2, #34	@ 0x22
 8008754:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8008758:	68fb      	ldr	r3, [r7, #12]
 800875a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800875c:	2b00      	cmp	r3, #0
 800875e:	d028      	beq.n	80087b2 <UART_Start_Receive_DMA+0x86>
 8008760:	68fb      	ldr	r3, [r7, #12]
 8008762:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008764:	4a3e      	ldr	r2, [pc, #248]	@ (8008860 <UART_Start_Receive_DMA+0x134>)
 8008766:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008768:	68fb      	ldr	r3, [r7, #12]
 800876a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800876c:	4a3d      	ldr	r2, [pc, #244]	@ (8008864 <UART_Start_Receive_DMA+0x138>)
 800876e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008770:	68fb      	ldr	r3, [r7, #12]
 8008772:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008774:	4a3c      	ldr	r2, [pc, #240]	@ (8008868 <UART_Start_Receive_DMA+0x13c>)
 8008776:	635a      	str	r2, [r3, #52]	@ 0x34
 8008778:	68fb      	ldr	r3, [r7, #12]
 800877a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800877c:	2200      	movs	r2, #0
 800877e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008780:	68fb      	ldr	r3, [r7, #12]
 8008782:	6f58      	ldr	r0, [r3, #116]	@ 0x74
 8008784:	68fb      	ldr	r3, [r7, #12]
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	3324      	adds	r3, #36	@ 0x24
 800878a:	4619      	mov	r1, r3
 800878c:	68fb      	ldr	r3, [r7, #12]
 800878e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008790:	461a      	mov	r2, r3
 8008792:	88fb      	ldrh	r3, [r7, #6]
 8008794:	f7fd f8fe 	bl	8005994 <HAL_DMA_Start_IT>
 8008798:	4603      	mov	r3, r0
 800879a:	2b00      	cmp	r3, #0
 800879c:	d009      	beq.n	80087b2 <UART_Start_Receive_DMA+0x86>
 800879e:	68fb      	ldr	r3, [r7, #12]
 80087a0:	2210      	movs	r2, #16
 80087a2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80087a6:	68fb      	ldr	r3, [r7, #12]
 80087a8:	2220      	movs	r2, #32
 80087aa:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 80087ae:	2301      	movs	r3, #1
 80087b0:	e051      	b.n	8008856 <UART_Start_Receive_DMA+0x12a>
 80087b2:	68fb      	ldr	r3, [r7, #12]
 80087b4:	691b      	ldr	r3, [r3, #16]
 80087b6:	2b00      	cmp	r3, #0
 80087b8:	d018      	beq.n	80087ec <UART_Start_Receive_DMA+0xc0>
 80087ba:	68fb      	ldr	r3, [r7, #12]
 80087bc:	681b      	ldr	r3, [r3, #0]
 80087be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80087c0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80087c2:	e853 3f00 	ldrex	r3, [r3]
 80087c6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80087c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80087ca:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80087ce:	657b      	str	r3, [r7, #84]	@ 0x54
 80087d0:	68fb      	ldr	r3, [r7, #12]
 80087d2:	681b      	ldr	r3, [r3, #0]
 80087d4:	461a      	mov	r2, r3
 80087d6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80087d8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80087da:	647a      	str	r2, [r7, #68]	@ 0x44
 80087dc:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 80087de:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80087e0:	e841 2300 	strex	r3, r2, [r1]
 80087e4:	643b      	str	r3, [r7, #64]	@ 0x40
 80087e6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80087e8:	2b00      	cmp	r3, #0
 80087ea:	d1e6      	bne.n	80087ba <UART_Start_Receive_DMA+0x8e>
 80087ec:	68fb      	ldr	r3, [r7, #12]
 80087ee:	681b      	ldr	r3, [r3, #0]
 80087f0:	3308      	adds	r3, #8
 80087f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80087f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80087f6:	e853 3f00 	ldrex	r3, [r3]
 80087fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80087fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80087fe:	f043 0301 	orr.w	r3, r3, #1
 8008802:	653b      	str	r3, [r7, #80]	@ 0x50
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	3308      	adds	r3, #8
 800880a:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
 800880c:	637a      	str	r2, [r7, #52]	@ 0x34
 800880e:	633b      	str	r3, [r7, #48]	@ 0x30
 8008810:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008812:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008814:	e841 2300 	strex	r3, r2, [r1]
 8008818:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800881a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800881c:	2b00      	cmp	r3, #0
 800881e:	d1e5      	bne.n	80087ec <UART_Start_Receive_DMA+0xc0>
 8008820:	68fb      	ldr	r3, [r7, #12]
 8008822:	681b      	ldr	r3, [r3, #0]
 8008824:	3308      	adds	r3, #8
 8008826:	617b      	str	r3, [r7, #20]
 8008828:	697b      	ldr	r3, [r7, #20]
 800882a:	e853 3f00 	ldrex	r3, [r3]
 800882e:	613b      	str	r3, [r7, #16]
 8008830:	693b      	ldr	r3, [r7, #16]
 8008832:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008836:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008838:	68fb      	ldr	r3, [r7, #12]
 800883a:	681b      	ldr	r3, [r3, #0]
 800883c:	3308      	adds	r3, #8
 800883e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8008840:	623a      	str	r2, [r7, #32]
 8008842:	61fb      	str	r3, [r7, #28]
 8008844:	69f9      	ldr	r1, [r7, #28]
 8008846:	6a3a      	ldr	r2, [r7, #32]
 8008848:	e841 2300 	strex	r3, r2, [r1]
 800884c:	61bb      	str	r3, [r7, #24]
 800884e:	69bb      	ldr	r3, [r7, #24]
 8008850:	2b00      	cmp	r3, #0
 8008852:	d1e5      	bne.n	8008820 <UART_Start_Receive_DMA+0xf4>
 8008854:	2300      	movs	r3, #0
 8008856:	4618      	mov	r0, r3
 8008858:	3758      	adds	r7, #88	@ 0x58
 800885a:	46bd      	mov	sp, r7
 800885c:	bd80      	pop	{r7, pc}
 800885e:	bf00      	nop
 8008860:	08008981 	.word	0x08008981
 8008864:	08008aad 	.word	0x08008aad
 8008868:	08008aeb 	.word	0x08008aeb

0800886c <UART_EndTxTransfer>:
 800886c:	b480      	push	{r7}
 800886e:	b089      	sub	sp, #36	@ 0x24
 8008870:	af00      	add	r7, sp, #0
 8008872:	6078      	str	r0, [r7, #4]
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	60fb      	str	r3, [r7, #12]
 800887a:	68fb      	ldr	r3, [r7, #12]
 800887c:	e853 3f00 	ldrex	r3, [r3]
 8008880:	60bb      	str	r3, [r7, #8]
 8008882:	68bb      	ldr	r3, [r7, #8]
 8008884:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8008888:	61fb      	str	r3, [r7, #28]
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	461a      	mov	r2, r3
 8008890:	69fb      	ldr	r3, [r7, #28]
 8008892:	61bb      	str	r3, [r7, #24]
 8008894:	617a      	str	r2, [r7, #20]
 8008896:	6979      	ldr	r1, [r7, #20]
 8008898:	69ba      	ldr	r2, [r7, #24]
 800889a:	e841 2300 	strex	r3, r2, [r1]
 800889e:	613b      	str	r3, [r7, #16]
 80088a0:	693b      	ldr	r3, [r7, #16]
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d1e6      	bne.n	8008874 <UART_EndTxTransfer+0x8>
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	2220      	movs	r2, #32
 80088aa:	67da      	str	r2, [r3, #124]	@ 0x7c
 80088ac:	bf00      	nop
 80088ae:	3724      	adds	r7, #36	@ 0x24
 80088b0:	46bd      	mov	sp, r7
 80088b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b6:	4770      	bx	lr

080088b8 <UART_EndRxTransfer>:
 80088b8:	b480      	push	{r7}
 80088ba:	b095      	sub	sp, #84	@ 0x54
 80088bc:	af00      	add	r7, sp, #0
 80088be:	6078      	str	r0, [r7, #4]
 80088c0:	687b      	ldr	r3, [r7, #4]
 80088c2:	681b      	ldr	r3, [r3, #0]
 80088c4:	637b      	str	r3, [r7, #52]	@ 0x34
 80088c6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80088c8:	e853 3f00 	ldrex	r3, [r3]
 80088cc:	633b      	str	r3, [r7, #48]	@ 0x30
 80088ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80088d0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80088d4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	681b      	ldr	r3, [r3, #0]
 80088da:	461a      	mov	r2, r3
 80088dc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80088de:	643b      	str	r3, [r7, #64]	@ 0x40
 80088e0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80088e2:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80088e4:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80088e6:	e841 2300 	strex	r3, r2, [r1]
 80088ea:	63bb      	str	r3, [r7, #56]	@ 0x38
 80088ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80088ee:	2b00      	cmp	r3, #0
 80088f0:	d1e6      	bne.n	80088c0 <UART_EndRxTransfer+0x8>
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	681b      	ldr	r3, [r3, #0]
 80088f6:	3308      	adds	r3, #8
 80088f8:	623b      	str	r3, [r7, #32]
 80088fa:	6a3b      	ldr	r3, [r7, #32]
 80088fc:	e853 3f00 	ldrex	r3, [r3]
 8008900:	61fb      	str	r3, [r7, #28]
 8008902:	69fb      	ldr	r3, [r7, #28]
 8008904:	f023 0301 	bic.w	r3, r3, #1
 8008908:	64bb      	str	r3, [r7, #72]	@ 0x48
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	3308      	adds	r3, #8
 8008910:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008912:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8008914:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008916:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8008918:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800891a:	e841 2300 	strex	r3, r2, [r1]
 800891e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008920:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008922:	2b00      	cmp	r3, #0
 8008924:	d1e5      	bne.n	80088f2 <UART_EndRxTransfer+0x3a>
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800892a:	2b01      	cmp	r3, #1
 800892c:	d118      	bne.n	8008960 <UART_EndRxTransfer+0xa8>
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	681b      	ldr	r3, [r3, #0]
 8008932:	60fb      	str	r3, [r7, #12]
 8008934:	68fb      	ldr	r3, [r7, #12]
 8008936:	e853 3f00 	ldrex	r3, [r3]
 800893a:	60bb      	str	r3, [r7, #8]
 800893c:	68bb      	ldr	r3, [r7, #8]
 800893e:	f023 0310 	bic.w	r3, r3, #16
 8008942:	647b      	str	r3, [r7, #68]	@ 0x44
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	681b      	ldr	r3, [r3, #0]
 8008948:	461a      	mov	r2, r3
 800894a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800894c:	61bb      	str	r3, [r7, #24]
 800894e:	617a      	str	r2, [r7, #20]
 8008950:	6979      	ldr	r1, [r7, #20]
 8008952:	69ba      	ldr	r2, [r7, #24]
 8008954:	e841 2300 	strex	r3, r2, [r1]
 8008958:	613b      	str	r3, [r7, #16]
 800895a:	693b      	ldr	r3, [r7, #16]
 800895c:	2b00      	cmp	r3, #0
 800895e:	d1e6      	bne.n	800892e <UART_EndRxTransfer+0x76>
 8008960:	687b      	ldr	r3, [r7, #4]
 8008962:	2220      	movs	r2, #32
 8008964:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	2200      	movs	r2, #0
 800896c:	661a      	str	r2, [r3, #96]	@ 0x60
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	2200      	movs	r2, #0
 8008972:	669a      	str	r2, [r3, #104]	@ 0x68
 8008974:	bf00      	nop
 8008976:	3754      	adds	r7, #84	@ 0x54
 8008978:	46bd      	mov	sp, r7
 800897a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800897e:	4770      	bx	lr

08008980 <UART_DMAReceiveCplt>:
 8008980:	b580      	push	{r7, lr}
 8008982:	b09c      	sub	sp, #112	@ 0x70
 8008984:	af00      	add	r7, sp, #0
 8008986:	6078      	str	r0, [r7, #4]
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800898c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	681b      	ldr	r3, [r3, #0]
 8008992:	681b      	ldr	r3, [r3, #0]
 8008994:	f003 0320 	and.w	r3, r3, #32
 8008998:	2b00      	cmp	r3, #0
 800899a:	d171      	bne.n	8008a80 <UART_DMAReceiveCplt+0x100>
 800899c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800899e:	2200      	movs	r2, #0
 80089a0:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 80089a4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80089a6:	681b      	ldr	r3, [r3, #0]
 80089a8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80089aa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80089ac:	e853 3f00 	ldrex	r3, [r3]
 80089b0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80089b2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80089b4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80089b8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80089ba:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80089bc:	681b      	ldr	r3, [r3, #0]
 80089be:	461a      	mov	r2, r3
 80089c0:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80089c2:	65bb      	str	r3, [r7, #88]	@ 0x58
 80089c4:	657a      	str	r2, [r7, #84]	@ 0x54
 80089c6:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80089c8:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 80089ca:	e841 2300 	strex	r3, r2, [r1]
 80089ce:	653b      	str	r3, [r7, #80]	@ 0x50
 80089d0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80089d2:	2b00      	cmp	r3, #0
 80089d4:	d1e6      	bne.n	80089a4 <UART_DMAReceiveCplt+0x24>
 80089d6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80089d8:	681b      	ldr	r3, [r3, #0]
 80089da:	3308      	adds	r3, #8
 80089dc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80089de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80089e0:	e853 3f00 	ldrex	r3, [r3]
 80089e4:	637b      	str	r3, [r7, #52]	@ 0x34
 80089e6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80089e8:	f023 0301 	bic.w	r3, r3, #1
 80089ec:	667b      	str	r3, [r7, #100]	@ 0x64
 80089ee:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80089f0:	681b      	ldr	r3, [r3, #0]
 80089f2:	3308      	adds	r3, #8
 80089f4:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 80089f6:	647a      	str	r2, [r7, #68]	@ 0x44
 80089f8:	643b      	str	r3, [r7, #64]	@ 0x40
 80089fa:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80089fc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80089fe:	e841 2300 	strex	r3, r2, [r1]
 8008a02:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008a04:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8008a06:	2b00      	cmp	r3, #0
 8008a08:	d1e5      	bne.n	80089d6 <UART_DMAReceiveCplt+0x56>
 8008a0a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a0c:	681b      	ldr	r3, [r3, #0]
 8008a0e:	3308      	adds	r3, #8
 8008a10:	627b      	str	r3, [r7, #36]	@ 0x24
 8008a12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008a14:	e853 3f00 	ldrex	r3, [r3]
 8008a18:	623b      	str	r3, [r7, #32]
 8008a1a:	6a3b      	ldr	r3, [r7, #32]
 8008a1c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008a20:	663b      	str	r3, [r7, #96]	@ 0x60
 8008a22:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a24:	681b      	ldr	r3, [r3, #0]
 8008a26:	3308      	adds	r3, #8
 8008a28:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 8008a2a:	633a      	str	r2, [r7, #48]	@ 0x30
 8008a2c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008a2e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008a30:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008a32:	e841 2300 	strex	r3, r2, [r1]
 8008a36:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008a38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008a3a:	2b00      	cmp	r3, #0
 8008a3c:	d1e5      	bne.n	8008a0a <UART_DMAReceiveCplt+0x8a>
 8008a3e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a40:	2220      	movs	r2, #32
 8008a42:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8008a46:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a48:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008a4a:	2b01      	cmp	r3, #1
 8008a4c:	d118      	bne.n	8008a80 <UART_DMAReceiveCplt+0x100>
 8008a4e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a50:	681b      	ldr	r3, [r3, #0]
 8008a52:	613b      	str	r3, [r7, #16]
 8008a54:	693b      	ldr	r3, [r7, #16]
 8008a56:	e853 3f00 	ldrex	r3, [r3]
 8008a5a:	60fb      	str	r3, [r7, #12]
 8008a5c:	68fb      	ldr	r3, [r7, #12]
 8008a5e:	f023 0310 	bic.w	r3, r3, #16
 8008a62:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008a64:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a66:	681b      	ldr	r3, [r3, #0]
 8008a68:	461a      	mov	r2, r3
 8008a6a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008a6c:	61fb      	str	r3, [r7, #28]
 8008a6e:	61ba      	str	r2, [r7, #24]
 8008a70:	69b9      	ldr	r1, [r7, #24]
 8008a72:	69fa      	ldr	r2, [r7, #28]
 8008a74:	e841 2300 	strex	r3, r2, [r1]
 8008a78:	617b      	str	r3, [r7, #20]
 8008a7a:	697b      	ldr	r3, [r7, #20]
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	d1e6      	bne.n	8008a4e <UART_DMAReceiveCplt+0xce>
 8008a80:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a82:	2200      	movs	r2, #0
 8008a84:	665a      	str	r2, [r3, #100]	@ 0x64
 8008a86:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a88:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008a8a:	2b01      	cmp	r3, #1
 8008a8c:	d107      	bne.n	8008a9e <UART_DMAReceiveCplt+0x11e>
 8008a8e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8008a90:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8008a94:	4619      	mov	r1, r3
 8008a96:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8008a98:	f7fa f8e0 	bl	8002c5c <HAL_UARTEx_RxEventCallback>
 8008a9c:	e002      	b.n	8008aa4 <UART_DMAReceiveCplt+0x124>
 8008a9e:	6ef8      	ldr	r0, [r7, #108]	@ 0x6c
 8008aa0:	f7ff fa13 	bl	8007eca <HAL_UART_RxCpltCallback>
 8008aa4:	bf00      	nop
 8008aa6:	3770      	adds	r7, #112	@ 0x70
 8008aa8:	46bd      	mov	sp, r7
 8008aaa:	bd80      	pop	{r7, pc}

08008aac <UART_DMARxHalfCplt>:
 8008aac:	b580      	push	{r7, lr}
 8008aae:	b084      	sub	sp, #16
 8008ab0:	af00      	add	r7, sp, #0
 8008ab2:	6078      	str	r0, [r7, #4]
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008ab8:	60fb      	str	r3, [r7, #12]
 8008aba:	68fb      	ldr	r3, [r7, #12]
 8008abc:	2201      	movs	r2, #1
 8008abe:	665a      	str	r2, [r3, #100]	@ 0x64
 8008ac0:	68fb      	ldr	r3, [r7, #12]
 8008ac2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008ac4:	2b01      	cmp	r3, #1
 8008ac6:	d109      	bne.n	8008adc <UART_DMARxHalfCplt+0x30>
 8008ac8:	68fb      	ldr	r3, [r7, #12]
 8008aca:	f8b3 3058 	ldrh.w	r3, [r3, #88]	@ 0x58
 8008ace:	085b      	lsrs	r3, r3, #1
 8008ad0:	b29b      	uxth	r3, r3
 8008ad2:	4619      	mov	r1, r3
 8008ad4:	68f8      	ldr	r0, [r7, #12]
 8008ad6:	f7fa f8c1 	bl	8002c5c <HAL_UARTEx_RxEventCallback>
 8008ada:	e002      	b.n	8008ae2 <UART_DMARxHalfCplt+0x36>
 8008adc:	68f8      	ldr	r0, [r7, #12]
 8008ade:	f7ff f9fe 	bl	8007ede <HAL_UART_RxHalfCpltCallback>
 8008ae2:	bf00      	nop
 8008ae4:	3710      	adds	r7, #16
 8008ae6:	46bd      	mov	sp, r7
 8008ae8:	bd80      	pop	{r7, pc}

08008aea <UART_DMAError>:
 8008aea:	b580      	push	{r7, lr}
 8008aec:	b086      	sub	sp, #24
 8008aee:	af00      	add	r7, sp, #0
 8008af0:	6078      	str	r0, [r7, #4]
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008af6:	617b      	str	r3, [r7, #20]
 8008af8:	697b      	ldr	r3, [r7, #20]
 8008afa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008afc:	613b      	str	r3, [r7, #16]
 8008afe:	697b      	ldr	r3, [r7, #20]
 8008b00:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008b04:	60fb      	str	r3, [r7, #12]
 8008b06:	697b      	ldr	r3, [r7, #20]
 8008b08:	681b      	ldr	r3, [r3, #0]
 8008b0a:	689b      	ldr	r3, [r3, #8]
 8008b0c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008b10:	2b80      	cmp	r3, #128	@ 0x80
 8008b12:	d109      	bne.n	8008b28 <UART_DMAError+0x3e>
 8008b14:	693b      	ldr	r3, [r7, #16]
 8008b16:	2b21      	cmp	r3, #33	@ 0x21
 8008b18:	d106      	bne.n	8008b28 <UART_DMAError+0x3e>
 8008b1a:	697b      	ldr	r3, [r7, #20]
 8008b1c:	2200      	movs	r2, #0
 8008b1e:	f8a3 2052 	strh.w	r2, [r3, #82]	@ 0x52
 8008b22:	6978      	ldr	r0, [r7, #20]
 8008b24:	f7ff fea2 	bl	800886c <UART_EndTxTransfer>
 8008b28:	697b      	ldr	r3, [r7, #20]
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	689b      	ldr	r3, [r3, #8]
 8008b2e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008b32:	2b40      	cmp	r3, #64	@ 0x40
 8008b34:	d109      	bne.n	8008b4a <UART_DMAError+0x60>
 8008b36:	68fb      	ldr	r3, [r7, #12]
 8008b38:	2b22      	cmp	r3, #34	@ 0x22
 8008b3a:	d106      	bne.n	8008b4a <UART_DMAError+0x60>
 8008b3c:	697b      	ldr	r3, [r7, #20]
 8008b3e:	2200      	movs	r2, #0
 8008b40:	f8a3 205a 	strh.w	r2, [r3, #90]	@ 0x5a
 8008b44:	6978      	ldr	r0, [r7, #20]
 8008b46:	f7ff feb7 	bl	80088b8 <UART_EndRxTransfer>
 8008b4a:	697b      	ldr	r3, [r7, #20]
 8008b4c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008b50:	f043 0210 	orr.w	r2, r3, #16
 8008b54:	697b      	ldr	r3, [r7, #20]
 8008b56:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8008b5a:	6978      	ldr	r0, [r7, #20]
 8008b5c:	f7ff f9c9 	bl	8007ef2 <HAL_UART_ErrorCallback>
 8008b60:	bf00      	nop
 8008b62:	3718      	adds	r7, #24
 8008b64:	46bd      	mov	sp, r7
 8008b66:	bd80      	pop	{r7, pc}

08008b68 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8008b68:	b580      	push	{r7, lr}
 8008b6a:	b08c      	sub	sp, #48	@ 0x30
 8008b6c:	af00      	add	r7, sp, #0
 8008b6e:	60f8      	str	r0, [r7, #12]
 8008b70:	60b9      	str	r1, [r7, #8]
 8008b72:	4613      	mov	r3, r2
 8008b74:	80fb      	strh	r3, [r7, #6]
 8008b76:	68fb      	ldr	r3, [r7, #12]
 8008b78:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008b7c:	2b20      	cmp	r3, #32
 8008b7e:	d142      	bne.n	8008c06 <HAL_UARTEx_ReceiveToIdle_DMA+0x9e>
 8008b80:	68bb      	ldr	r3, [r7, #8]
 8008b82:	2b00      	cmp	r3, #0
 8008b84:	d002      	beq.n	8008b8c <HAL_UARTEx_ReceiveToIdle_DMA+0x24>
 8008b86:	88fb      	ldrh	r3, [r7, #6]
 8008b88:	2b00      	cmp	r3, #0
 8008b8a:	d101      	bne.n	8008b90 <HAL_UARTEx_ReceiveToIdle_DMA+0x28>
 8008b8c:	2301      	movs	r3, #1
 8008b8e:	e03b      	b.n	8008c08 <HAL_UARTEx_ReceiveToIdle_DMA+0xa0>
 8008b90:	68fb      	ldr	r3, [r7, #12]
 8008b92:	2201      	movs	r2, #1
 8008b94:	661a      	str	r2, [r3, #96]	@ 0x60
 8008b96:	68fb      	ldr	r3, [r7, #12]
 8008b98:	2200      	movs	r2, #0
 8008b9a:	665a      	str	r2, [r3, #100]	@ 0x64
 8008b9c:	88fb      	ldrh	r3, [r7, #6]
 8008b9e:	461a      	mov	r2, r3
 8008ba0:	68b9      	ldr	r1, [r7, #8]
 8008ba2:	68f8      	ldr	r0, [r7, #12]
 8008ba4:	f7ff fdc2 	bl	800872c <UART_Start_Receive_DMA>
 8008ba8:	4603      	mov	r3, r0
 8008baa:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8008bae:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8008bb2:	2b00      	cmp	r3, #0
 8008bb4:	d124      	bne.n	8008c00 <HAL_UARTEx_ReceiveToIdle_DMA+0x98>
 8008bb6:	68fb      	ldr	r3, [r7, #12]
 8008bb8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008bba:	2b01      	cmp	r3, #1
 8008bbc:	d11d      	bne.n	8008bfa <HAL_UARTEx_ReceiveToIdle_DMA+0x92>
 8008bbe:	68fb      	ldr	r3, [r7, #12]
 8008bc0:	681b      	ldr	r3, [r3, #0]
 8008bc2:	2210      	movs	r2, #16
 8008bc4:	621a      	str	r2, [r3, #32]
 8008bc6:	68fb      	ldr	r3, [r7, #12]
 8008bc8:	681b      	ldr	r3, [r3, #0]
 8008bca:	61bb      	str	r3, [r7, #24]
 8008bcc:	69bb      	ldr	r3, [r7, #24]
 8008bce:	e853 3f00 	ldrex	r3, [r3]
 8008bd2:	617b      	str	r3, [r7, #20]
 8008bd4:	697b      	ldr	r3, [r7, #20]
 8008bd6:	f043 0310 	orr.w	r3, r3, #16
 8008bda:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008bdc:	68fb      	ldr	r3, [r7, #12]
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	461a      	mov	r2, r3
 8008be2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008be4:	627b      	str	r3, [r7, #36]	@ 0x24
 8008be6:	623a      	str	r2, [r7, #32]
 8008be8:	6a39      	ldr	r1, [r7, #32]
 8008bea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008bec:	e841 2300 	strex	r3, r2, [r1]
 8008bf0:	61fb      	str	r3, [r7, #28]
 8008bf2:	69fb      	ldr	r3, [r7, #28]
 8008bf4:	2b00      	cmp	r3, #0
 8008bf6:	d1e6      	bne.n	8008bc6 <HAL_UARTEx_ReceiveToIdle_DMA+0x5e>
 8008bf8:	e002      	b.n	8008c00 <HAL_UARTEx_ReceiveToIdle_DMA+0x98>
 8008bfa:	2301      	movs	r3, #1
 8008bfc:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8008c00:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8008c04:	e000      	b.n	8008c08 <HAL_UARTEx_ReceiveToIdle_DMA+0xa0>
 8008c06:	2302      	movs	r3, #2
 8008c08:	4618      	mov	r0, r3
 8008c0a:	3730      	adds	r7, #48	@ 0x30
 8008c0c:	46bd      	mov	sp, r7
 8008c0e:	bd80      	pop	{r7, pc}

08008c10 <__assert_func>:
 8008c10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008c12:	4614      	mov	r4, r2
 8008c14:	461a      	mov	r2, r3
 8008c16:	4b09      	ldr	r3, [pc, #36]	@ (8008c3c <__assert_func+0x2c>)
 8008c18:	681b      	ldr	r3, [r3, #0]
 8008c1a:	4605      	mov	r5, r0
 8008c1c:	68d8      	ldr	r0, [r3, #12]
 8008c1e:	b954      	cbnz	r4, 8008c36 <__assert_func+0x26>
 8008c20:	4b07      	ldr	r3, [pc, #28]	@ (8008c40 <__assert_func+0x30>)
 8008c22:	461c      	mov	r4, r3
 8008c24:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8008c28:	9100      	str	r1, [sp, #0]
 8008c2a:	462b      	mov	r3, r5
 8008c2c:	4905      	ldr	r1, [pc, #20]	@ (8008c44 <__assert_func+0x34>)
 8008c2e:	f001 fcb3 	bl	800a598 <fiprintf>
 8008c32:	f001 fe7f 	bl	800a934 <abort>
 8008c36:	4b04      	ldr	r3, [pc, #16]	@ (8008c48 <__assert_func+0x38>)
 8008c38:	e7f4      	b.n	8008c24 <__assert_func+0x14>
 8008c3a:	bf00      	nop
 8008c3c:	20000224 	.word	0x20000224
 8008c40:	0800d317 	.word	0x0800d317
 8008c44:	0800d2e9 	.word	0x0800d2e9
 8008c48:	0800d2dc 	.word	0x0800d2dc

08008c4c <malloc>:
 8008c4c:	4b02      	ldr	r3, [pc, #8]	@ (8008c58 <malloc+0xc>)
 8008c4e:	4601      	mov	r1, r0
 8008c50:	6818      	ldr	r0, [r3, #0]
 8008c52:	f000 b82d 	b.w	8008cb0 <_malloc_r>
 8008c56:	bf00      	nop
 8008c58:	20000224 	.word	0x20000224

08008c5c <free>:
 8008c5c:	4b02      	ldr	r3, [pc, #8]	@ (8008c68 <free+0xc>)
 8008c5e:	4601      	mov	r1, r0
 8008c60:	6818      	ldr	r0, [r3, #0]
 8008c62:	f002 bcbd 	b.w	800b5e0 <_free_r>
 8008c66:	bf00      	nop
 8008c68:	20000224 	.word	0x20000224

08008c6c <sbrk_aligned>:
 8008c6c:	b570      	push	{r4, r5, r6, lr}
 8008c6e:	4e0f      	ldr	r6, [pc, #60]	@ (8008cac <sbrk_aligned+0x40>)
 8008c70:	460c      	mov	r4, r1
 8008c72:	6831      	ldr	r1, [r6, #0]
 8008c74:	4605      	mov	r5, r0
 8008c76:	b911      	cbnz	r1, 8008c7e <sbrk_aligned+0x12>
 8008c78:	f001 fde6 	bl	800a848 <_sbrk_r>
 8008c7c:	6030      	str	r0, [r6, #0]
 8008c7e:	4621      	mov	r1, r4
 8008c80:	4628      	mov	r0, r5
 8008c82:	f001 fde1 	bl	800a848 <_sbrk_r>
 8008c86:	1c43      	adds	r3, r0, #1
 8008c88:	d103      	bne.n	8008c92 <sbrk_aligned+0x26>
 8008c8a:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8008c8e:	4620      	mov	r0, r4
 8008c90:	bd70      	pop	{r4, r5, r6, pc}
 8008c92:	1cc4      	adds	r4, r0, #3
 8008c94:	f024 0403 	bic.w	r4, r4, #3
 8008c98:	42a0      	cmp	r0, r4
 8008c9a:	d0f8      	beq.n	8008c8e <sbrk_aligned+0x22>
 8008c9c:	1a21      	subs	r1, r4, r0
 8008c9e:	4628      	mov	r0, r5
 8008ca0:	f001 fdd2 	bl	800a848 <_sbrk_r>
 8008ca4:	3001      	adds	r0, #1
 8008ca6:	d1f2      	bne.n	8008c8e <sbrk_aligned+0x22>
 8008ca8:	e7ef      	b.n	8008c8a <sbrk_aligned+0x1e>
 8008caa:	bf00      	nop
 8008cac:	20000c18 	.word	0x20000c18

08008cb0 <_malloc_r>:
 8008cb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008cb4:	1ccd      	adds	r5, r1, #3
 8008cb6:	f025 0503 	bic.w	r5, r5, #3
 8008cba:	3508      	adds	r5, #8
 8008cbc:	2d0c      	cmp	r5, #12
 8008cbe:	bf38      	it	cc
 8008cc0:	250c      	movcc	r5, #12
 8008cc2:	2d00      	cmp	r5, #0
 8008cc4:	4606      	mov	r6, r0
 8008cc6:	db01      	blt.n	8008ccc <_malloc_r+0x1c>
 8008cc8:	42a9      	cmp	r1, r5
 8008cca:	d904      	bls.n	8008cd6 <_malloc_r+0x26>
 8008ccc:	230c      	movs	r3, #12
 8008cce:	6033      	str	r3, [r6, #0]
 8008cd0:	2000      	movs	r0, #0
 8008cd2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008cd6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8008dac <_malloc_r+0xfc>
 8008cda:	f000 f869 	bl	8008db0 <__malloc_lock>
 8008cde:	f8d8 3000 	ldr.w	r3, [r8]
 8008ce2:	461c      	mov	r4, r3
 8008ce4:	bb44      	cbnz	r4, 8008d38 <_malloc_r+0x88>
 8008ce6:	4629      	mov	r1, r5
 8008ce8:	4630      	mov	r0, r6
 8008cea:	f7ff ffbf 	bl	8008c6c <sbrk_aligned>
 8008cee:	1c43      	adds	r3, r0, #1
 8008cf0:	4604      	mov	r4, r0
 8008cf2:	d158      	bne.n	8008da6 <_malloc_r+0xf6>
 8008cf4:	f8d8 4000 	ldr.w	r4, [r8]
 8008cf8:	4627      	mov	r7, r4
 8008cfa:	2f00      	cmp	r7, #0
 8008cfc:	d143      	bne.n	8008d86 <_malloc_r+0xd6>
 8008cfe:	2c00      	cmp	r4, #0
 8008d00:	d04b      	beq.n	8008d9a <_malloc_r+0xea>
 8008d02:	6823      	ldr	r3, [r4, #0]
 8008d04:	4639      	mov	r1, r7
 8008d06:	4630      	mov	r0, r6
 8008d08:	eb04 0903 	add.w	r9, r4, r3
 8008d0c:	f001 fd9c 	bl	800a848 <_sbrk_r>
 8008d10:	4581      	cmp	r9, r0
 8008d12:	d142      	bne.n	8008d9a <_malloc_r+0xea>
 8008d14:	6821      	ldr	r1, [r4, #0]
 8008d16:	1a6d      	subs	r5, r5, r1
 8008d18:	4629      	mov	r1, r5
 8008d1a:	4630      	mov	r0, r6
 8008d1c:	f7ff ffa6 	bl	8008c6c <sbrk_aligned>
 8008d20:	3001      	adds	r0, #1
 8008d22:	d03a      	beq.n	8008d9a <_malloc_r+0xea>
 8008d24:	6823      	ldr	r3, [r4, #0]
 8008d26:	442b      	add	r3, r5
 8008d28:	6023      	str	r3, [r4, #0]
 8008d2a:	f8d8 3000 	ldr.w	r3, [r8]
 8008d2e:	685a      	ldr	r2, [r3, #4]
 8008d30:	bb62      	cbnz	r2, 8008d8c <_malloc_r+0xdc>
 8008d32:	f8c8 7000 	str.w	r7, [r8]
 8008d36:	e00f      	b.n	8008d58 <_malloc_r+0xa8>
 8008d38:	6822      	ldr	r2, [r4, #0]
 8008d3a:	1b52      	subs	r2, r2, r5
 8008d3c:	d420      	bmi.n	8008d80 <_malloc_r+0xd0>
 8008d3e:	2a0b      	cmp	r2, #11
 8008d40:	d917      	bls.n	8008d72 <_malloc_r+0xc2>
 8008d42:	1961      	adds	r1, r4, r5
 8008d44:	42a3      	cmp	r3, r4
 8008d46:	6025      	str	r5, [r4, #0]
 8008d48:	bf18      	it	ne
 8008d4a:	6059      	strne	r1, [r3, #4]
 8008d4c:	6863      	ldr	r3, [r4, #4]
 8008d4e:	bf08      	it	eq
 8008d50:	f8c8 1000 	streq.w	r1, [r8]
 8008d54:	5162      	str	r2, [r4, r5]
 8008d56:	604b      	str	r3, [r1, #4]
 8008d58:	4630      	mov	r0, r6
 8008d5a:	f000 f82f 	bl	8008dbc <__malloc_unlock>
 8008d5e:	f104 000b 	add.w	r0, r4, #11
 8008d62:	1d23      	adds	r3, r4, #4
 8008d64:	f020 0007 	bic.w	r0, r0, #7
 8008d68:	1ac2      	subs	r2, r0, r3
 8008d6a:	bf1c      	itt	ne
 8008d6c:	1a1b      	subne	r3, r3, r0
 8008d6e:	50a3      	strne	r3, [r4, r2]
 8008d70:	e7af      	b.n	8008cd2 <_malloc_r+0x22>
 8008d72:	6862      	ldr	r2, [r4, #4]
 8008d74:	42a3      	cmp	r3, r4
 8008d76:	bf0c      	ite	eq
 8008d78:	f8c8 2000 	streq.w	r2, [r8]
 8008d7c:	605a      	strne	r2, [r3, #4]
 8008d7e:	e7eb      	b.n	8008d58 <_malloc_r+0xa8>
 8008d80:	4623      	mov	r3, r4
 8008d82:	6864      	ldr	r4, [r4, #4]
 8008d84:	e7ae      	b.n	8008ce4 <_malloc_r+0x34>
 8008d86:	463c      	mov	r4, r7
 8008d88:	687f      	ldr	r7, [r7, #4]
 8008d8a:	e7b6      	b.n	8008cfa <_malloc_r+0x4a>
 8008d8c:	461a      	mov	r2, r3
 8008d8e:	685b      	ldr	r3, [r3, #4]
 8008d90:	42a3      	cmp	r3, r4
 8008d92:	d1fb      	bne.n	8008d8c <_malloc_r+0xdc>
 8008d94:	2300      	movs	r3, #0
 8008d96:	6053      	str	r3, [r2, #4]
 8008d98:	e7de      	b.n	8008d58 <_malloc_r+0xa8>
 8008d9a:	230c      	movs	r3, #12
 8008d9c:	6033      	str	r3, [r6, #0]
 8008d9e:	4630      	mov	r0, r6
 8008da0:	f000 f80c 	bl	8008dbc <__malloc_unlock>
 8008da4:	e794      	b.n	8008cd0 <_malloc_r+0x20>
 8008da6:	6005      	str	r5, [r0, #0]
 8008da8:	e7d6      	b.n	8008d58 <_malloc_r+0xa8>
 8008daa:	bf00      	nop
 8008dac:	20000c1c 	.word	0x20000c1c

08008db0 <__malloc_lock>:
 8008db0:	4801      	ldr	r0, [pc, #4]	@ (8008db8 <__malloc_lock+0x8>)
 8008db2:	f001 bd96 	b.w	800a8e2 <__retarget_lock_acquire_recursive>
 8008db6:	bf00      	nop
 8008db8:	20000d60 	.word	0x20000d60

08008dbc <__malloc_unlock>:
 8008dbc:	4801      	ldr	r0, [pc, #4]	@ (8008dc4 <__malloc_unlock+0x8>)
 8008dbe:	f001 bd91 	b.w	800a8e4 <__retarget_lock_release_recursive>
 8008dc2:	bf00      	nop
 8008dc4:	20000d60 	.word	0x20000d60

08008dc8 <sulp>:
 8008dc8:	b570      	push	{r4, r5, r6, lr}
 8008dca:	4604      	mov	r4, r0
 8008dcc:	460d      	mov	r5, r1
 8008dce:	ec45 4b10 	vmov	d0, r4, r5
 8008dd2:	4616      	mov	r6, r2
 8008dd4:	f003 fb0e 	bl	800c3f4 <__ulp>
 8008dd8:	ec51 0b10 	vmov	r0, r1, d0
 8008ddc:	b17e      	cbz	r6, 8008dfe <sulp+0x36>
 8008dde:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8008de2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8008de6:	2b00      	cmp	r3, #0
 8008de8:	dd09      	ble.n	8008dfe <sulp+0x36>
 8008dea:	051b      	lsls	r3, r3, #20
 8008dec:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 8008df0:	2400      	movs	r4, #0
 8008df2:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8008df6:	4622      	mov	r2, r4
 8008df8:	462b      	mov	r3, r5
 8008dfa:	f7f7 fbfd 	bl	80005f8 <__aeabi_dmul>
 8008dfe:	ec41 0b10 	vmov	d0, r0, r1
 8008e02:	bd70      	pop	{r4, r5, r6, pc}
 8008e04:	0000      	movs	r0, r0
	...

08008e08 <_strtod_l>:
 8008e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e0c:	b09f      	sub	sp, #124	@ 0x7c
 8008e0e:	460c      	mov	r4, r1
 8008e10:	9217      	str	r2, [sp, #92]	@ 0x5c
 8008e12:	2200      	movs	r2, #0
 8008e14:	921a      	str	r2, [sp, #104]	@ 0x68
 8008e16:	9005      	str	r0, [sp, #20]
 8008e18:	f04f 0a00 	mov.w	sl, #0
 8008e1c:	f04f 0b00 	mov.w	fp, #0
 8008e20:	460a      	mov	r2, r1
 8008e22:	9219      	str	r2, [sp, #100]	@ 0x64
 8008e24:	7811      	ldrb	r1, [r2, #0]
 8008e26:	292b      	cmp	r1, #43	@ 0x2b
 8008e28:	d04a      	beq.n	8008ec0 <_strtod_l+0xb8>
 8008e2a:	d838      	bhi.n	8008e9e <_strtod_l+0x96>
 8008e2c:	290d      	cmp	r1, #13
 8008e2e:	d832      	bhi.n	8008e96 <_strtod_l+0x8e>
 8008e30:	2908      	cmp	r1, #8
 8008e32:	d832      	bhi.n	8008e9a <_strtod_l+0x92>
 8008e34:	2900      	cmp	r1, #0
 8008e36:	d03b      	beq.n	8008eb0 <_strtod_l+0xa8>
 8008e38:	2200      	movs	r2, #0
 8008e3a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8008e3c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8008e3e:	782a      	ldrb	r2, [r5, #0]
 8008e40:	2a30      	cmp	r2, #48	@ 0x30
 8008e42:	f040 80b3 	bne.w	8008fac <_strtod_l+0x1a4>
 8008e46:	786a      	ldrb	r2, [r5, #1]
 8008e48:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8008e4c:	2a58      	cmp	r2, #88	@ 0x58
 8008e4e:	d16e      	bne.n	8008f2e <_strtod_l+0x126>
 8008e50:	9302      	str	r3, [sp, #8]
 8008e52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008e54:	9301      	str	r3, [sp, #4]
 8008e56:	ab1a      	add	r3, sp, #104	@ 0x68
 8008e58:	9300      	str	r3, [sp, #0]
 8008e5a:	4a8e      	ldr	r2, [pc, #568]	@ (8009094 <_strtod_l+0x28c>)
 8008e5c:	9805      	ldr	r0, [sp, #20]
 8008e5e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8008e60:	a919      	add	r1, sp, #100	@ 0x64
 8008e62:	f002 fc6f 	bl	800b744 <__gethex>
 8008e66:	f010 060f 	ands.w	r6, r0, #15
 8008e6a:	4604      	mov	r4, r0
 8008e6c:	d005      	beq.n	8008e7a <_strtod_l+0x72>
 8008e6e:	2e06      	cmp	r6, #6
 8008e70:	d128      	bne.n	8008ec4 <_strtod_l+0xbc>
 8008e72:	3501      	adds	r5, #1
 8008e74:	2300      	movs	r3, #0
 8008e76:	9519      	str	r5, [sp, #100]	@ 0x64
 8008e78:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008e7a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008e7c:	2b00      	cmp	r3, #0
 8008e7e:	f040 858e 	bne.w	800999e <_strtod_l+0xb96>
 8008e82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008e84:	b1cb      	cbz	r3, 8008eba <_strtod_l+0xb2>
 8008e86:	4652      	mov	r2, sl
 8008e88:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8008e8c:	ec43 2b10 	vmov	d0, r2, r3
 8008e90:	b01f      	add	sp, #124	@ 0x7c
 8008e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008e96:	2920      	cmp	r1, #32
 8008e98:	d1ce      	bne.n	8008e38 <_strtod_l+0x30>
 8008e9a:	3201      	adds	r2, #1
 8008e9c:	e7c1      	b.n	8008e22 <_strtod_l+0x1a>
 8008e9e:	292d      	cmp	r1, #45	@ 0x2d
 8008ea0:	d1ca      	bne.n	8008e38 <_strtod_l+0x30>
 8008ea2:	2101      	movs	r1, #1
 8008ea4:	910b      	str	r1, [sp, #44]	@ 0x2c
 8008ea6:	1c51      	adds	r1, r2, #1
 8008ea8:	9119      	str	r1, [sp, #100]	@ 0x64
 8008eaa:	7852      	ldrb	r2, [r2, #1]
 8008eac:	2a00      	cmp	r2, #0
 8008eae:	d1c5      	bne.n	8008e3c <_strtod_l+0x34>
 8008eb0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8008eb2:	9419      	str	r4, [sp, #100]	@ 0x64
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	f040 8570 	bne.w	800999a <_strtod_l+0xb92>
 8008eba:	4652      	mov	r2, sl
 8008ebc:	465b      	mov	r3, fp
 8008ebe:	e7e5      	b.n	8008e8c <_strtod_l+0x84>
 8008ec0:	2100      	movs	r1, #0
 8008ec2:	e7ef      	b.n	8008ea4 <_strtod_l+0x9c>
 8008ec4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8008ec6:	b13a      	cbz	r2, 8008ed8 <_strtod_l+0xd0>
 8008ec8:	2135      	movs	r1, #53	@ 0x35
 8008eca:	a81c      	add	r0, sp, #112	@ 0x70
 8008ecc:	f003 fb8c 	bl	800c5e8 <__copybits>
 8008ed0:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8008ed2:	9805      	ldr	r0, [sp, #20]
 8008ed4:	f002 ff5a 	bl	800bd8c <_Bfree>
 8008ed8:	3e01      	subs	r6, #1
 8008eda:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8008edc:	2e04      	cmp	r6, #4
 8008ede:	d806      	bhi.n	8008eee <_strtod_l+0xe6>
 8008ee0:	e8df f006 	tbb	[pc, r6]
 8008ee4:	201d0314 	.word	0x201d0314
 8008ee8:	14          	.byte	0x14
 8008ee9:	00          	.byte	0x00
 8008eea:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 8008eee:	05e1      	lsls	r1, r4, #23
 8008ef0:	bf48      	it	mi
 8008ef2:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8008ef6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8008efa:	0d1b      	lsrs	r3, r3, #20
 8008efc:	051b      	lsls	r3, r3, #20
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	d1bb      	bne.n	8008e7a <_strtod_l+0x72>
 8008f02:	f001 fcc3 	bl	800a88c <__errno>
 8008f06:	2322      	movs	r3, #34	@ 0x22
 8008f08:	6003      	str	r3, [r0, #0]
 8008f0a:	e7b6      	b.n	8008e7a <_strtod_l+0x72>
 8008f0c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8008f10:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 8008f14:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8008f18:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8008f1c:	e7e7      	b.n	8008eee <_strtod_l+0xe6>
 8008f1e:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 800909c <_strtod_l+0x294>
 8008f22:	e7e4      	b.n	8008eee <_strtod_l+0xe6>
 8008f24:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8008f28:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8008f2c:	e7df      	b.n	8008eee <_strtod_l+0xe6>
 8008f2e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8008f30:	1c5a      	adds	r2, r3, #1
 8008f32:	9219      	str	r2, [sp, #100]	@ 0x64
 8008f34:	785b      	ldrb	r3, [r3, #1]
 8008f36:	2b30      	cmp	r3, #48	@ 0x30
 8008f38:	d0f9      	beq.n	8008f2e <_strtod_l+0x126>
 8008f3a:	2b00      	cmp	r3, #0
 8008f3c:	d09d      	beq.n	8008e7a <_strtod_l+0x72>
 8008f3e:	2301      	movs	r3, #1
 8008f40:	9309      	str	r3, [sp, #36]	@ 0x24
 8008f42:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8008f44:	930c      	str	r3, [sp, #48]	@ 0x30
 8008f46:	2300      	movs	r3, #0
 8008f48:	9308      	str	r3, [sp, #32]
 8008f4a:	930a      	str	r3, [sp, #40]	@ 0x28
 8008f4c:	461f      	mov	r7, r3
 8008f4e:	220a      	movs	r2, #10
 8008f50:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8008f52:	7805      	ldrb	r5, [r0, #0]
 8008f54:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8008f58:	b2d9      	uxtb	r1, r3
 8008f5a:	2909      	cmp	r1, #9
 8008f5c:	d928      	bls.n	8008fb0 <_strtod_l+0x1a8>
 8008f5e:	494e      	ldr	r1, [pc, #312]	@ (8009098 <_strtod_l+0x290>)
 8008f60:	2201      	movs	r2, #1
 8008f62:	f001 fbb4 	bl	800a6ce <strncmp>
 8008f66:	2800      	cmp	r0, #0
 8008f68:	d032      	beq.n	8008fd0 <_strtod_l+0x1c8>
 8008f6a:	2000      	movs	r0, #0
 8008f6c:	462a      	mov	r2, r5
 8008f6e:	4681      	mov	r9, r0
 8008f70:	463d      	mov	r5, r7
 8008f72:	4603      	mov	r3, r0
 8008f74:	2a65      	cmp	r2, #101	@ 0x65
 8008f76:	d001      	beq.n	8008f7c <_strtod_l+0x174>
 8008f78:	2a45      	cmp	r2, #69	@ 0x45
 8008f7a:	d114      	bne.n	8008fa6 <_strtod_l+0x19e>
 8008f7c:	b91d      	cbnz	r5, 8008f86 <_strtod_l+0x17e>
 8008f7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008f80:	4302      	orrs	r2, r0
 8008f82:	d095      	beq.n	8008eb0 <_strtod_l+0xa8>
 8008f84:	2500      	movs	r5, #0
 8008f86:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8008f88:	1c62      	adds	r2, r4, #1
 8008f8a:	9219      	str	r2, [sp, #100]	@ 0x64
 8008f8c:	7862      	ldrb	r2, [r4, #1]
 8008f8e:	2a2b      	cmp	r2, #43	@ 0x2b
 8008f90:	d077      	beq.n	8009082 <_strtod_l+0x27a>
 8008f92:	2a2d      	cmp	r2, #45	@ 0x2d
 8008f94:	d07b      	beq.n	800908e <_strtod_l+0x286>
 8008f96:	f04f 0c00 	mov.w	ip, #0
 8008f9a:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 8008f9e:	2909      	cmp	r1, #9
 8008fa0:	f240 8082 	bls.w	80090a8 <_strtod_l+0x2a0>
 8008fa4:	9419      	str	r4, [sp, #100]	@ 0x64
 8008fa6:	f04f 0800 	mov.w	r8, #0
 8008faa:	e0a2      	b.n	80090f2 <_strtod_l+0x2ea>
 8008fac:	2300      	movs	r3, #0
 8008fae:	e7c7      	b.n	8008f40 <_strtod_l+0x138>
 8008fb0:	2f08      	cmp	r7, #8
 8008fb2:	bfd5      	itete	le
 8008fb4:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 8008fb6:	9908      	ldrgt	r1, [sp, #32]
 8008fb8:	fb02 3301 	mlale	r3, r2, r1, r3
 8008fbc:	fb02 3301 	mlagt	r3, r2, r1, r3
 8008fc0:	f100 0001 	add.w	r0, r0, #1
 8008fc4:	bfd4      	ite	le
 8008fc6:	930a      	strle	r3, [sp, #40]	@ 0x28
 8008fc8:	9308      	strgt	r3, [sp, #32]
 8008fca:	3701      	adds	r7, #1
 8008fcc:	9019      	str	r0, [sp, #100]	@ 0x64
 8008fce:	e7bf      	b.n	8008f50 <_strtod_l+0x148>
 8008fd0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8008fd2:	1c5a      	adds	r2, r3, #1
 8008fd4:	9219      	str	r2, [sp, #100]	@ 0x64
 8008fd6:	785a      	ldrb	r2, [r3, #1]
 8008fd8:	b37f      	cbz	r7, 800903a <_strtod_l+0x232>
 8008fda:	4681      	mov	r9, r0
 8008fdc:	463d      	mov	r5, r7
 8008fde:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8008fe2:	2b09      	cmp	r3, #9
 8008fe4:	d912      	bls.n	800900c <_strtod_l+0x204>
 8008fe6:	2301      	movs	r3, #1
 8008fe8:	e7c4      	b.n	8008f74 <_strtod_l+0x16c>
 8008fea:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8008fec:	1c5a      	adds	r2, r3, #1
 8008fee:	9219      	str	r2, [sp, #100]	@ 0x64
 8008ff0:	785a      	ldrb	r2, [r3, #1]
 8008ff2:	3001      	adds	r0, #1
 8008ff4:	2a30      	cmp	r2, #48	@ 0x30
 8008ff6:	d0f8      	beq.n	8008fea <_strtod_l+0x1e2>
 8008ff8:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8008ffc:	2b08      	cmp	r3, #8
 8008ffe:	f200 84d3 	bhi.w	80099a8 <_strtod_l+0xba0>
 8009002:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009004:	930c      	str	r3, [sp, #48]	@ 0x30
 8009006:	4681      	mov	r9, r0
 8009008:	2000      	movs	r0, #0
 800900a:	4605      	mov	r5, r0
 800900c:	3a30      	subs	r2, #48	@ 0x30
 800900e:	f100 0301 	add.w	r3, r0, #1
 8009012:	d02a      	beq.n	800906a <_strtod_l+0x262>
 8009014:	4499      	add	r9, r3
 8009016:	eb00 0c05 	add.w	ip, r0, r5
 800901a:	462b      	mov	r3, r5
 800901c:	210a      	movs	r1, #10
 800901e:	4563      	cmp	r3, ip
 8009020:	d10d      	bne.n	800903e <_strtod_l+0x236>
 8009022:	1c69      	adds	r1, r5, #1
 8009024:	4401      	add	r1, r0
 8009026:	4428      	add	r0, r5
 8009028:	2808      	cmp	r0, #8
 800902a:	dc16      	bgt.n	800905a <_strtod_l+0x252>
 800902c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800902e:	230a      	movs	r3, #10
 8009030:	fb03 2300 	mla	r3, r3, r0, r2
 8009034:	930a      	str	r3, [sp, #40]	@ 0x28
 8009036:	2300      	movs	r3, #0
 8009038:	e018      	b.n	800906c <_strtod_l+0x264>
 800903a:	4638      	mov	r0, r7
 800903c:	e7da      	b.n	8008ff4 <_strtod_l+0x1ec>
 800903e:	2b08      	cmp	r3, #8
 8009040:	f103 0301 	add.w	r3, r3, #1
 8009044:	dc03      	bgt.n	800904e <_strtod_l+0x246>
 8009046:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8009048:	434e      	muls	r6, r1
 800904a:	960a      	str	r6, [sp, #40]	@ 0x28
 800904c:	e7e7      	b.n	800901e <_strtod_l+0x216>
 800904e:	2b10      	cmp	r3, #16
 8009050:	bfde      	ittt	le
 8009052:	9e08      	ldrle	r6, [sp, #32]
 8009054:	434e      	mulle	r6, r1
 8009056:	9608      	strle	r6, [sp, #32]
 8009058:	e7e1      	b.n	800901e <_strtod_l+0x216>
 800905a:	280f      	cmp	r0, #15
 800905c:	dceb      	bgt.n	8009036 <_strtod_l+0x22e>
 800905e:	9808      	ldr	r0, [sp, #32]
 8009060:	230a      	movs	r3, #10
 8009062:	fb03 2300 	mla	r3, r3, r0, r2
 8009066:	9308      	str	r3, [sp, #32]
 8009068:	e7e5      	b.n	8009036 <_strtod_l+0x22e>
 800906a:	4629      	mov	r1, r5
 800906c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800906e:	1c50      	adds	r0, r2, #1
 8009070:	9019      	str	r0, [sp, #100]	@ 0x64
 8009072:	7852      	ldrb	r2, [r2, #1]
 8009074:	4618      	mov	r0, r3
 8009076:	460d      	mov	r5, r1
 8009078:	e7b1      	b.n	8008fde <_strtod_l+0x1d6>
 800907a:	f04f 0900 	mov.w	r9, #0
 800907e:	2301      	movs	r3, #1
 8009080:	e77d      	b.n	8008f7e <_strtod_l+0x176>
 8009082:	f04f 0c00 	mov.w	ip, #0
 8009086:	1ca2      	adds	r2, r4, #2
 8009088:	9219      	str	r2, [sp, #100]	@ 0x64
 800908a:	78a2      	ldrb	r2, [r4, #2]
 800908c:	e785      	b.n	8008f9a <_strtod_l+0x192>
 800908e:	f04f 0c01 	mov.w	ip, #1
 8009092:	e7f8      	b.n	8009086 <_strtod_l+0x27e>
 8009094:	0800d330 	.word	0x0800d330
 8009098:	0800d318 	.word	0x0800d318
 800909c:	7ff00000 	.word	0x7ff00000
 80090a0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80090a2:	1c51      	adds	r1, r2, #1
 80090a4:	9119      	str	r1, [sp, #100]	@ 0x64
 80090a6:	7852      	ldrb	r2, [r2, #1]
 80090a8:	2a30      	cmp	r2, #48	@ 0x30
 80090aa:	d0f9      	beq.n	80090a0 <_strtod_l+0x298>
 80090ac:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 80090b0:	2908      	cmp	r1, #8
 80090b2:	f63f af78 	bhi.w	8008fa6 <_strtod_l+0x19e>
 80090b6:	3a30      	subs	r2, #48	@ 0x30
 80090b8:	920e      	str	r2, [sp, #56]	@ 0x38
 80090ba:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80090bc:	920f      	str	r2, [sp, #60]	@ 0x3c
 80090be:	f04f 080a 	mov.w	r8, #10
 80090c2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80090c4:	1c56      	adds	r6, r2, #1
 80090c6:	9619      	str	r6, [sp, #100]	@ 0x64
 80090c8:	7852      	ldrb	r2, [r2, #1]
 80090ca:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80090ce:	f1be 0f09 	cmp.w	lr, #9
 80090d2:	d939      	bls.n	8009148 <_strtod_l+0x340>
 80090d4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80090d6:	1a76      	subs	r6, r6, r1
 80090d8:	2e08      	cmp	r6, #8
 80090da:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80090de:	dc03      	bgt.n	80090e8 <_strtod_l+0x2e0>
 80090e0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80090e2:	4588      	cmp	r8, r1
 80090e4:	bfa8      	it	ge
 80090e6:	4688      	movge	r8, r1
 80090e8:	f1bc 0f00 	cmp.w	ip, #0
 80090ec:	d001      	beq.n	80090f2 <_strtod_l+0x2ea>
 80090ee:	f1c8 0800 	rsb	r8, r8, #0
 80090f2:	2d00      	cmp	r5, #0
 80090f4:	d14e      	bne.n	8009194 <_strtod_l+0x38c>
 80090f6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80090f8:	4308      	orrs	r0, r1
 80090fa:	f47f aebe 	bne.w	8008e7a <_strtod_l+0x72>
 80090fe:	2b00      	cmp	r3, #0
 8009100:	f47f aed6 	bne.w	8008eb0 <_strtod_l+0xa8>
 8009104:	2a69      	cmp	r2, #105	@ 0x69
 8009106:	d028      	beq.n	800915a <_strtod_l+0x352>
 8009108:	dc25      	bgt.n	8009156 <_strtod_l+0x34e>
 800910a:	2a49      	cmp	r2, #73	@ 0x49
 800910c:	d025      	beq.n	800915a <_strtod_l+0x352>
 800910e:	2a4e      	cmp	r2, #78	@ 0x4e
 8009110:	f47f aece 	bne.w	8008eb0 <_strtod_l+0xa8>
 8009114:	499b      	ldr	r1, [pc, #620]	@ (8009384 <_strtod_l+0x57c>)
 8009116:	a819      	add	r0, sp, #100	@ 0x64
 8009118:	f002 fd36 	bl	800bb88 <__match>
 800911c:	2800      	cmp	r0, #0
 800911e:	f43f aec7 	beq.w	8008eb0 <_strtod_l+0xa8>
 8009122:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8009124:	781b      	ldrb	r3, [r3, #0]
 8009126:	2b28      	cmp	r3, #40	@ 0x28
 8009128:	d12e      	bne.n	8009188 <_strtod_l+0x380>
 800912a:	4997      	ldr	r1, [pc, #604]	@ (8009388 <_strtod_l+0x580>)
 800912c:	aa1c      	add	r2, sp, #112	@ 0x70
 800912e:	a819      	add	r0, sp, #100	@ 0x64
 8009130:	f002 fd3e 	bl	800bbb0 <__hexnan>
 8009134:	2805      	cmp	r0, #5
 8009136:	d127      	bne.n	8009188 <_strtod_l+0x380>
 8009138:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800913a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800913e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8009142:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8009146:	e698      	b.n	8008e7a <_strtod_l+0x72>
 8009148:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800914a:	fb08 2101 	mla	r1, r8, r1, r2
 800914e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8009152:	920e      	str	r2, [sp, #56]	@ 0x38
 8009154:	e7b5      	b.n	80090c2 <_strtod_l+0x2ba>
 8009156:	2a6e      	cmp	r2, #110	@ 0x6e
 8009158:	e7da      	b.n	8009110 <_strtod_l+0x308>
 800915a:	498c      	ldr	r1, [pc, #560]	@ (800938c <_strtod_l+0x584>)
 800915c:	a819      	add	r0, sp, #100	@ 0x64
 800915e:	f002 fd13 	bl	800bb88 <__match>
 8009162:	2800      	cmp	r0, #0
 8009164:	f43f aea4 	beq.w	8008eb0 <_strtod_l+0xa8>
 8009168:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800916a:	4989      	ldr	r1, [pc, #548]	@ (8009390 <_strtod_l+0x588>)
 800916c:	3b01      	subs	r3, #1
 800916e:	a819      	add	r0, sp, #100	@ 0x64
 8009170:	9319      	str	r3, [sp, #100]	@ 0x64
 8009172:	f002 fd09 	bl	800bb88 <__match>
 8009176:	b910      	cbnz	r0, 800917e <_strtod_l+0x376>
 8009178:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800917a:	3301      	adds	r3, #1
 800917c:	9319      	str	r3, [sp, #100]	@ 0x64
 800917e:	f8df b220 	ldr.w	fp, [pc, #544]	@ 80093a0 <_strtod_l+0x598>
 8009182:	f04f 0a00 	mov.w	sl, #0
 8009186:	e678      	b.n	8008e7a <_strtod_l+0x72>
 8009188:	4882      	ldr	r0, [pc, #520]	@ (8009394 <_strtod_l+0x58c>)
 800918a:	f001 fbc5 	bl	800a918 <nan>
 800918e:	ec5b ab10 	vmov	sl, fp, d0
 8009192:	e672      	b.n	8008e7a <_strtod_l+0x72>
 8009194:	eba8 0309 	sub.w	r3, r8, r9
 8009198:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800919a:	9309      	str	r3, [sp, #36]	@ 0x24
 800919c:	2f00      	cmp	r7, #0
 800919e:	bf08      	it	eq
 80091a0:	462f      	moveq	r7, r5
 80091a2:	2d10      	cmp	r5, #16
 80091a4:	462c      	mov	r4, r5
 80091a6:	bfa8      	it	ge
 80091a8:	2410      	movge	r4, #16
 80091aa:	f7f7 f9ab 	bl	8000504 <__aeabi_ui2d>
 80091ae:	2d09      	cmp	r5, #9
 80091b0:	4682      	mov	sl, r0
 80091b2:	468b      	mov	fp, r1
 80091b4:	dc13      	bgt.n	80091de <_strtod_l+0x3d6>
 80091b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80091b8:	2b00      	cmp	r3, #0
 80091ba:	f43f ae5e 	beq.w	8008e7a <_strtod_l+0x72>
 80091be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80091c0:	dd78      	ble.n	80092b4 <_strtod_l+0x4ac>
 80091c2:	2b16      	cmp	r3, #22
 80091c4:	dc5f      	bgt.n	8009286 <_strtod_l+0x47e>
 80091c6:	4974      	ldr	r1, [pc, #464]	@ (8009398 <_strtod_l+0x590>)
 80091c8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80091cc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80091d0:	4652      	mov	r2, sl
 80091d2:	465b      	mov	r3, fp
 80091d4:	f7f7 fa10 	bl	80005f8 <__aeabi_dmul>
 80091d8:	4682      	mov	sl, r0
 80091da:	468b      	mov	fp, r1
 80091dc:	e64d      	b.n	8008e7a <_strtod_l+0x72>
 80091de:	4b6e      	ldr	r3, [pc, #440]	@ (8009398 <_strtod_l+0x590>)
 80091e0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80091e4:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 80091e8:	f7f7 fa06 	bl	80005f8 <__aeabi_dmul>
 80091ec:	4682      	mov	sl, r0
 80091ee:	9808      	ldr	r0, [sp, #32]
 80091f0:	468b      	mov	fp, r1
 80091f2:	f7f7 f987 	bl	8000504 <__aeabi_ui2d>
 80091f6:	4602      	mov	r2, r0
 80091f8:	460b      	mov	r3, r1
 80091fa:	4650      	mov	r0, sl
 80091fc:	4659      	mov	r1, fp
 80091fe:	f7f7 f845 	bl	800028c <__adddf3>
 8009202:	2d0f      	cmp	r5, #15
 8009204:	4682      	mov	sl, r0
 8009206:	468b      	mov	fp, r1
 8009208:	ddd5      	ble.n	80091b6 <_strtod_l+0x3ae>
 800920a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800920c:	1b2c      	subs	r4, r5, r4
 800920e:	441c      	add	r4, r3
 8009210:	2c00      	cmp	r4, #0
 8009212:	f340 8096 	ble.w	8009342 <_strtod_l+0x53a>
 8009216:	f014 030f 	ands.w	r3, r4, #15
 800921a:	d00a      	beq.n	8009232 <_strtod_l+0x42a>
 800921c:	495e      	ldr	r1, [pc, #376]	@ (8009398 <_strtod_l+0x590>)
 800921e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8009222:	4652      	mov	r2, sl
 8009224:	465b      	mov	r3, fp
 8009226:	e9d1 0100 	ldrd	r0, r1, [r1]
 800922a:	f7f7 f9e5 	bl	80005f8 <__aeabi_dmul>
 800922e:	4682      	mov	sl, r0
 8009230:	468b      	mov	fp, r1
 8009232:	f034 040f 	bics.w	r4, r4, #15
 8009236:	d073      	beq.n	8009320 <_strtod_l+0x518>
 8009238:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800923c:	dd48      	ble.n	80092d0 <_strtod_l+0x4c8>
 800923e:	2400      	movs	r4, #0
 8009240:	46a0      	mov	r8, r4
 8009242:	940a      	str	r4, [sp, #40]	@ 0x28
 8009244:	46a1      	mov	r9, r4
 8009246:	9a05      	ldr	r2, [sp, #20]
 8009248:	f8df b154 	ldr.w	fp, [pc, #340]	@ 80093a0 <_strtod_l+0x598>
 800924c:	2322      	movs	r3, #34	@ 0x22
 800924e:	6013      	str	r3, [r2, #0]
 8009250:	f04f 0a00 	mov.w	sl, #0
 8009254:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009256:	2b00      	cmp	r3, #0
 8009258:	f43f ae0f 	beq.w	8008e7a <_strtod_l+0x72>
 800925c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800925e:	9805      	ldr	r0, [sp, #20]
 8009260:	f002 fd94 	bl	800bd8c <_Bfree>
 8009264:	9805      	ldr	r0, [sp, #20]
 8009266:	4649      	mov	r1, r9
 8009268:	f002 fd90 	bl	800bd8c <_Bfree>
 800926c:	9805      	ldr	r0, [sp, #20]
 800926e:	4641      	mov	r1, r8
 8009270:	f002 fd8c 	bl	800bd8c <_Bfree>
 8009274:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8009276:	9805      	ldr	r0, [sp, #20]
 8009278:	f002 fd88 	bl	800bd8c <_Bfree>
 800927c:	9805      	ldr	r0, [sp, #20]
 800927e:	4621      	mov	r1, r4
 8009280:	f002 fd84 	bl	800bd8c <_Bfree>
 8009284:	e5f9      	b.n	8008e7a <_strtod_l+0x72>
 8009286:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009288:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800928c:	4293      	cmp	r3, r2
 800928e:	dbbc      	blt.n	800920a <_strtod_l+0x402>
 8009290:	4c41      	ldr	r4, [pc, #260]	@ (8009398 <_strtod_l+0x590>)
 8009292:	f1c5 050f 	rsb	r5, r5, #15
 8009296:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800929a:	4652      	mov	r2, sl
 800929c:	465b      	mov	r3, fp
 800929e:	e9d1 0100 	ldrd	r0, r1, [r1]
 80092a2:	f7f7 f9a9 	bl	80005f8 <__aeabi_dmul>
 80092a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80092a8:	1b5d      	subs	r5, r3, r5
 80092aa:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80092ae:	e9d4 2300 	ldrd	r2, r3, [r4]
 80092b2:	e78f      	b.n	80091d4 <_strtod_l+0x3cc>
 80092b4:	3316      	adds	r3, #22
 80092b6:	dba8      	blt.n	800920a <_strtod_l+0x402>
 80092b8:	4b37      	ldr	r3, [pc, #220]	@ (8009398 <_strtod_l+0x590>)
 80092ba:	eba9 0808 	sub.w	r8, r9, r8
 80092be:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 80092c2:	e9d8 2300 	ldrd	r2, r3, [r8]
 80092c6:	4650      	mov	r0, sl
 80092c8:	4659      	mov	r1, fp
 80092ca:	f7f7 fabf 	bl	800084c <__aeabi_ddiv>
 80092ce:	e783      	b.n	80091d8 <_strtod_l+0x3d0>
 80092d0:	4b32      	ldr	r3, [pc, #200]	@ (800939c <_strtod_l+0x594>)
 80092d2:	9308      	str	r3, [sp, #32]
 80092d4:	2300      	movs	r3, #0
 80092d6:	1124      	asrs	r4, r4, #4
 80092d8:	4650      	mov	r0, sl
 80092da:	4659      	mov	r1, fp
 80092dc:	461e      	mov	r6, r3
 80092de:	2c01      	cmp	r4, #1
 80092e0:	dc21      	bgt.n	8009326 <_strtod_l+0x51e>
 80092e2:	b10b      	cbz	r3, 80092e8 <_strtod_l+0x4e0>
 80092e4:	4682      	mov	sl, r0
 80092e6:	468b      	mov	fp, r1
 80092e8:	492c      	ldr	r1, [pc, #176]	@ (800939c <_strtod_l+0x594>)
 80092ea:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 80092ee:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 80092f2:	4652      	mov	r2, sl
 80092f4:	465b      	mov	r3, fp
 80092f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80092fa:	f7f7 f97d 	bl	80005f8 <__aeabi_dmul>
 80092fe:	4b28      	ldr	r3, [pc, #160]	@ (80093a0 <_strtod_l+0x598>)
 8009300:	460a      	mov	r2, r1
 8009302:	400b      	ands	r3, r1
 8009304:	4927      	ldr	r1, [pc, #156]	@ (80093a4 <_strtod_l+0x59c>)
 8009306:	428b      	cmp	r3, r1
 8009308:	4682      	mov	sl, r0
 800930a:	d898      	bhi.n	800923e <_strtod_l+0x436>
 800930c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8009310:	428b      	cmp	r3, r1
 8009312:	bf86      	itte	hi
 8009314:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 80093a8 <_strtod_l+0x5a0>
 8009318:	f04f 3aff 	movhi.w	sl, #4294967295	@ 0xffffffff
 800931c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8009320:	2300      	movs	r3, #0
 8009322:	9308      	str	r3, [sp, #32]
 8009324:	e07a      	b.n	800941c <_strtod_l+0x614>
 8009326:	07e2      	lsls	r2, r4, #31
 8009328:	d505      	bpl.n	8009336 <_strtod_l+0x52e>
 800932a:	9b08      	ldr	r3, [sp, #32]
 800932c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009330:	f7f7 f962 	bl	80005f8 <__aeabi_dmul>
 8009334:	2301      	movs	r3, #1
 8009336:	9a08      	ldr	r2, [sp, #32]
 8009338:	3208      	adds	r2, #8
 800933a:	3601      	adds	r6, #1
 800933c:	1064      	asrs	r4, r4, #1
 800933e:	9208      	str	r2, [sp, #32]
 8009340:	e7cd      	b.n	80092de <_strtod_l+0x4d6>
 8009342:	d0ed      	beq.n	8009320 <_strtod_l+0x518>
 8009344:	4264      	negs	r4, r4
 8009346:	f014 020f 	ands.w	r2, r4, #15
 800934a:	d00a      	beq.n	8009362 <_strtod_l+0x55a>
 800934c:	4b12      	ldr	r3, [pc, #72]	@ (8009398 <_strtod_l+0x590>)
 800934e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8009352:	4650      	mov	r0, sl
 8009354:	4659      	mov	r1, fp
 8009356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800935a:	f7f7 fa77 	bl	800084c <__aeabi_ddiv>
 800935e:	4682      	mov	sl, r0
 8009360:	468b      	mov	fp, r1
 8009362:	1124      	asrs	r4, r4, #4
 8009364:	d0dc      	beq.n	8009320 <_strtod_l+0x518>
 8009366:	2c1f      	cmp	r4, #31
 8009368:	dd20      	ble.n	80093ac <_strtod_l+0x5a4>
 800936a:	2400      	movs	r4, #0
 800936c:	46a0      	mov	r8, r4
 800936e:	940a      	str	r4, [sp, #40]	@ 0x28
 8009370:	46a1      	mov	r9, r4
 8009372:	9a05      	ldr	r2, [sp, #20]
 8009374:	2322      	movs	r3, #34	@ 0x22
 8009376:	f04f 0a00 	mov.w	sl, #0
 800937a:	f04f 0b00 	mov.w	fp, #0
 800937e:	6013      	str	r3, [r2, #0]
 8009380:	e768      	b.n	8009254 <_strtod_l+0x44c>
 8009382:	bf00      	nop
 8009384:	0800d47e 	.word	0x0800d47e
 8009388:	0800d31c 	.word	0x0800d31c
 800938c:	0800d476 	.word	0x0800d476
 8009390:	0800d521 	.word	0x0800d521
 8009394:	0800d317 	.word	0x0800d317
 8009398:	0800d688 	.word	0x0800d688
 800939c:	0800d660 	.word	0x0800d660
 80093a0:	7ff00000 	.word	0x7ff00000
 80093a4:	7ca00000 	.word	0x7ca00000
 80093a8:	7fefffff 	.word	0x7fefffff
 80093ac:	f014 0310 	ands.w	r3, r4, #16
 80093b0:	bf18      	it	ne
 80093b2:	236a      	movne	r3, #106	@ 0x6a
 80093b4:	4ea9      	ldr	r6, [pc, #676]	@ (800965c <_strtod_l+0x854>)
 80093b6:	9308      	str	r3, [sp, #32]
 80093b8:	4650      	mov	r0, sl
 80093ba:	4659      	mov	r1, fp
 80093bc:	2300      	movs	r3, #0
 80093be:	07e2      	lsls	r2, r4, #31
 80093c0:	d504      	bpl.n	80093cc <_strtod_l+0x5c4>
 80093c2:	e9d6 2300 	ldrd	r2, r3, [r6]
 80093c6:	f7f7 f917 	bl	80005f8 <__aeabi_dmul>
 80093ca:	2301      	movs	r3, #1
 80093cc:	1064      	asrs	r4, r4, #1
 80093ce:	f106 0608 	add.w	r6, r6, #8
 80093d2:	d1f4      	bne.n	80093be <_strtod_l+0x5b6>
 80093d4:	b10b      	cbz	r3, 80093da <_strtod_l+0x5d2>
 80093d6:	4682      	mov	sl, r0
 80093d8:	468b      	mov	fp, r1
 80093da:	9b08      	ldr	r3, [sp, #32]
 80093dc:	b1b3      	cbz	r3, 800940c <_strtod_l+0x604>
 80093de:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80093e2:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 80093e6:	2b00      	cmp	r3, #0
 80093e8:	4659      	mov	r1, fp
 80093ea:	dd0f      	ble.n	800940c <_strtod_l+0x604>
 80093ec:	2b1f      	cmp	r3, #31
 80093ee:	dd55      	ble.n	800949c <_strtod_l+0x694>
 80093f0:	2b34      	cmp	r3, #52	@ 0x34
 80093f2:	bfde      	ittt	le
 80093f4:	f04f 33ff 	movle.w	r3, #4294967295	@ 0xffffffff
 80093f8:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 80093fc:	4093      	lslle	r3, r2
 80093fe:	f04f 0a00 	mov.w	sl, #0
 8009402:	bfcc      	ite	gt
 8009404:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8009408:	ea03 0b01 	andle.w	fp, r3, r1
 800940c:	2200      	movs	r2, #0
 800940e:	2300      	movs	r3, #0
 8009410:	4650      	mov	r0, sl
 8009412:	4659      	mov	r1, fp
 8009414:	f7f7 fb58 	bl	8000ac8 <__aeabi_dcmpeq>
 8009418:	2800      	cmp	r0, #0
 800941a:	d1a6      	bne.n	800936a <_strtod_l+0x562>
 800941c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800941e:	9300      	str	r3, [sp, #0]
 8009420:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8009422:	9805      	ldr	r0, [sp, #20]
 8009424:	462b      	mov	r3, r5
 8009426:	463a      	mov	r2, r7
 8009428:	f002 fd18 	bl	800be5c <__s2b>
 800942c:	900a      	str	r0, [sp, #40]	@ 0x28
 800942e:	2800      	cmp	r0, #0
 8009430:	f43f af05 	beq.w	800923e <_strtod_l+0x436>
 8009434:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009436:	2a00      	cmp	r2, #0
 8009438:	eba9 0308 	sub.w	r3, r9, r8
 800943c:	bfa8      	it	ge
 800943e:	2300      	movge	r3, #0
 8009440:	9312      	str	r3, [sp, #72]	@ 0x48
 8009442:	2400      	movs	r4, #0
 8009444:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8009448:	9316      	str	r3, [sp, #88]	@ 0x58
 800944a:	46a0      	mov	r8, r4
 800944c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800944e:	9805      	ldr	r0, [sp, #20]
 8009450:	6859      	ldr	r1, [r3, #4]
 8009452:	f002 fc5b 	bl	800bd0c <_Balloc>
 8009456:	4681      	mov	r9, r0
 8009458:	2800      	cmp	r0, #0
 800945a:	f43f aef4 	beq.w	8009246 <_strtod_l+0x43e>
 800945e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009460:	691a      	ldr	r2, [r3, #16]
 8009462:	3202      	adds	r2, #2
 8009464:	f103 010c 	add.w	r1, r3, #12
 8009468:	0092      	lsls	r2, r2, #2
 800946a:	300c      	adds	r0, #12
 800946c:	f001 fa43 	bl	800a8f6 <memcpy>
 8009470:	ec4b ab10 	vmov	d0, sl, fp
 8009474:	9805      	ldr	r0, [sp, #20]
 8009476:	aa1c      	add	r2, sp, #112	@ 0x70
 8009478:	a91b      	add	r1, sp, #108	@ 0x6c
 800947a:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800947e:	f003 f829 	bl	800c4d4 <__d2b>
 8009482:	901a      	str	r0, [sp, #104]	@ 0x68
 8009484:	2800      	cmp	r0, #0
 8009486:	f43f aede 	beq.w	8009246 <_strtod_l+0x43e>
 800948a:	9805      	ldr	r0, [sp, #20]
 800948c:	2101      	movs	r1, #1
 800948e:	f002 fd7b 	bl	800bf88 <__i2b>
 8009492:	4680      	mov	r8, r0
 8009494:	b948      	cbnz	r0, 80094aa <_strtod_l+0x6a2>
 8009496:	f04f 0800 	mov.w	r8, #0
 800949a:	e6d4      	b.n	8009246 <_strtod_l+0x43e>
 800949c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80094a0:	fa02 f303 	lsl.w	r3, r2, r3
 80094a4:	ea03 0a0a 	and.w	sl, r3, sl
 80094a8:	e7b0      	b.n	800940c <_strtod_l+0x604>
 80094aa:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 80094ac:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80094ae:	2d00      	cmp	r5, #0
 80094b0:	bfab      	itete	ge
 80094b2:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 80094b4:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 80094b6:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 80094b8:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 80094ba:	bfac      	ite	ge
 80094bc:	18ef      	addge	r7, r5, r3
 80094be:	1b5e      	sublt	r6, r3, r5
 80094c0:	9b08      	ldr	r3, [sp, #32]
 80094c2:	1aed      	subs	r5, r5, r3
 80094c4:	4415      	add	r5, r2
 80094c6:	4b66      	ldr	r3, [pc, #408]	@ (8009660 <_strtod_l+0x858>)
 80094c8:	3d01      	subs	r5, #1
 80094ca:	429d      	cmp	r5, r3
 80094cc:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 80094d0:	da50      	bge.n	8009574 <_strtod_l+0x76c>
 80094d2:	1b5b      	subs	r3, r3, r5
 80094d4:	2b1f      	cmp	r3, #31
 80094d6:	eba2 0203 	sub.w	r2, r2, r3
 80094da:	f04f 0101 	mov.w	r1, #1
 80094de:	dc3d      	bgt.n	800955c <_strtod_l+0x754>
 80094e0:	fa01 f303 	lsl.w	r3, r1, r3
 80094e4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80094e6:	2300      	movs	r3, #0
 80094e8:	9310      	str	r3, [sp, #64]	@ 0x40
 80094ea:	18bd      	adds	r5, r7, r2
 80094ec:	9b08      	ldr	r3, [sp, #32]
 80094ee:	42af      	cmp	r7, r5
 80094f0:	4416      	add	r6, r2
 80094f2:	441e      	add	r6, r3
 80094f4:	463b      	mov	r3, r7
 80094f6:	bfa8      	it	ge
 80094f8:	462b      	movge	r3, r5
 80094fa:	42b3      	cmp	r3, r6
 80094fc:	bfa8      	it	ge
 80094fe:	4633      	movge	r3, r6
 8009500:	2b00      	cmp	r3, #0
 8009502:	bfc2      	ittt	gt
 8009504:	1aed      	subgt	r5, r5, r3
 8009506:	1af6      	subgt	r6, r6, r3
 8009508:	1aff      	subgt	r7, r7, r3
 800950a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800950c:	2b00      	cmp	r3, #0
 800950e:	dd16      	ble.n	800953e <_strtod_l+0x736>
 8009510:	4641      	mov	r1, r8
 8009512:	9805      	ldr	r0, [sp, #20]
 8009514:	461a      	mov	r2, r3
 8009516:	f002 fdf7 	bl	800c108 <__pow5mult>
 800951a:	4680      	mov	r8, r0
 800951c:	2800      	cmp	r0, #0
 800951e:	d0ba      	beq.n	8009496 <_strtod_l+0x68e>
 8009520:	4601      	mov	r1, r0
 8009522:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8009524:	9805      	ldr	r0, [sp, #20]
 8009526:	f002 fd45 	bl	800bfb4 <__multiply>
 800952a:	900e      	str	r0, [sp, #56]	@ 0x38
 800952c:	2800      	cmp	r0, #0
 800952e:	f43f ae8a 	beq.w	8009246 <_strtod_l+0x43e>
 8009532:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009534:	9805      	ldr	r0, [sp, #20]
 8009536:	f002 fc29 	bl	800bd8c <_Bfree>
 800953a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800953c:	931a      	str	r3, [sp, #104]	@ 0x68
 800953e:	2d00      	cmp	r5, #0
 8009540:	dc1d      	bgt.n	800957e <_strtod_l+0x776>
 8009542:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009544:	2b00      	cmp	r3, #0
 8009546:	dd23      	ble.n	8009590 <_strtod_l+0x788>
 8009548:	4649      	mov	r1, r9
 800954a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800954c:	9805      	ldr	r0, [sp, #20]
 800954e:	f002 fddb 	bl	800c108 <__pow5mult>
 8009552:	4681      	mov	r9, r0
 8009554:	b9e0      	cbnz	r0, 8009590 <_strtod_l+0x788>
 8009556:	f04f 0900 	mov.w	r9, #0
 800955a:	e674      	b.n	8009246 <_strtod_l+0x43e>
 800955c:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8009560:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8009564:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8009568:	35e2      	adds	r5, #226	@ 0xe2
 800956a:	fa01 f305 	lsl.w	r3, r1, r5
 800956e:	9310      	str	r3, [sp, #64]	@ 0x40
 8009570:	9113      	str	r1, [sp, #76]	@ 0x4c
 8009572:	e7ba      	b.n	80094ea <_strtod_l+0x6e2>
 8009574:	2300      	movs	r3, #0
 8009576:	9310      	str	r3, [sp, #64]	@ 0x40
 8009578:	2301      	movs	r3, #1
 800957a:	9313      	str	r3, [sp, #76]	@ 0x4c
 800957c:	e7b5      	b.n	80094ea <_strtod_l+0x6e2>
 800957e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8009580:	9805      	ldr	r0, [sp, #20]
 8009582:	462a      	mov	r2, r5
 8009584:	f002 fe1a 	bl	800c1bc <__lshift>
 8009588:	901a      	str	r0, [sp, #104]	@ 0x68
 800958a:	2800      	cmp	r0, #0
 800958c:	d1d9      	bne.n	8009542 <_strtod_l+0x73a>
 800958e:	e65a      	b.n	8009246 <_strtod_l+0x43e>
 8009590:	2e00      	cmp	r6, #0
 8009592:	dd07      	ble.n	80095a4 <_strtod_l+0x79c>
 8009594:	4649      	mov	r1, r9
 8009596:	9805      	ldr	r0, [sp, #20]
 8009598:	4632      	mov	r2, r6
 800959a:	f002 fe0f 	bl	800c1bc <__lshift>
 800959e:	4681      	mov	r9, r0
 80095a0:	2800      	cmp	r0, #0
 80095a2:	d0d8      	beq.n	8009556 <_strtod_l+0x74e>
 80095a4:	2f00      	cmp	r7, #0
 80095a6:	dd08      	ble.n	80095ba <_strtod_l+0x7b2>
 80095a8:	4641      	mov	r1, r8
 80095aa:	9805      	ldr	r0, [sp, #20]
 80095ac:	463a      	mov	r2, r7
 80095ae:	f002 fe05 	bl	800c1bc <__lshift>
 80095b2:	4680      	mov	r8, r0
 80095b4:	2800      	cmp	r0, #0
 80095b6:	f43f ae46 	beq.w	8009246 <_strtod_l+0x43e>
 80095ba:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80095bc:	9805      	ldr	r0, [sp, #20]
 80095be:	464a      	mov	r2, r9
 80095c0:	f002 fe84 	bl	800c2cc <__mdiff>
 80095c4:	4604      	mov	r4, r0
 80095c6:	2800      	cmp	r0, #0
 80095c8:	f43f ae3d 	beq.w	8009246 <_strtod_l+0x43e>
 80095cc:	68c3      	ldr	r3, [r0, #12]
 80095ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80095d0:	2300      	movs	r3, #0
 80095d2:	60c3      	str	r3, [r0, #12]
 80095d4:	4641      	mov	r1, r8
 80095d6:	f002 fe5d 	bl	800c294 <__mcmp>
 80095da:	2800      	cmp	r0, #0
 80095dc:	da46      	bge.n	800966c <_strtod_l+0x864>
 80095de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80095e0:	ea53 030a 	orrs.w	r3, r3, sl
 80095e4:	d16c      	bne.n	80096c0 <_strtod_l+0x8b8>
 80095e6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80095ea:	2b00      	cmp	r3, #0
 80095ec:	d168      	bne.n	80096c0 <_strtod_l+0x8b8>
 80095ee:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80095f2:	0d1b      	lsrs	r3, r3, #20
 80095f4:	051b      	lsls	r3, r3, #20
 80095f6:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 80095fa:	d961      	bls.n	80096c0 <_strtod_l+0x8b8>
 80095fc:	6963      	ldr	r3, [r4, #20]
 80095fe:	b913      	cbnz	r3, 8009606 <_strtod_l+0x7fe>
 8009600:	6923      	ldr	r3, [r4, #16]
 8009602:	2b01      	cmp	r3, #1
 8009604:	dd5c      	ble.n	80096c0 <_strtod_l+0x8b8>
 8009606:	4621      	mov	r1, r4
 8009608:	2201      	movs	r2, #1
 800960a:	9805      	ldr	r0, [sp, #20]
 800960c:	f002 fdd6 	bl	800c1bc <__lshift>
 8009610:	4641      	mov	r1, r8
 8009612:	4604      	mov	r4, r0
 8009614:	f002 fe3e 	bl	800c294 <__mcmp>
 8009618:	2800      	cmp	r0, #0
 800961a:	dd51      	ble.n	80096c0 <_strtod_l+0x8b8>
 800961c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8009620:	9a08      	ldr	r2, [sp, #32]
 8009622:	0d1b      	lsrs	r3, r3, #20
 8009624:	051b      	lsls	r3, r3, #20
 8009626:	2a00      	cmp	r2, #0
 8009628:	d06b      	beq.n	8009702 <_strtod_l+0x8fa>
 800962a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800962e:	d868      	bhi.n	8009702 <_strtod_l+0x8fa>
 8009630:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8009634:	f67f ae9d 	bls.w	8009372 <_strtod_l+0x56a>
 8009638:	4b0a      	ldr	r3, [pc, #40]	@ (8009664 <_strtod_l+0x85c>)
 800963a:	4650      	mov	r0, sl
 800963c:	4659      	mov	r1, fp
 800963e:	2200      	movs	r2, #0
 8009640:	f7f6 ffda 	bl	80005f8 <__aeabi_dmul>
 8009644:	4b08      	ldr	r3, [pc, #32]	@ (8009668 <_strtod_l+0x860>)
 8009646:	400b      	ands	r3, r1
 8009648:	4682      	mov	sl, r0
 800964a:	468b      	mov	fp, r1
 800964c:	2b00      	cmp	r3, #0
 800964e:	f47f ae05 	bne.w	800925c <_strtod_l+0x454>
 8009652:	9a05      	ldr	r2, [sp, #20]
 8009654:	2322      	movs	r3, #34	@ 0x22
 8009656:	6013      	str	r3, [r2, #0]
 8009658:	e600      	b.n	800925c <_strtod_l+0x454>
 800965a:	bf00      	nop
 800965c:	0800d348 	.word	0x0800d348
 8009660:	fffffc02 	.word	0xfffffc02
 8009664:	39500000 	.word	0x39500000
 8009668:	7ff00000 	.word	0x7ff00000
 800966c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8009670:	d165      	bne.n	800973e <_strtod_l+0x936>
 8009672:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8009674:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8009678:	b35a      	cbz	r2, 80096d2 <_strtod_l+0x8ca>
 800967a:	4a9f      	ldr	r2, [pc, #636]	@ (80098f8 <_strtod_l+0xaf0>)
 800967c:	4293      	cmp	r3, r2
 800967e:	d12b      	bne.n	80096d8 <_strtod_l+0x8d0>
 8009680:	9b08      	ldr	r3, [sp, #32]
 8009682:	4651      	mov	r1, sl
 8009684:	b303      	cbz	r3, 80096c8 <_strtod_l+0x8c0>
 8009686:	4b9d      	ldr	r3, [pc, #628]	@ (80098fc <_strtod_l+0xaf4>)
 8009688:	465a      	mov	r2, fp
 800968a:	4013      	ands	r3, r2
 800968c:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8009690:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8009694:	d81b      	bhi.n	80096ce <_strtod_l+0x8c6>
 8009696:	0d1b      	lsrs	r3, r3, #20
 8009698:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800969c:	fa02 f303 	lsl.w	r3, r2, r3
 80096a0:	4299      	cmp	r1, r3
 80096a2:	d119      	bne.n	80096d8 <_strtod_l+0x8d0>
 80096a4:	4b96      	ldr	r3, [pc, #600]	@ (8009900 <_strtod_l+0xaf8>)
 80096a6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80096a8:	429a      	cmp	r2, r3
 80096aa:	d102      	bne.n	80096b2 <_strtod_l+0x8aa>
 80096ac:	3101      	adds	r1, #1
 80096ae:	f43f adca 	beq.w	8009246 <_strtod_l+0x43e>
 80096b2:	4b92      	ldr	r3, [pc, #584]	@ (80098fc <_strtod_l+0xaf4>)
 80096b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80096b6:	401a      	ands	r2, r3
 80096b8:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 80096bc:	f04f 0a00 	mov.w	sl, #0
 80096c0:	9b08      	ldr	r3, [sp, #32]
 80096c2:	2b00      	cmp	r3, #0
 80096c4:	d1b8      	bne.n	8009638 <_strtod_l+0x830>
 80096c6:	e5c9      	b.n	800925c <_strtod_l+0x454>
 80096c8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80096cc:	e7e8      	b.n	80096a0 <_strtod_l+0x898>
 80096ce:	4613      	mov	r3, r2
 80096d0:	e7e6      	b.n	80096a0 <_strtod_l+0x898>
 80096d2:	ea53 030a 	orrs.w	r3, r3, sl
 80096d6:	d0a1      	beq.n	800961c <_strtod_l+0x814>
 80096d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80096da:	b1db      	cbz	r3, 8009714 <_strtod_l+0x90c>
 80096dc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80096de:	4213      	tst	r3, r2
 80096e0:	d0ee      	beq.n	80096c0 <_strtod_l+0x8b8>
 80096e2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80096e4:	9a08      	ldr	r2, [sp, #32]
 80096e6:	4650      	mov	r0, sl
 80096e8:	4659      	mov	r1, fp
 80096ea:	b1bb      	cbz	r3, 800971c <_strtod_l+0x914>
 80096ec:	f7ff fb6c 	bl	8008dc8 <sulp>
 80096f0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80096f4:	ec53 2b10 	vmov	r2, r3, d0
 80096f8:	f7f6 fdc8 	bl	800028c <__adddf3>
 80096fc:	4682      	mov	sl, r0
 80096fe:	468b      	mov	fp, r1
 8009700:	e7de      	b.n	80096c0 <_strtod_l+0x8b8>
 8009702:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8009706:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800970a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800970e:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 8009712:	e7d5      	b.n	80096c0 <_strtod_l+0x8b8>
 8009714:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8009716:	ea13 0f0a 	tst.w	r3, sl
 800971a:	e7e1      	b.n	80096e0 <_strtod_l+0x8d8>
 800971c:	f7ff fb54 	bl	8008dc8 <sulp>
 8009720:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8009724:	ec53 2b10 	vmov	r2, r3, d0
 8009728:	f7f6 fdae 	bl	8000288 <__aeabi_dsub>
 800972c:	2200      	movs	r2, #0
 800972e:	2300      	movs	r3, #0
 8009730:	4682      	mov	sl, r0
 8009732:	468b      	mov	fp, r1
 8009734:	f7f7 f9c8 	bl	8000ac8 <__aeabi_dcmpeq>
 8009738:	2800      	cmp	r0, #0
 800973a:	d0c1      	beq.n	80096c0 <_strtod_l+0x8b8>
 800973c:	e619      	b.n	8009372 <_strtod_l+0x56a>
 800973e:	4641      	mov	r1, r8
 8009740:	4620      	mov	r0, r4
 8009742:	f002 ff1f 	bl	800c584 <__ratio>
 8009746:	ec57 6b10 	vmov	r6, r7, d0
 800974a:	2200      	movs	r2, #0
 800974c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8009750:	4630      	mov	r0, r6
 8009752:	4639      	mov	r1, r7
 8009754:	f7f7 f9cc 	bl	8000af0 <__aeabi_dcmple>
 8009758:	2800      	cmp	r0, #0
 800975a:	d06f      	beq.n	800983c <_strtod_l+0xa34>
 800975c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800975e:	2b00      	cmp	r3, #0
 8009760:	d17a      	bne.n	8009858 <_strtod_l+0xa50>
 8009762:	f1ba 0f00 	cmp.w	sl, #0
 8009766:	d158      	bne.n	800981a <_strtod_l+0xa12>
 8009768:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800976a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800976e:	2b00      	cmp	r3, #0
 8009770:	d15a      	bne.n	8009828 <_strtod_l+0xa20>
 8009772:	4b64      	ldr	r3, [pc, #400]	@ (8009904 <_strtod_l+0xafc>)
 8009774:	2200      	movs	r2, #0
 8009776:	4630      	mov	r0, r6
 8009778:	4639      	mov	r1, r7
 800977a:	f7f7 f9af 	bl	8000adc <__aeabi_dcmplt>
 800977e:	2800      	cmp	r0, #0
 8009780:	d159      	bne.n	8009836 <_strtod_l+0xa2e>
 8009782:	4630      	mov	r0, r6
 8009784:	4639      	mov	r1, r7
 8009786:	4b60      	ldr	r3, [pc, #384]	@ (8009908 <_strtod_l+0xb00>)
 8009788:	2200      	movs	r2, #0
 800978a:	f7f6 ff35 	bl	80005f8 <__aeabi_dmul>
 800978e:	4606      	mov	r6, r0
 8009790:	460f      	mov	r7, r1
 8009792:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8009796:	9606      	str	r6, [sp, #24]
 8009798:	9307      	str	r3, [sp, #28]
 800979a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800979e:	4d57      	ldr	r5, [pc, #348]	@ (80098fc <_strtod_l+0xaf4>)
 80097a0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80097a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80097a6:	401d      	ands	r5, r3
 80097a8:	4b58      	ldr	r3, [pc, #352]	@ (800990c <_strtod_l+0xb04>)
 80097aa:	429d      	cmp	r5, r3
 80097ac:	f040 80b2 	bne.w	8009914 <_strtod_l+0xb0c>
 80097b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80097b2:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80097b6:	ec4b ab10 	vmov	d0, sl, fp
 80097ba:	f002 fe1b 	bl	800c3f4 <__ulp>
 80097be:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80097c2:	ec51 0b10 	vmov	r0, r1, d0
 80097c6:	f7f6 ff17 	bl	80005f8 <__aeabi_dmul>
 80097ca:	4652      	mov	r2, sl
 80097cc:	465b      	mov	r3, fp
 80097ce:	f7f6 fd5d 	bl	800028c <__adddf3>
 80097d2:	460b      	mov	r3, r1
 80097d4:	4949      	ldr	r1, [pc, #292]	@ (80098fc <_strtod_l+0xaf4>)
 80097d6:	4a4e      	ldr	r2, [pc, #312]	@ (8009910 <_strtod_l+0xb08>)
 80097d8:	4019      	ands	r1, r3
 80097da:	4291      	cmp	r1, r2
 80097dc:	4682      	mov	sl, r0
 80097de:	d942      	bls.n	8009866 <_strtod_l+0xa5e>
 80097e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80097e2:	4b47      	ldr	r3, [pc, #284]	@ (8009900 <_strtod_l+0xaf8>)
 80097e4:	429a      	cmp	r2, r3
 80097e6:	d103      	bne.n	80097f0 <_strtod_l+0x9e8>
 80097e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80097ea:	3301      	adds	r3, #1
 80097ec:	f43f ad2b 	beq.w	8009246 <_strtod_l+0x43e>
 80097f0:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 8009900 <_strtod_l+0xaf8>
 80097f4:	f04f 3aff 	mov.w	sl, #4294967295	@ 0xffffffff
 80097f8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80097fa:	9805      	ldr	r0, [sp, #20]
 80097fc:	f002 fac6 	bl	800bd8c <_Bfree>
 8009800:	9805      	ldr	r0, [sp, #20]
 8009802:	4649      	mov	r1, r9
 8009804:	f002 fac2 	bl	800bd8c <_Bfree>
 8009808:	9805      	ldr	r0, [sp, #20]
 800980a:	4641      	mov	r1, r8
 800980c:	f002 fabe 	bl	800bd8c <_Bfree>
 8009810:	9805      	ldr	r0, [sp, #20]
 8009812:	4621      	mov	r1, r4
 8009814:	f002 faba 	bl	800bd8c <_Bfree>
 8009818:	e618      	b.n	800944c <_strtod_l+0x644>
 800981a:	f1ba 0f01 	cmp.w	sl, #1
 800981e:	d103      	bne.n	8009828 <_strtod_l+0xa20>
 8009820:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009822:	2b00      	cmp	r3, #0
 8009824:	f43f ada5 	beq.w	8009372 <_strtod_l+0x56a>
 8009828:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 80098d8 <_strtod_l+0xad0>
 800982c:	4f35      	ldr	r7, [pc, #212]	@ (8009904 <_strtod_l+0xafc>)
 800982e:	ed8d 7b06 	vstr	d7, [sp, #24]
 8009832:	2600      	movs	r6, #0
 8009834:	e7b1      	b.n	800979a <_strtod_l+0x992>
 8009836:	4f34      	ldr	r7, [pc, #208]	@ (8009908 <_strtod_l+0xb00>)
 8009838:	2600      	movs	r6, #0
 800983a:	e7aa      	b.n	8009792 <_strtod_l+0x98a>
 800983c:	4b32      	ldr	r3, [pc, #200]	@ (8009908 <_strtod_l+0xb00>)
 800983e:	4630      	mov	r0, r6
 8009840:	4639      	mov	r1, r7
 8009842:	2200      	movs	r2, #0
 8009844:	f7f6 fed8 	bl	80005f8 <__aeabi_dmul>
 8009848:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800984a:	4606      	mov	r6, r0
 800984c:	460f      	mov	r7, r1
 800984e:	2b00      	cmp	r3, #0
 8009850:	d09f      	beq.n	8009792 <_strtod_l+0x98a>
 8009852:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8009856:	e7a0      	b.n	800979a <_strtod_l+0x992>
 8009858:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 80098e0 <_strtod_l+0xad8>
 800985c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8009860:	ec57 6b17 	vmov	r6, r7, d7
 8009864:	e799      	b.n	800979a <_strtod_l+0x992>
 8009866:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800986a:	9b08      	ldr	r3, [sp, #32]
 800986c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8009870:	2b00      	cmp	r3, #0
 8009872:	d1c1      	bne.n	80097f8 <_strtod_l+0x9f0>
 8009874:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8009878:	0d1b      	lsrs	r3, r3, #20
 800987a:	051b      	lsls	r3, r3, #20
 800987c:	429d      	cmp	r5, r3
 800987e:	d1bb      	bne.n	80097f8 <_strtod_l+0x9f0>
 8009880:	4630      	mov	r0, r6
 8009882:	4639      	mov	r1, r7
 8009884:	f7f7 fa18 	bl	8000cb8 <__aeabi_d2lz>
 8009888:	f7f6 fe88 	bl	800059c <__aeabi_l2d>
 800988c:	4602      	mov	r2, r0
 800988e:	460b      	mov	r3, r1
 8009890:	4630      	mov	r0, r6
 8009892:	4639      	mov	r1, r7
 8009894:	f7f6 fcf8 	bl	8000288 <__aeabi_dsub>
 8009898:	460b      	mov	r3, r1
 800989a:	4602      	mov	r2, r0
 800989c:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80098a0:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80098a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80098a6:	ea46 060a 	orr.w	r6, r6, sl
 80098aa:	431e      	orrs	r6, r3
 80098ac:	d06f      	beq.n	800998e <_strtod_l+0xb86>
 80098ae:	a30e      	add	r3, pc, #56	@ (adr r3, 80098e8 <_strtod_l+0xae0>)
 80098b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098b4:	f7f7 f912 	bl	8000adc <__aeabi_dcmplt>
 80098b8:	2800      	cmp	r0, #0
 80098ba:	f47f accf 	bne.w	800925c <_strtod_l+0x454>
 80098be:	a30c      	add	r3, pc, #48	@ (adr r3, 80098f0 <_strtod_l+0xae8>)
 80098c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098c4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80098c8:	f7f7 f926 	bl	8000b18 <__aeabi_dcmpgt>
 80098cc:	2800      	cmp	r0, #0
 80098ce:	d093      	beq.n	80097f8 <_strtod_l+0x9f0>
 80098d0:	e4c4      	b.n	800925c <_strtod_l+0x454>
 80098d2:	bf00      	nop
 80098d4:	f3af 8000 	nop.w
 80098d8:	00000000 	.word	0x00000000
 80098dc:	bff00000 	.word	0xbff00000
 80098e0:	00000000 	.word	0x00000000
 80098e4:	3ff00000 	.word	0x3ff00000
 80098e8:	94a03595 	.word	0x94a03595
 80098ec:	3fdfffff 	.word	0x3fdfffff
 80098f0:	35afe535 	.word	0x35afe535
 80098f4:	3fe00000 	.word	0x3fe00000
 80098f8:	000fffff 	.word	0x000fffff
 80098fc:	7ff00000 	.word	0x7ff00000
 8009900:	7fefffff 	.word	0x7fefffff
 8009904:	3ff00000 	.word	0x3ff00000
 8009908:	3fe00000 	.word	0x3fe00000
 800990c:	7fe00000 	.word	0x7fe00000
 8009910:	7c9fffff 	.word	0x7c9fffff
 8009914:	9b08      	ldr	r3, [sp, #32]
 8009916:	b323      	cbz	r3, 8009962 <_strtod_l+0xb5a>
 8009918:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800991c:	d821      	bhi.n	8009962 <_strtod_l+0xb5a>
 800991e:	a328      	add	r3, pc, #160	@ (adr r3, 80099c0 <_strtod_l+0xbb8>)
 8009920:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009924:	4630      	mov	r0, r6
 8009926:	4639      	mov	r1, r7
 8009928:	f7f7 f8e2 	bl	8000af0 <__aeabi_dcmple>
 800992c:	b1a0      	cbz	r0, 8009958 <_strtod_l+0xb50>
 800992e:	4639      	mov	r1, r7
 8009930:	4630      	mov	r0, r6
 8009932:	f7f7 f939 	bl	8000ba8 <__aeabi_d2uiz>
 8009936:	2801      	cmp	r0, #1
 8009938:	bf38      	it	cc
 800993a:	2001      	movcc	r0, #1
 800993c:	f7f6 fde2 	bl	8000504 <__aeabi_ui2d>
 8009940:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009942:	4606      	mov	r6, r0
 8009944:	460f      	mov	r7, r1
 8009946:	b9fb      	cbnz	r3, 8009988 <_strtod_l+0xb80>
 8009948:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800994c:	9014      	str	r0, [sp, #80]	@ 0x50
 800994e:	9315      	str	r3, [sp, #84]	@ 0x54
 8009950:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8009954:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8009958:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800995a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800995e:	1b5b      	subs	r3, r3, r5
 8009960:	9311      	str	r3, [sp, #68]	@ 0x44
 8009962:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8009966:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800996a:	f002 fd43 	bl	800c3f4 <__ulp>
 800996e:	4650      	mov	r0, sl
 8009970:	ec53 2b10 	vmov	r2, r3, d0
 8009974:	4659      	mov	r1, fp
 8009976:	f7f6 fe3f 	bl	80005f8 <__aeabi_dmul>
 800997a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800997e:	f7f6 fc85 	bl	800028c <__adddf3>
 8009982:	4682      	mov	sl, r0
 8009984:	468b      	mov	fp, r1
 8009986:	e770      	b.n	800986a <_strtod_l+0xa62>
 8009988:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800998c:	e7e0      	b.n	8009950 <_strtod_l+0xb48>
 800998e:	a30e      	add	r3, pc, #56	@ (adr r3, 80099c8 <_strtod_l+0xbc0>)
 8009990:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009994:	f7f7 f8a2 	bl	8000adc <__aeabi_dcmplt>
 8009998:	e798      	b.n	80098cc <_strtod_l+0xac4>
 800999a:	2300      	movs	r3, #0
 800999c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800999e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80099a0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80099a2:	6013      	str	r3, [r2, #0]
 80099a4:	f7ff ba6d 	b.w	8008e82 <_strtod_l+0x7a>
 80099a8:	2a65      	cmp	r2, #101	@ 0x65
 80099aa:	f43f ab66 	beq.w	800907a <_strtod_l+0x272>
 80099ae:	2a45      	cmp	r2, #69	@ 0x45
 80099b0:	f43f ab63 	beq.w	800907a <_strtod_l+0x272>
 80099b4:	2301      	movs	r3, #1
 80099b6:	f7ff bb9e 	b.w	80090f6 <_strtod_l+0x2ee>
 80099ba:	bf00      	nop
 80099bc:	f3af 8000 	nop.w
 80099c0:	ffc00000 	.word	0xffc00000
 80099c4:	41dfffff 	.word	0x41dfffff
 80099c8:	94a03595 	.word	0x94a03595
 80099cc:	3fcfffff 	.word	0x3fcfffff

080099d0 <strtof>:
 80099d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099d4:	f8df 80bc 	ldr.w	r8, [pc, #188]	@ 8009a94 <strtof+0xc4>
 80099d8:	4b29      	ldr	r3, [pc, #164]	@ (8009a80 <strtof+0xb0>)
 80099da:	460a      	mov	r2, r1
 80099dc:	ed2d 8b02 	vpush	{d8}
 80099e0:	4601      	mov	r1, r0
 80099e2:	f8d8 0000 	ldr.w	r0, [r8]
 80099e6:	f7ff fa0f 	bl	8008e08 <_strtod_l>
 80099ea:	ec55 4b10 	vmov	r4, r5, d0
 80099ee:	4622      	mov	r2, r4
 80099f0:	462b      	mov	r3, r5
 80099f2:	4620      	mov	r0, r4
 80099f4:	4629      	mov	r1, r5
 80099f6:	f7f7 f899 	bl	8000b2c <__aeabi_dcmpun>
 80099fa:	b190      	cbz	r0, 8009a22 <strtof+0x52>
 80099fc:	2d00      	cmp	r5, #0
 80099fe:	4821      	ldr	r0, [pc, #132]	@ (8009a84 <strtof+0xb4>)
 8009a00:	da09      	bge.n	8009a16 <strtof+0x46>
 8009a02:	f000 ff91 	bl	800a928 <nanf>
 8009a06:	eeb1 8a40 	vneg.f32	s16, s0
 8009a0a:	eeb0 0a48 	vmov.f32	s0, s16
 8009a0e:	ecbd 8b02 	vpop	{d8}
 8009a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009a16:	ecbd 8b02 	vpop	{d8}
 8009a1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009a1e:	f000 bf83 	b.w	800a928 <nanf>
 8009a22:	4620      	mov	r0, r4
 8009a24:	4629      	mov	r1, r5
 8009a26:	f7f7 f8df 	bl	8000be8 <__aeabi_d2f>
 8009a2a:	ee08 0a10 	vmov	s16, r0
 8009a2e:	eddf 7a16 	vldr	s15, [pc, #88]	@ 8009a88 <strtof+0xb8>
 8009a32:	eeb0 7ac8 	vabs.f32	s14, s16
 8009a36:	eeb4 7a67 	vcmp.f32	s14, s15
 8009a3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a3e:	dd11      	ble.n	8009a64 <strtof+0x94>
 8009a40:	f025 4700 	bic.w	r7, r5, #2147483648	@ 0x80000000
 8009a44:	4b11      	ldr	r3, [pc, #68]	@ (8009a8c <strtof+0xbc>)
 8009a46:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8009a4a:	4620      	mov	r0, r4
 8009a4c:	4639      	mov	r1, r7
 8009a4e:	f7f7 f86d 	bl	8000b2c <__aeabi_dcmpun>
 8009a52:	b980      	cbnz	r0, 8009a76 <strtof+0xa6>
 8009a54:	4b0d      	ldr	r3, [pc, #52]	@ (8009a8c <strtof+0xbc>)
 8009a56:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8009a5a:	4620      	mov	r0, r4
 8009a5c:	4639      	mov	r1, r7
 8009a5e:	f7f7 f847 	bl	8000af0 <__aeabi_dcmple>
 8009a62:	b940      	cbnz	r0, 8009a76 <strtof+0xa6>
 8009a64:	ee18 3a10 	vmov	r3, s16
 8009a68:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8009a6c:	d1cd      	bne.n	8009a0a <strtof+0x3a>
 8009a6e:	4b08      	ldr	r3, [pc, #32]	@ (8009a90 <strtof+0xc0>)
 8009a70:	402b      	ands	r3, r5
 8009a72:	2b00      	cmp	r3, #0
 8009a74:	d0c9      	beq.n	8009a0a <strtof+0x3a>
 8009a76:	f8d8 3000 	ldr.w	r3, [r8]
 8009a7a:	2222      	movs	r2, #34	@ 0x22
 8009a7c:	601a      	str	r2, [r3, #0]
 8009a7e:	e7c4      	b.n	8009a0a <strtof+0x3a>
 8009a80:	200000b8 	.word	0x200000b8
 8009a84:	0800d317 	.word	0x0800d317
 8009a88:	7f7fffff 	.word	0x7f7fffff
 8009a8c:	7fefffff 	.word	0x7fefffff
 8009a90:	7ff00000 	.word	0x7ff00000
 8009a94:	20000224 	.word	0x20000224

08009a98 <_strtol_l.constprop.0>:
 8009a98:	2b24      	cmp	r3, #36	@ 0x24
 8009a9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a9e:	4686      	mov	lr, r0
 8009aa0:	4690      	mov	r8, r2
 8009aa2:	d801      	bhi.n	8009aa8 <_strtol_l.constprop.0+0x10>
 8009aa4:	2b01      	cmp	r3, #1
 8009aa6:	d106      	bne.n	8009ab6 <_strtol_l.constprop.0+0x1e>
 8009aa8:	f000 fef0 	bl	800a88c <__errno>
 8009aac:	2316      	movs	r3, #22
 8009aae:	6003      	str	r3, [r0, #0]
 8009ab0:	2000      	movs	r0, #0
 8009ab2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ab6:	4834      	ldr	r0, [pc, #208]	@ (8009b88 <_strtol_l.constprop.0+0xf0>)
 8009ab8:	460d      	mov	r5, r1
 8009aba:	462a      	mov	r2, r5
 8009abc:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009ac0:	5d06      	ldrb	r6, [r0, r4]
 8009ac2:	f016 0608 	ands.w	r6, r6, #8
 8009ac6:	d1f8      	bne.n	8009aba <_strtol_l.constprop.0+0x22>
 8009ac8:	2c2d      	cmp	r4, #45	@ 0x2d
 8009aca:	d12d      	bne.n	8009b28 <_strtol_l.constprop.0+0x90>
 8009acc:	782c      	ldrb	r4, [r5, #0]
 8009ace:	2601      	movs	r6, #1
 8009ad0:	1c95      	adds	r5, r2, #2
 8009ad2:	f033 0210 	bics.w	r2, r3, #16
 8009ad6:	d109      	bne.n	8009aec <_strtol_l.constprop.0+0x54>
 8009ad8:	2c30      	cmp	r4, #48	@ 0x30
 8009ada:	d12a      	bne.n	8009b32 <_strtol_l.constprop.0+0x9a>
 8009adc:	782a      	ldrb	r2, [r5, #0]
 8009ade:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8009ae2:	2a58      	cmp	r2, #88	@ 0x58
 8009ae4:	d125      	bne.n	8009b32 <_strtol_l.constprop.0+0x9a>
 8009ae6:	786c      	ldrb	r4, [r5, #1]
 8009ae8:	2310      	movs	r3, #16
 8009aea:	3502      	adds	r5, #2
 8009aec:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 8009af0:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
 8009af4:	2200      	movs	r2, #0
 8009af6:	fbbc f9f3 	udiv	r9, ip, r3
 8009afa:	4610      	mov	r0, r2
 8009afc:	fb03 ca19 	mls	sl, r3, r9, ip
 8009b00:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8009b04:	2f09      	cmp	r7, #9
 8009b06:	d81b      	bhi.n	8009b40 <_strtol_l.constprop.0+0xa8>
 8009b08:	463c      	mov	r4, r7
 8009b0a:	42a3      	cmp	r3, r4
 8009b0c:	dd27      	ble.n	8009b5e <_strtol_l.constprop.0+0xc6>
 8009b0e:	1c57      	adds	r7, r2, #1
 8009b10:	d007      	beq.n	8009b22 <_strtol_l.constprop.0+0x8a>
 8009b12:	4581      	cmp	r9, r0
 8009b14:	d320      	bcc.n	8009b58 <_strtol_l.constprop.0+0xc0>
 8009b16:	d101      	bne.n	8009b1c <_strtol_l.constprop.0+0x84>
 8009b18:	45a2      	cmp	sl, r4
 8009b1a:	db1d      	blt.n	8009b58 <_strtol_l.constprop.0+0xc0>
 8009b1c:	fb00 4003 	mla	r0, r0, r3, r4
 8009b20:	2201      	movs	r2, #1
 8009b22:	f815 4b01 	ldrb.w	r4, [r5], #1
 8009b26:	e7eb      	b.n	8009b00 <_strtol_l.constprop.0+0x68>
 8009b28:	2c2b      	cmp	r4, #43	@ 0x2b
 8009b2a:	bf04      	itt	eq
 8009b2c:	782c      	ldrbeq	r4, [r5, #0]
 8009b2e:	1c95      	addeq	r5, r2, #2
 8009b30:	e7cf      	b.n	8009ad2 <_strtol_l.constprop.0+0x3a>
 8009b32:	2b00      	cmp	r3, #0
 8009b34:	d1da      	bne.n	8009aec <_strtol_l.constprop.0+0x54>
 8009b36:	2c30      	cmp	r4, #48	@ 0x30
 8009b38:	bf0c      	ite	eq
 8009b3a:	2308      	moveq	r3, #8
 8009b3c:	230a      	movne	r3, #10
 8009b3e:	e7d5      	b.n	8009aec <_strtol_l.constprop.0+0x54>
 8009b40:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8009b44:	2f19      	cmp	r7, #25
 8009b46:	d801      	bhi.n	8009b4c <_strtol_l.constprop.0+0xb4>
 8009b48:	3c37      	subs	r4, #55	@ 0x37
 8009b4a:	e7de      	b.n	8009b0a <_strtol_l.constprop.0+0x72>
 8009b4c:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8009b50:	2f19      	cmp	r7, #25
 8009b52:	d804      	bhi.n	8009b5e <_strtol_l.constprop.0+0xc6>
 8009b54:	3c57      	subs	r4, #87	@ 0x57
 8009b56:	e7d8      	b.n	8009b0a <_strtol_l.constprop.0+0x72>
 8009b58:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8009b5c:	e7e1      	b.n	8009b22 <_strtol_l.constprop.0+0x8a>
 8009b5e:	1c53      	adds	r3, r2, #1
 8009b60:	d108      	bne.n	8009b74 <_strtol_l.constprop.0+0xdc>
 8009b62:	2322      	movs	r3, #34	@ 0x22
 8009b64:	f8ce 3000 	str.w	r3, [lr]
 8009b68:	4660      	mov	r0, ip
 8009b6a:	f1b8 0f00 	cmp.w	r8, #0
 8009b6e:	d0a0      	beq.n	8009ab2 <_strtol_l.constprop.0+0x1a>
 8009b70:	1e69      	subs	r1, r5, #1
 8009b72:	e006      	b.n	8009b82 <_strtol_l.constprop.0+0xea>
 8009b74:	b106      	cbz	r6, 8009b78 <_strtol_l.constprop.0+0xe0>
 8009b76:	4240      	negs	r0, r0
 8009b78:	f1b8 0f00 	cmp.w	r8, #0
 8009b7c:	d099      	beq.n	8009ab2 <_strtol_l.constprop.0+0x1a>
 8009b7e:	2a00      	cmp	r2, #0
 8009b80:	d1f6      	bne.n	8009b70 <_strtol_l.constprop.0+0xd8>
 8009b82:	f8c8 1000 	str.w	r1, [r8]
 8009b86:	e794      	b.n	8009ab2 <_strtol_l.constprop.0+0x1a>
 8009b88:	0800d371 	.word	0x0800d371

08009b8c <strtol>:
 8009b8c:	4613      	mov	r3, r2
 8009b8e:	460a      	mov	r2, r1
 8009b90:	4601      	mov	r1, r0
 8009b92:	4802      	ldr	r0, [pc, #8]	@ (8009b9c <strtol+0x10>)
 8009b94:	6800      	ldr	r0, [r0, #0]
 8009b96:	f7ff bf7f 	b.w	8009a98 <_strtol_l.constprop.0>
 8009b9a:	bf00      	nop
 8009b9c:	20000224 	.word	0x20000224

08009ba0 <__cvt>:
 8009ba0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009ba4:	ec57 6b10 	vmov	r6, r7, d0
 8009ba8:	2f00      	cmp	r7, #0
 8009baa:	460c      	mov	r4, r1
 8009bac:	4619      	mov	r1, r3
 8009bae:	463b      	mov	r3, r7
 8009bb0:	bfbb      	ittet	lt
 8009bb2:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8009bb6:	461f      	movlt	r7, r3
 8009bb8:	2300      	movge	r3, #0
 8009bba:	232d      	movlt	r3, #45	@ 0x2d
 8009bbc:	700b      	strb	r3, [r1, #0]
 8009bbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8009bc0:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8009bc4:	4691      	mov	r9, r2
 8009bc6:	f023 0820 	bic.w	r8, r3, #32
 8009bca:	bfbc      	itt	lt
 8009bcc:	4632      	movlt	r2, r6
 8009bce:	4616      	movlt	r6, r2
 8009bd0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8009bd4:	d005      	beq.n	8009be2 <__cvt+0x42>
 8009bd6:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8009bda:	d100      	bne.n	8009bde <__cvt+0x3e>
 8009bdc:	3401      	adds	r4, #1
 8009bde:	2102      	movs	r1, #2
 8009be0:	e000      	b.n	8009be4 <__cvt+0x44>
 8009be2:	2103      	movs	r1, #3
 8009be4:	ab03      	add	r3, sp, #12
 8009be6:	9301      	str	r3, [sp, #4]
 8009be8:	ab02      	add	r3, sp, #8
 8009bea:	9300      	str	r3, [sp, #0]
 8009bec:	ec47 6b10 	vmov	d0, r6, r7
 8009bf0:	4653      	mov	r3, sl
 8009bf2:	4622      	mov	r2, r4
 8009bf4:	f000 ff30 	bl	800aa58 <_dtoa_r>
 8009bf8:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8009bfc:	4605      	mov	r5, r0
 8009bfe:	d119      	bne.n	8009c34 <__cvt+0x94>
 8009c00:	f019 0f01 	tst.w	r9, #1
 8009c04:	d00e      	beq.n	8009c24 <__cvt+0x84>
 8009c06:	eb00 0904 	add.w	r9, r0, r4
 8009c0a:	2200      	movs	r2, #0
 8009c0c:	2300      	movs	r3, #0
 8009c0e:	4630      	mov	r0, r6
 8009c10:	4639      	mov	r1, r7
 8009c12:	f7f6 ff59 	bl	8000ac8 <__aeabi_dcmpeq>
 8009c16:	b108      	cbz	r0, 8009c1c <__cvt+0x7c>
 8009c18:	f8cd 900c 	str.w	r9, [sp, #12]
 8009c1c:	2230      	movs	r2, #48	@ 0x30
 8009c1e:	9b03      	ldr	r3, [sp, #12]
 8009c20:	454b      	cmp	r3, r9
 8009c22:	d31e      	bcc.n	8009c62 <__cvt+0xc2>
 8009c24:	9b03      	ldr	r3, [sp, #12]
 8009c26:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009c28:	1b5b      	subs	r3, r3, r5
 8009c2a:	4628      	mov	r0, r5
 8009c2c:	6013      	str	r3, [r2, #0]
 8009c2e:	b004      	add	sp, #16
 8009c30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c34:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8009c38:	eb00 0904 	add.w	r9, r0, r4
 8009c3c:	d1e5      	bne.n	8009c0a <__cvt+0x6a>
 8009c3e:	7803      	ldrb	r3, [r0, #0]
 8009c40:	2b30      	cmp	r3, #48	@ 0x30
 8009c42:	d10a      	bne.n	8009c5a <__cvt+0xba>
 8009c44:	2200      	movs	r2, #0
 8009c46:	2300      	movs	r3, #0
 8009c48:	4630      	mov	r0, r6
 8009c4a:	4639      	mov	r1, r7
 8009c4c:	f7f6 ff3c 	bl	8000ac8 <__aeabi_dcmpeq>
 8009c50:	b918      	cbnz	r0, 8009c5a <__cvt+0xba>
 8009c52:	f1c4 0401 	rsb	r4, r4, #1
 8009c56:	f8ca 4000 	str.w	r4, [sl]
 8009c5a:	f8da 3000 	ldr.w	r3, [sl]
 8009c5e:	4499      	add	r9, r3
 8009c60:	e7d3      	b.n	8009c0a <__cvt+0x6a>
 8009c62:	1c59      	adds	r1, r3, #1
 8009c64:	9103      	str	r1, [sp, #12]
 8009c66:	701a      	strb	r2, [r3, #0]
 8009c68:	e7d9      	b.n	8009c1e <__cvt+0x7e>

08009c6a <__exponent>:
 8009c6a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009c6c:	2900      	cmp	r1, #0
 8009c6e:	bfba      	itte	lt
 8009c70:	4249      	neglt	r1, r1
 8009c72:	232d      	movlt	r3, #45	@ 0x2d
 8009c74:	232b      	movge	r3, #43	@ 0x2b
 8009c76:	2909      	cmp	r1, #9
 8009c78:	7002      	strb	r2, [r0, #0]
 8009c7a:	7043      	strb	r3, [r0, #1]
 8009c7c:	dd29      	ble.n	8009cd2 <__exponent+0x68>
 8009c7e:	f10d 0307 	add.w	r3, sp, #7
 8009c82:	461d      	mov	r5, r3
 8009c84:	270a      	movs	r7, #10
 8009c86:	461a      	mov	r2, r3
 8009c88:	fbb1 f6f7 	udiv	r6, r1, r7
 8009c8c:	fb07 1416 	mls	r4, r7, r6, r1
 8009c90:	3430      	adds	r4, #48	@ 0x30
 8009c92:	f802 4c01 	strb.w	r4, [r2, #-1]
 8009c96:	460c      	mov	r4, r1
 8009c98:	2c63      	cmp	r4, #99	@ 0x63
 8009c9a:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8009c9e:	4631      	mov	r1, r6
 8009ca0:	dcf1      	bgt.n	8009c86 <__exponent+0x1c>
 8009ca2:	3130      	adds	r1, #48	@ 0x30
 8009ca4:	1e94      	subs	r4, r2, #2
 8009ca6:	f803 1c01 	strb.w	r1, [r3, #-1]
 8009caa:	1c41      	adds	r1, r0, #1
 8009cac:	4623      	mov	r3, r4
 8009cae:	42ab      	cmp	r3, r5
 8009cb0:	d30a      	bcc.n	8009cc8 <__exponent+0x5e>
 8009cb2:	f10d 0309 	add.w	r3, sp, #9
 8009cb6:	1a9b      	subs	r3, r3, r2
 8009cb8:	42ac      	cmp	r4, r5
 8009cba:	bf88      	it	hi
 8009cbc:	2300      	movhi	r3, #0
 8009cbe:	3302      	adds	r3, #2
 8009cc0:	4403      	add	r3, r0
 8009cc2:	1a18      	subs	r0, r3, r0
 8009cc4:	b003      	add	sp, #12
 8009cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009cc8:	f813 6b01 	ldrb.w	r6, [r3], #1
 8009ccc:	f801 6f01 	strb.w	r6, [r1, #1]!
 8009cd0:	e7ed      	b.n	8009cae <__exponent+0x44>
 8009cd2:	2330      	movs	r3, #48	@ 0x30
 8009cd4:	3130      	adds	r1, #48	@ 0x30
 8009cd6:	7083      	strb	r3, [r0, #2]
 8009cd8:	70c1      	strb	r1, [r0, #3]
 8009cda:	1d03      	adds	r3, r0, #4
 8009cdc:	e7f1      	b.n	8009cc2 <__exponent+0x58>
	...

08009ce0 <_printf_float>:
 8009ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ce4:	b08d      	sub	sp, #52	@ 0x34
 8009ce6:	460c      	mov	r4, r1
 8009ce8:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8009cec:	4616      	mov	r6, r2
 8009cee:	461f      	mov	r7, r3
 8009cf0:	4605      	mov	r5, r0
 8009cf2:	f000 fd71 	bl	800a7d8 <_localeconv_r>
 8009cf6:	6803      	ldr	r3, [r0, #0]
 8009cf8:	9304      	str	r3, [sp, #16]
 8009cfa:	4618      	mov	r0, r3
 8009cfc:	f7f6 fab8 	bl	8000270 <strlen>
 8009d00:	2300      	movs	r3, #0
 8009d02:	930a      	str	r3, [sp, #40]	@ 0x28
 8009d04:	f8d8 3000 	ldr.w	r3, [r8]
 8009d08:	9005      	str	r0, [sp, #20]
 8009d0a:	3307      	adds	r3, #7
 8009d0c:	f023 0307 	bic.w	r3, r3, #7
 8009d10:	f103 0208 	add.w	r2, r3, #8
 8009d14:	f894 a018 	ldrb.w	sl, [r4, #24]
 8009d18:	f8d4 b000 	ldr.w	fp, [r4]
 8009d1c:	f8c8 2000 	str.w	r2, [r8]
 8009d20:	e9d3 8900 	ldrd	r8, r9, [r3]
 8009d24:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8009d28:	9307      	str	r3, [sp, #28]
 8009d2a:	f8cd 8018 	str.w	r8, [sp, #24]
 8009d2e:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8009d32:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009d36:	4b9c      	ldr	r3, [pc, #624]	@ (8009fa8 <_printf_float+0x2c8>)
 8009d38:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8009d3c:	f7f6 fef6 	bl	8000b2c <__aeabi_dcmpun>
 8009d40:	bb70      	cbnz	r0, 8009da0 <_printf_float+0xc0>
 8009d42:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009d46:	4b98      	ldr	r3, [pc, #608]	@ (8009fa8 <_printf_float+0x2c8>)
 8009d48:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8009d4c:	f7f6 fed0 	bl	8000af0 <__aeabi_dcmple>
 8009d50:	bb30      	cbnz	r0, 8009da0 <_printf_float+0xc0>
 8009d52:	2200      	movs	r2, #0
 8009d54:	2300      	movs	r3, #0
 8009d56:	4640      	mov	r0, r8
 8009d58:	4649      	mov	r1, r9
 8009d5a:	f7f6 febf 	bl	8000adc <__aeabi_dcmplt>
 8009d5e:	b110      	cbz	r0, 8009d66 <_printf_float+0x86>
 8009d60:	232d      	movs	r3, #45	@ 0x2d
 8009d62:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009d66:	4a91      	ldr	r2, [pc, #580]	@ (8009fac <_printf_float+0x2cc>)
 8009d68:	4b91      	ldr	r3, [pc, #580]	@ (8009fb0 <_printf_float+0x2d0>)
 8009d6a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8009d6e:	bf94      	ite	ls
 8009d70:	4690      	movls	r8, r2
 8009d72:	4698      	movhi	r8, r3
 8009d74:	2303      	movs	r3, #3
 8009d76:	6123      	str	r3, [r4, #16]
 8009d78:	f02b 0304 	bic.w	r3, fp, #4
 8009d7c:	6023      	str	r3, [r4, #0]
 8009d7e:	f04f 0900 	mov.w	r9, #0
 8009d82:	9700      	str	r7, [sp, #0]
 8009d84:	4633      	mov	r3, r6
 8009d86:	aa0b      	add	r2, sp, #44	@ 0x2c
 8009d88:	4621      	mov	r1, r4
 8009d8a:	4628      	mov	r0, r5
 8009d8c:	f000 f9d2 	bl	800a134 <_printf_common>
 8009d90:	3001      	adds	r0, #1
 8009d92:	f040 808d 	bne.w	8009eb0 <_printf_float+0x1d0>
 8009d96:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8009d9a:	b00d      	add	sp, #52	@ 0x34
 8009d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009da0:	4642      	mov	r2, r8
 8009da2:	464b      	mov	r3, r9
 8009da4:	4640      	mov	r0, r8
 8009da6:	4649      	mov	r1, r9
 8009da8:	f7f6 fec0 	bl	8000b2c <__aeabi_dcmpun>
 8009dac:	b140      	cbz	r0, 8009dc0 <_printf_float+0xe0>
 8009dae:	464b      	mov	r3, r9
 8009db0:	2b00      	cmp	r3, #0
 8009db2:	bfbc      	itt	lt
 8009db4:	232d      	movlt	r3, #45	@ 0x2d
 8009db6:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8009dba:	4a7e      	ldr	r2, [pc, #504]	@ (8009fb4 <_printf_float+0x2d4>)
 8009dbc:	4b7e      	ldr	r3, [pc, #504]	@ (8009fb8 <_printf_float+0x2d8>)
 8009dbe:	e7d4      	b.n	8009d6a <_printf_float+0x8a>
 8009dc0:	6863      	ldr	r3, [r4, #4]
 8009dc2:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8009dc6:	9206      	str	r2, [sp, #24]
 8009dc8:	1c5a      	adds	r2, r3, #1
 8009dca:	d13b      	bne.n	8009e44 <_printf_float+0x164>
 8009dcc:	2306      	movs	r3, #6
 8009dce:	6063      	str	r3, [r4, #4]
 8009dd0:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8009dd4:	2300      	movs	r3, #0
 8009dd6:	6022      	str	r2, [r4, #0]
 8009dd8:	9303      	str	r3, [sp, #12]
 8009dda:	ab0a      	add	r3, sp, #40	@ 0x28
 8009ddc:	e9cd a301 	strd	sl, r3, [sp, #4]
 8009de0:	ab09      	add	r3, sp, #36	@ 0x24
 8009de2:	9300      	str	r3, [sp, #0]
 8009de4:	6861      	ldr	r1, [r4, #4]
 8009de6:	ec49 8b10 	vmov	d0, r8, r9
 8009dea:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8009dee:	4628      	mov	r0, r5
 8009df0:	f7ff fed6 	bl	8009ba0 <__cvt>
 8009df4:	9b06      	ldr	r3, [sp, #24]
 8009df6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8009df8:	2b47      	cmp	r3, #71	@ 0x47
 8009dfa:	4680      	mov	r8, r0
 8009dfc:	d129      	bne.n	8009e52 <_printf_float+0x172>
 8009dfe:	1cc8      	adds	r0, r1, #3
 8009e00:	db02      	blt.n	8009e08 <_printf_float+0x128>
 8009e02:	6863      	ldr	r3, [r4, #4]
 8009e04:	4299      	cmp	r1, r3
 8009e06:	dd41      	ble.n	8009e8c <_printf_float+0x1ac>
 8009e08:	f1aa 0a02 	sub.w	sl, sl, #2
 8009e0c:	fa5f fa8a 	uxtb.w	sl, sl
 8009e10:	3901      	subs	r1, #1
 8009e12:	4652      	mov	r2, sl
 8009e14:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8009e18:	9109      	str	r1, [sp, #36]	@ 0x24
 8009e1a:	f7ff ff26 	bl	8009c6a <__exponent>
 8009e1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8009e20:	1813      	adds	r3, r2, r0
 8009e22:	2a01      	cmp	r2, #1
 8009e24:	4681      	mov	r9, r0
 8009e26:	6123      	str	r3, [r4, #16]
 8009e28:	dc02      	bgt.n	8009e30 <_printf_float+0x150>
 8009e2a:	6822      	ldr	r2, [r4, #0]
 8009e2c:	07d2      	lsls	r2, r2, #31
 8009e2e:	d501      	bpl.n	8009e34 <_printf_float+0x154>
 8009e30:	3301      	adds	r3, #1
 8009e32:	6123      	str	r3, [r4, #16]
 8009e34:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8009e38:	2b00      	cmp	r3, #0
 8009e3a:	d0a2      	beq.n	8009d82 <_printf_float+0xa2>
 8009e3c:	232d      	movs	r3, #45	@ 0x2d
 8009e3e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8009e42:	e79e      	b.n	8009d82 <_printf_float+0xa2>
 8009e44:	9a06      	ldr	r2, [sp, #24]
 8009e46:	2a47      	cmp	r2, #71	@ 0x47
 8009e48:	d1c2      	bne.n	8009dd0 <_printf_float+0xf0>
 8009e4a:	2b00      	cmp	r3, #0
 8009e4c:	d1c0      	bne.n	8009dd0 <_printf_float+0xf0>
 8009e4e:	2301      	movs	r3, #1
 8009e50:	e7bd      	b.n	8009dce <_printf_float+0xee>
 8009e52:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8009e56:	d9db      	bls.n	8009e10 <_printf_float+0x130>
 8009e58:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8009e5c:	d118      	bne.n	8009e90 <_printf_float+0x1b0>
 8009e5e:	2900      	cmp	r1, #0
 8009e60:	6863      	ldr	r3, [r4, #4]
 8009e62:	dd0b      	ble.n	8009e7c <_printf_float+0x19c>
 8009e64:	6121      	str	r1, [r4, #16]
 8009e66:	b913      	cbnz	r3, 8009e6e <_printf_float+0x18e>
 8009e68:	6822      	ldr	r2, [r4, #0]
 8009e6a:	07d0      	lsls	r0, r2, #31
 8009e6c:	d502      	bpl.n	8009e74 <_printf_float+0x194>
 8009e6e:	3301      	adds	r3, #1
 8009e70:	440b      	add	r3, r1
 8009e72:	6123      	str	r3, [r4, #16]
 8009e74:	65a1      	str	r1, [r4, #88]	@ 0x58
 8009e76:	f04f 0900 	mov.w	r9, #0
 8009e7a:	e7db      	b.n	8009e34 <_printf_float+0x154>
 8009e7c:	b913      	cbnz	r3, 8009e84 <_printf_float+0x1a4>
 8009e7e:	6822      	ldr	r2, [r4, #0]
 8009e80:	07d2      	lsls	r2, r2, #31
 8009e82:	d501      	bpl.n	8009e88 <_printf_float+0x1a8>
 8009e84:	3302      	adds	r3, #2
 8009e86:	e7f4      	b.n	8009e72 <_printf_float+0x192>
 8009e88:	2301      	movs	r3, #1
 8009e8a:	e7f2      	b.n	8009e72 <_printf_float+0x192>
 8009e8c:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8009e90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009e92:	4299      	cmp	r1, r3
 8009e94:	db05      	blt.n	8009ea2 <_printf_float+0x1c2>
 8009e96:	6823      	ldr	r3, [r4, #0]
 8009e98:	6121      	str	r1, [r4, #16]
 8009e9a:	07d8      	lsls	r0, r3, #31
 8009e9c:	d5ea      	bpl.n	8009e74 <_printf_float+0x194>
 8009e9e:	1c4b      	adds	r3, r1, #1
 8009ea0:	e7e7      	b.n	8009e72 <_printf_float+0x192>
 8009ea2:	2900      	cmp	r1, #0
 8009ea4:	bfd4      	ite	le
 8009ea6:	f1c1 0202 	rsble	r2, r1, #2
 8009eaa:	2201      	movgt	r2, #1
 8009eac:	4413      	add	r3, r2
 8009eae:	e7e0      	b.n	8009e72 <_printf_float+0x192>
 8009eb0:	6823      	ldr	r3, [r4, #0]
 8009eb2:	055a      	lsls	r2, r3, #21
 8009eb4:	d407      	bmi.n	8009ec6 <_printf_float+0x1e6>
 8009eb6:	6923      	ldr	r3, [r4, #16]
 8009eb8:	4642      	mov	r2, r8
 8009eba:	4631      	mov	r1, r6
 8009ebc:	4628      	mov	r0, r5
 8009ebe:	47b8      	blx	r7
 8009ec0:	3001      	adds	r0, #1
 8009ec2:	d12b      	bne.n	8009f1c <_printf_float+0x23c>
 8009ec4:	e767      	b.n	8009d96 <_printf_float+0xb6>
 8009ec6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8009eca:	f240 80dd 	bls.w	800a088 <_printf_float+0x3a8>
 8009ece:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8009ed2:	2200      	movs	r2, #0
 8009ed4:	2300      	movs	r3, #0
 8009ed6:	f7f6 fdf7 	bl	8000ac8 <__aeabi_dcmpeq>
 8009eda:	2800      	cmp	r0, #0
 8009edc:	d033      	beq.n	8009f46 <_printf_float+0x266>
 8009ede:	4a37      	ldr	r2, [pc, #220]	@ (8009fbc <_printf_float+0x2dc>)
 8009ee0:	2301      	movs	r3, #1
 8009ee2:	4631      	mov	r1, r6
 8009ee4:	4628      	mov	r0, r5
 8009ee6:	47b8      	blx	r7
 8009ee8:	3001      	adds	r0, #1
 8009eea:	f43f af54 	beq.w	8009d96 <_printf_float+0xb6>
 8009eee:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8009ef2:	4543      	cmp	r3, r8
 8009ef4:	db02      	blt.n	8009efc <_printf_float+0x21c>
 8009ef6:	6823      	ldr	r3, [r4, #0]
 8009ef8:	07d8      	lsls	r0, r3, #31
 8009efa:	d50f      	bpl.n	8009f1c <_printf_float+0x23c>
 8009efc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8009f00:	4631      	mov	r1, r6
 8009f02:	4628      	mov	r0, r5
 8009f04:	47b8      	blx	r7
 8009f06:	3001      	adds	r0, #1
 8009f08:	f43f af45 	beq.w	8009d96 <_printf_float+0xb6>
 8009f0c:	f04f 0900 	mov.w	r9, #0
 8009f10:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8009f14:	f104 0a1a 	add.w	sl, r4, #26
 8009f18:	45c8      	cmp	r8, r9
 8009f1a:	dc09      	bgt.n	8009f30 <_printf_float+0x250>
 8009f1c:	6823      	ldr	r3, [r4, #0]
 8009f1e:	079b      	lsls	r3, r3, #30
 8009f20:	f100 8103 	bmi.w	800a12a <_printf_float+0x44a>
 8009f24:	68e0      	ldr	r0, [r4, #12]
 8009f26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8009f28:	4298      	cmp	r0, r3
 8009f2a:	bfb8      	it	lt
 8009f2c:	4618      	movlt	r0, r3
 8009f2e:	e734      	b.n	8009d9a <_printf_float+0xba>
 8009f30:	2301      	movs	r3, #1
 8009f32:	4652      	mov	r2, sl
 8009f34:	4631      	mov	r1, r6
 8009f36:	4628      	mov	r0, r5
 8009f38:	47b8      	blx	r7
 8009f3a:	3001      	adds	r0, #1
 8009f3c:	f43f af2b 	beq.w	8009d96 <_printf_float+0xb6>
 8009f40:	f109 0901 	add.w	r9, r9, #1
 8009f44:	e7e8      	b.n	8009f18 <_printf_float+0x238>
 8009f46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009f48:	2b00      	cmp	r3, #0
 8009f4a:	dc39      	bgt.n	8009fc0 <_printf_float+0x2e0>
 8009f4c:	4a1b      	ldr	r2, [pc, #108]	@ (8009fbc <_printf_float+0x2dc>)
 8009f4e:	2301      	movs	r3, #1
 8009f50:	4631      	mov	r1, r6
 8009f52:	4628      	mov	r0, r5
 8009f54:	47b8      	blx	r7
 8009f56:	3001      	adds	r0, #1
 8009f58:	f43f af1d 	beq.w	8009d96 <_printf_float+0xb6>
 8009f5c:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8009f60:	ea59 0303 	orrs.w	r3, r9, r3
 8009f64:	d102      	bne.n	8009f6c <_printf_float+0x28c>
 8009f66:	6823      	ldr	r3, [r4, #0]
 8009f68:	07d9      	lsls	r1, r3, #31
 8009f6a:	d5d7      	bpl.n	8009f1c <_printf_float+0x23c>
 8009f6c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8009f70:	4631      	mov	r1, r6
 8009f72:	4628      	mov	r0, r5
 8009f74:	47b8      	blx	r7
 8009f76:	3001      	adds	r0, #1
 8009f78:	f43f af0d 	beq.w	8009d96 <_printf_float+0xb6>
 8009f7c:	f04f 0a00 	mov.w	sl, #0
 8009f80:	f104 0b1a 	add.w	fp, r4, #26
 8009f84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009f86:	425b      	negs	r3, r3
 8009f88:	4553      	cmp	r3, sl
 8009f8a:	dc01      	bgt.n	8009f90 <_printf_float+0x2b0>
 8009f8c:	464b      	mov	r3, r9
 8009f8e:	e793      	b.n	8009eb8 <_printf_float+0x1d8>
 8009f90:	2301      	movs	r3, #1
 8009f92:	465a      	mov	r2, fp
 8009f94:	4631      	mov	r1, r6
 8009f96:	4628      	mov	r0, r5
 8009f98:	47b8      	blx	r7
 8009f9a:	3001      	adds	r0, #1
 8009f9c:	f43f aefb 	beq.w	8009d96 <_printf_float+0xb6>
 8009fa0:	f10a 0a01 	add.w	sl, sl, #1
 8009fa4:	e7ee      	b.n	8009f84 <_printf_float+0x2a4>
 8009fa6:	bf00      	nop
 8009fa8:	7fefffff 	.word	0x7fefffff
 8009fac:	0800d471 	.word	0x0800d471
 8009fb0:	0800d475 	.word	0x0800d475
 8009fb4:	0800d479 	.word	0x0800d479
 8009fb8:	0800d47d 	.word	0x0800d47d
 8009fbc:	0800d481 	.word	0x0800d481
 8009fc0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8009fc2:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8009fc6:	4553      	cmp	r3, sl
 8009fc8:	bfa8      	it	ge
 8009fca:	4653      	movge	r3, sl
 8009fcc:	2b00      	cmp	r3, #0
 8009fce:	4699      	mov	r9, r3
 8009fd0:	dc36      	bgt.n	800a040 <_printf_float+0x360>
 8009fd2:	f04f 0b00 	mov.w	fp, #0
 8009fd6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009fda:	f104 021a 	add.w	r2, r4, #26
 8009fde:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8009fe0:	9306      	str	r3, [sp, #24]
 8009fe2:	eba3 0309 	sub.w	r3, r3, r9
 8009fe6:	455b      	cmp	r3, fp
 8009fe8:	dc31      	bgt.n	800a04e <_printf_float+0x36e>
 8009fea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009fec:	459a      	cmp	sl, r3
 8009fee:	dc3a      	bgt.n	800a066 <_printf_float+0x386>
 8009ff0:	6823      	ldr	r3, [r4, #0]
 8009ff2:	07da      	lsls	r2, r3, #31
 8009ff4:	d437      	bmi.n	800a066 <_printf_float+0x386>
 8009ff6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8009ff8:	ebaa 0903 	sub.w	r9, sl, r3
 8009ffc:	9b06      	ldr	r3, [sp, #24]
 8009ffe:	ebaa 0303 	sub.w	r3, sl, r3
 800a002:	4599      	cmp	r9, r3
 800a004:	bfa8      	it	ge
 800a006:	4699      	movge	r9, r3
 800a008:	f1b9 0f00 	cmp.w	r9, #0
 800a00c:	dc33      	bgt.n	800a076 <_printf_float+0x396>
 800a00e:	f04f 0800 	mov.w	r8, #0
 800a012:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800a016:	f104 0b1a 	add.w	fp, r4, #26
 800a01a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800a01c:	ebaa 0303 	sub.w	r3, sl, r3
 800a020:	eba3 0309 	sub.w	r3, r3, r9
 800a024:	4543      	cmp	r3, r8
 800a026:	f77f af79 	ble.w	8009f1c <_printf_float+0x23c>
 800a02a:	2301      	movs	r3, #1
 800a02c:	465a      	mov	r2, fp
 800a02e:	4631      	mov	r1, r6
 800a030:	4628      	mov	r0, r5
 800a032:	47b8      	blx	r7
 800a034:	3001      	adds	r0, #1
 800a036:	f43f aeae 	beq.w	8009d96 <_printf_float+0xb6>
 800a03a:	f108 0801 	add.w	r8, r8, #1
 800a03e:	e7ec      	b.n	800a01a <_printf_float+0x33a>
 800a040:	4642      	mov	r2, r8
 800a042:	4631      	mov	r1, r6
 800a044:	4628      	mov	r0, r5
 800a046:	47b8      	blx	r7
 800a048:	3001      	adds	r0, #1
 800a04a:	d1c2      	bne.n	8009fd2 <_printf_float+0x2f2>
 800a04c:	e6a3      	b.n	8009d96 <_printf_float+0xb6>
 800a04e:	2301      	movs	r3, #1
 800a050:	4631      	mov	r1, r6
 800a052:	4628      	mov	r0, r5
 800a054:	9206      	str	r2, [sp, #24]
 800a056:	47b8      	blx	r7
 800a058:	3001      	adds	r0, #1
 800a05a:	f43f ae9c 	beq.w	8009d96 <_printf_float+0xb6>
 800a05e:	9a06      	ldr	r2, [sp, #24]
 800a060:	f10b 0b01 	add.w	fp, fp, #1
 800a064:	e7bb      	b.n	8009fde <_printf_float+0x2fe>
 800a066:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a06a:	4631      	mov	r1, r6
 800a06c:	4628      	mov	r0, r5
 800a06e:	47b8      	blx	r7
 800a070:	3001      	adds	r0, #1
 800a072:	d1c0      	bne.n	8009ff6 <_printf_float+0x316>
 800a074:	e68f      	b.n	8009d96 <_printf_float+0xb6>
 800a076:	9a06      	ldr	r2, [sp, #24]
 800a078:	464b      	mov	r3, r9
 800a07a:	4442      	add	r2, r8
 800a07c:	4631      	mov	r1, r6
 800a07e:	4628      	mov	r0, r5
 800a080:	47b8      	blx	r7
 800a082:	3001      	adds	r0, #1
 800a084:	d1c3      	bne.n	800a00e <_printf_float+0x32e>
 800a086:	e686      	b.n	8009d96 <_printf_float+0xb6>
 800a088:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800a08c:	f1ba 0f01 	cmp.w	sl, #1
 800a090:	dc01      	bgt.n	800a096 <_printf_float+0x3b6>
 800a092:	07db      	lsls	r3, r3, #31
 800a094:	d536      	bpl.n	800a104 <_printf_float+0x424>
 800a096:	2301      	movs	r3, #1
 800a098:	4642      	mov	r2, r8
 800a09a:	4631      	mov	r1, r6
 800a09c:	4628      	mov	r0, r5
 800a09e:	47b8      	blx	r7
 800a0a0:	3001      	adds	r0, #1
 800a0a2:	f43f ae78 	beq.w	8009d96 <_printf_float+0xb6>
 800a0a6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a0aa:	4631      	mov	r1, r6
 800a0ac:	4628      	mov	r0, r5
 800a0ae:	47b8      	blx	r7
 800a0b0:	3001      	adds	r0, #1
 800a0b2:	f43f ae70 	beq.w	8009d96 <_printf_float+0xb6>
 800a0b6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800a0ba:	2200      	movs	r2, #0
 800a0bc:	2300      	movs	r3, #0
 800a0be:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 800a0c2:	f7f6 fd01 	bl	8000ac8 <__aeabi_dcmpeq>
 800a0c6:	b9c0      	cbnz	r0, 800a0fa <_printf_float+0x41a>
 800a0c8:	4653      	mov	r3, sl
 800a0ca:	f108 0201 	add.w	r2, r8, #1
 800a0ce:	4631      	mov	r1, r6
 800a0d0:	4628      	mov	r0, r5
 800a0d2:	47b8      	blx	r7
 800a0d4:	3001      	adds	r0, #1
 800a0d6:	d10c      	bne.n	800a0f2 <_printf_float+0x412>
 800a0d8:	e65d      	b.n	8009d96 <_printf_float+0xb6>
 800a0da:	2301      	movs	r3, #1
 800a0dc:	465a      	mov	r2, fp
 800a0de:	4631      	mov	r1, r6
 800a0e0:	4628      	mov	r0, r5
 800a0e2:	47b8      	blx	r7
 800a0e4:	3001      	adds	r0, #1
 800a0e6:	f43f ae56 	beq.w	8009d96 <_printf_float+0xb6>
 800a0ea:	f108 0801 	add.w	r8, r8, #1
 800a0ee:	45d0      	cmp	r8, sl
 800a0f0:	dbf3      	blt.n	800a0da <_printf_float+0x3fa>
 800a0f2:	464b      	mov	r3, r9
 800a0f4:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800a0f8:	e6df      	b.n	8009eba <_printf_float+0x1da>
 800a0fa:	f04f 0800 	mov.w	r8, #0
 800a0fe:	f104 0b1a 	add.w	fp, r4, #26
 800a102:	e7f4      	b.n	800a0ee <_printf_float+0x40e>
 800a104:	2301      	movs	r3, #1
 800a106:	4642      	mov	r2, r8
 800a108:	e7e1      	b.n	800a0ce <_printf_float+0x3ee>
 800a10a:	2301      	movs	r3, #1
 800a10c:	464a      	mov	r2, r9
 800a10e:	4631      	mov	r1, r6
 800a110:	4628      	mov	r0, r5
 800a112:	47b8      	blx	r7
 800a114:	3001      	adds	r0, #1
 800a116:	f43f ae3e 	beq.w	8009d96 <_printf_float+0xb6>
 800a11a:	f108 0801 	add.w	r8, r8, #1
 800a11e:	68e3      	ldr	r3, [r4, #12]
 800a120:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a122:	1a5b      	subs	r3, r3, r1
 800a124:	4543      	cmp	r3, r8
 800a126:	dcf0      	bgt.n	800a10a <_printf_float+0x42a>
 800a128:	e6fc      	b.n	8009f24 <_printf_float+0x244>
 800a12a:	f04f 0800 	mov.w	r8, #0
 800a12e:	f104 0919 	add.w	r9, r4, #25
 800a132:	e7f4      	b.n	800a11e <_printf_float+0x43e>

0800a134 <_printf_common>:
 800a134:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a138:	4616      	mov	r6, r2
 800a13a:	4698      	mov	r8, r3
 800a13c:	688a      	ldr	r2, [r1, #8]
 800a13e:	690b      	ldr	r3, [r1, #16]
 800a140:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800a144:	4293      	cmp	r3, r2
 800a146:	bfb8      	it	lt
 800a148:	4613      	movlt	r3, r2
 800a14a:	6033      	str	r3, [r6, #0]
 800a14c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800a150:	4607      	mov	r7, r0
 800a152:	460c      	mov	r4, r1
 800a154:	b10a      	cbz	r2, 800a15a <_printf_common+0x26>
 800a156:	3301      	adds	r3, #1
 800a158:	6033      	str	r3, [r6, #0]
 800a15a:	6823      	ldr	r3, [r4, #0]
 800a15c:	0699      	lsls	r1, r3, #26
 800a15e:	bf42      	ittt	mi
 800a160:	6833      	ldrmi	r3, [r6, #0]
 800a162:	3302      	addmi	r3, #2
 800a164:	6033      	strmi	r3, [r6, #0]
 800a166:	6825      	ldr	r5, [r4, #0]
 800a168:	f015 0506 	ands.w	r5, r5, #6
 800a16c:	d106      	bne.n	800a17c <_printf_common+0x48>
 800a16e:	f104 0a19 	add.w	sl, r4, #25
 800a172:	68e3      	ldr	r3, [r4, #12]
 800a174:	6832      	ldr	r2, [r6, #0]
 800a176:	1a9b      	subs	r3, r3, r2
 800a178:	42ab      	cmp	r3, r5
 800a17a:	dc26      	bgt.n	800a1ca <_printf_common+0x96>
 800a17c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800a180:	6822      	ldr	r2, [r4, #0]
 800a182:	3b00      	subs	r3, #0
 800a184:	bf18      	it	ne
 800a186:	2301      	movne	r3, #1
 800a188:	0692      	lsls	r2, r2, #26
 800a18a:	d42b      	bmi.n	800a1e4 <_printf_common+0xb0>
 800a18c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800a190:	4641      	mov	r1, r8
 800a192:	4638      	mov	r0, r7
 800a194:	47c8      	blx	r9
 800a196:	3001      	adds	r0, #1
 800a198:	d01e      	beq.n	800a1d8 <_printf_common+0xa4>
 800a19a:	6823      	ldr	r3, [r4, #0]
 800a19c:	6922      	ldr	r2, [r4, #16]
 800a19e:	f003 0306 	and.w	r3, r3, #6
 800a1a2:	2b04      	cmp	r3, #4
 800a1a4:	bf02      	ittt	eq
 800a1a6:	68e5      	ldreq	r5, [r4, #12]
 800a1a8:	6833      	ldreq	r3, [r6, #0]
 800a1aa:	1aed      	subeq	r5, r5, r3
 800a1ac:	68a3      	ldr	r3, [r4, #8]
 800a1ae:	bf0c      	ite	eq
 800a1b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800a1b4:	2500      	movne	r5, #0
 800a1b6:	4293      	cmp	r3, r2
 800a1b8:	bfc4      	itt	gt
 800a1ba:	1a9b      	subgt	r3, r3, r2
 800a1bc:	18ed      	addgt	r5, r5, r3
 800a1be:	2600      	movs	r6, #0
 800a1c0:	341a      	adds	r4, #26
 800a1c2:	42b5      	cmp	r5, r6
 800a1c4:	d11a      	bne.n	800a1fc <_printf_common+0xc8>
 800a1c6:	2000      	movs	r0, #0
 800a1c8:	e008      	b.n	800a1dc <_printf_common+0xa8>
 800a1ca:	2301      	movs	r3, #1
 800a1cc:	4652      	mov	r2, sl
 800a1ce:	4641      	mov	r1, r8
 800a1d0:	4638      	mov	r0, r7
 800a1d2:	47c8      	blx	r9
 800a1d4:	3001      	adds	r0, #1
 800a1d6:	d103      	bne.n	800a1e0 <_printf_common+0xac>
 800a1d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a1dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a1e0:	3501      	adds	r5, #1
 800a1e2:	e7c6      	b.n	800a172 <_printf_common+0x3e>
 800a1e4:	18e1      	adds	r1, r4, r3
 800a1e6:	1c5a      	adds	r2, r3, #1
 800a1e8:	2030      	movs	r0, #48	@ 0x30
 800a1ea:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800a1ee:	4422      	add	r2, r4
 800a1f0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800a1f4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800a1f8:	3302      	adds	r3, #2
 800a1fa:	e7c7      	b.n	800a18c <_printf_common+0x58>
 800a1fc:	2301      	movs	r3, #1
 800a1fe:	4622      	mov	r2, r4
 800a200:	4641      	mov	r1, r8
 800a202:	4638      	mov	r0, r7
 800a204:	47c8      	blx	r9
 800a206:	3001      	adds	r0, #1
 800a208:	d0e6      	beq.n	800a1d8 <_printf_common+0xa4>
 800a20a:	3601      	adds	r6, #1
 800a20c:	e7d9      	b.n	800a1c2 <_printf_common+0x8e>
	...

0800a210 <_printf_i>:
 800a210:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a214:	7e0f      	ldrb	r7, [r1, #24]
 800a216:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800a218:	2f78      	cmp	r7, #120	@ 0x78
 800a21a:	4691      	mov	r9, r2
 800a21c:	4680      	mov	r8, r0
 800a21e:	460c      	mov	r4, r1
 800a220:	469a      	mov	sl, r3
 800a222:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800a226:	d807      	bhi.n	800a238 <_printf_i+0x28>
 800a228:	2f62      	cmp	r7, #98	@ 0x62
 800a22a:	d80a      	bhi.n	800a242 <_printf_i+0x32>
 800a22c:	2f00      	cmp	r7, #0
 800a22e:	f000 80d2 	beq.w	800a3d6 <_printf_i+0x1c6>
 800a232:	2f58      	cmp	r7, #88	@ 0x58
 800a234:	f000 80b9 	beq.w	800a3aa <_printf_i+0x19a>
 800a238:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800a23c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800a240:	e03a      	b.n	800a2b8 <_printf_i+0xa8>
 800a242:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800a246:	2b15      	cmp	r3, #21
 800a248:	d8f6      	bhi.n	800a238 <_printf_i+0x28>
 800a24a:	a101      	add	r1, pc, #4	@ (adr r1, 800a250 <_printf_i+0x40>)
 800a24c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800a250:	0800a2a9 	.word	0x0800a2a9
 800a254:	0800a2bd 	.word	0x0800a2bd
 800a258:	0800a239 	.word	0x0800a239
 800a25c:	0800a239 	.word	0x0800a239
 800a260:	0800a239 	.word	0x0800a239
 800a264:	0800a239 	.word	0x0800a239
 800a268:	0800a2bd 	.word	0x0800a2bd
 800a26c:	0800a239 	.word	0x0800a239
 800a270:	0800a239 	.word	0x0800a239
 800a274:	0800a239 	.word	0x0800a239
 800a278:	0800a239 	.word	0x0800a239
 800a27c:	0800a3bd 	.word	0x0800a3bd
 800a280:	0800a2e7 	.word	0x0800a2e7
 800a284:	0800a377 	.word	0x0800a377
 800a288:	0800a239 	.word	0x0800a239
 800a28c:	0800a239 	.word	0x0800a239
 800a290:	0800a3df 	.word	0x0800a3df
 800a294:	0800a239 	.word	0x0800a239
 800a298:	0800a2e7 	.word	0x0800a2e7
 800a29c:	0800a239 	.word	0x0800a239
 800a2a0:	0800a239 	.word	0x0800a239
 800a2a4:	0800a37f 	.word	0x0800a37f
 800a2a8:	6833      	ldr	r3, [r6, #0]
 800a2aa:	1d1a      	adds	r2, r3, #4
 800a2ac:	681b      	ldr	r3, [r3, #0]
 800a2ae:	6032      	str	r2, [r6, #0]
 800a2b0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800a2b4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800a2b8:	2301      	movs	r3, #1
 800a2ba:	e09d      	b.n	800a3f8 <_printf_i+0x1e8>
 800a2bc:	6833      	ldr	r3, [r6, #0]
 800a2be:	6820      	ldr	r0, [r4, #0]
 800a2c0:	1d19      	adds	r1, r3, #4
 800a2c2:	6031      	str	r1, [r6, #0]
 800a2c4:	0606      	lsls	r6, r0, #24
 800a2c6:	d501      	bpl.n	800a2cc <_printf_i+0xbc>
 800a2c8:	681d      	ldr	r5, [r3, #0]
 800a2ca:	e003      	b.n	800a2d4 <_printf_i+0xc4>
 800a2cc:	0645      	lsls	r5, r0, #25
 800a2ce:	d5fb      	bpl.n	800a2c8 <_printf_i+0xb8>
 800a2d0:	f9b3 5000 	ldrsh.w	r5, [r3]
 800a2d4:	2d00      	cmp	r5, #0
 800a2d6:	da03      	bge.n	800a2e0 <_printf_i+0xd0>
 800a2d8:	232d      	movs	r3, #45	@ 0x2d
 800a2da:	426d      	negs	r5, r5
 800a2dc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800a2e0:	4859      	ldr	r0, [pc, #356]	@ (800a448 <_printf_i+0x238>)
 800a2e2:	230a      	movs	r3, #10
 800a2e4:	e011      	b.n	800a30a <_printf_i+0xfa>
 800a2e6:	6821      	ldr	r1, [r4, #0]
 800a2e8:	6833      	ldr	r3, [r6, #0]
 800a2ea:	0608      	lsls	r0, r1, #24
 800a2ec:	f853 5b04 	ldr.w	r5, [r3], #4
 800a2f0:	d402      	bmi.n	800a2f8 <_printf_i+0xe8>
 800a2f2:	0649      	lsls	r1, r1, #25
 800a2f4:	bf48      	it	mi
 800a2f6:	b2ad      	uxthmi	r5, r5
 800a2f8:	2f6f      	cmp	r7, #111	@ 0x6f
 800a2fa:	4853      	ldr	r0, [pc, #332]	@ (800a448 <_printf_i+0x238>)
 800a2fc:	6033      	str	r3, [r6, #0]
 800a2fe:	bf14      	ite	ne
 800a300:	230a      	movne	r3, #10
 800a302:	2308      	moveq	r3, #8
 800a304:	2100      	movs	r1, #0
 800a306:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800a30a:	6866      	ldr	r6, [r4, #4]
 800a30c:	60a6      	str	r6, [r4, #8]
 800a30e:	2e00      	cmp	r6, #0
 800a310:	bfa2      	ittt	ge
 800a312:	6821      	ldrge	r1, [r4, #0]
 800a314:	f021 0104 	bicge.w	r1, r1, #4
 800a318:	6021      	strge	r1, [r4, #0]
 800a31a:	b90d      	cbnz	r5, 800a320 <_printf_i+0x110>
 800a31c:	2e00      	cmp	r6, #0
 800a31e:	d04b      	beq.n	800a3b8 <_printf_i+0x1a8>
 800a320:	4616      	mov	r6, r2
 800a322:	fbb5 f1f3 	udiv	r1, r5, r3
 800a326:	fb03 5711 	mls	r7, r3, r1, r5
 800a32a:	5dc7      	ldrb	r7, [r0, r7]
 800a32c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800a330:	462f      	mov	r7, r5
 800a332:	42bb      	cmp	r3, r7
 800a334:	460d      	mov	r5, r1
 800a336:	d9f4      	bls.n	800a322 <_printf_i+0x112>
 800a338:	2b08      	cmp	r3, #8
 800a33a:	d10b      	bne.n	800a354 <_printf_i+0x144>
 800a33c:	6823      	ldr	r3, [r4, #0]
 800a33e:	07df      	lsls	r7, r3, #31
 800a340:	d508      	bpl.n	800a354 <_printf_i+0x144>
 800a342:	6923      	ldr	r3, [r4, #16]
 800a344:	6861      	ldr	r1, [r4, #4]
 800a346:	4299      	cmp	r1, r3
 800a348:	bfde      	ittt	le
 800a34a:	2330      	movle	r3, #48	@ 0x30
 800a34c:	f806 3c01 	strble.w	r3, [r6, #-1]
 800a350:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 800a354:	1b92      	subs	r2, r2, r6
 800a356:	6122      	str	r2, [r4, #16]
 800a358:	f8cd a000 	str.w	sl, [sp]
 800a35c:	464b      	mov	r3, r9
 800a35e:	aa03      	add	r2, sp, #12
 800a360:	4621      	mov	r1, r4
 800a362:	4640      	mov	r0, r8
 800a364:	f7ff fee6 	bl	800a134 <_printf_common>
 800a368:	3001      	adds	r0, #1
 800a36a:	d14a      	bne.n	800a402 <_printf_i+0x1f2>
 800a36c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800a370:	b004      	add	sp, #16
 800a372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a376:	6823      	ldr	r3, [r4, #0]
 800a378:	f043 0320 	orr.w	r3, r3, #32
 800a37c:	6023      	str	r3, [r4, #0]
 800a37e:	4833      	ldr	r0, [pc, #204]	@ (800a44c <_printf_i+0x23c>)
 800a380:	2778      	movs	r7, #120	@ 0x78
 800a382:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800a386:	6823      	ldr	r3, [r4, #0]
 800a388:	6831      	ldr	r1, [r6, #0]
 800a38a:	061f      	lsls	r7, r3, #24
 800a38c:	f851 5b04 	ldr.w	r5, [r1], #4
 800a390:	d402      	bmi.n	800a398 <_printf_i+0x188>
 800a392:	065f      	lsls	r7, r3, #25
 800a394:	bf48      	it	mi
 800a396:	b2ad      	uxthmi	r5, r5
 800a398:	6031      	str	r1, [r6, #0]
 800a39a:	07d9      	lsls	r1, r3, #31
 800a39c:	bf44      	itt	mi
 800a39e:	f043 0320 	orrmi.w	r3, r3, #32
 800a3a2:	6023      	strmi	r3, [r4, #0]
 800a3a4:	b11d      	cbz	r5, 800a3ae <_printf_i+0x19e>
 800a3a6:	2310      	movs	r3, #16
 800a3a8:	e7ac      	b.n	800a304 <_printf_i+0xf4>
 800a3aa:	4827      	ldr	r0, [pc, #156]	@ (800a448 <_printf_i+0x238>)
 800a3ac:	e7e9      	b.n	800a382 <_printf_i+0x172>
 800a3ae:	6823      	ldr	r3, [r4, #0]
 800a3b0:	f023 0320 	bic.w	r3, r3, #32
 800a3b4:	6023      	str	r3, [r4, #0]
 800a3b6:	e7f6      	b.n	800a3a6 <_printf_i+0x196>
 800a3b8:	4616      	mov	r6, r2
 800a3ba:	e7bd      	b.n	800a338 <_printf_i+0x128>
 800a3bc:	6833      	ldr	r3, [r6, #0]
 800a3be:	6825      	ldr	r5, [r4, #0]
 800a3c0:	6961      	ldr	r1, [r4, #20]
 800a3c2:	1d18      	adds	r0, r3, #4
 800a3c4:	6030      	str	r0, [r6, #0]
 800a3c6:	062e      	lsls	r6, r5, #24
 800a3c8:	681b      	ldr	r3, [r3, #0]
 800a3ca:	d501      	bpl.n	800a3d0 <_printf_i+0x1c0>
 800a3cc:	6019      	str	r1, [r3, #0]
 800a3ce:	e002      	b.n	800a3d6 <_printf_i+0x1c6>
 800a3d0:	0668      	lsls	r0, r5, #25
 800a3d2:	d5fb      	bpl.n	800a3cc <_printf_i+0x1bc>
 800a3d4:	8019      	strh	r1, [r3, #0]
 800a3d6:	2300      	movs	r3, #0
 800a3d8:	6123      	str	r3, [r4, #16]
 800a3da:	4616      	mov	r6, r2
 800a3dc:	e7bc      	b.n	800a358 <_printf_i+0x148>
 800a3de:	6833      	ldr	r3, [r6, #0]
 800a3e0:	1d1a      	adds	r2, r3, #4
 800a3e2:	6032      	str	r2, [r6, #0]
 800a3e4:	681e      	ldr	r6, [r3, #0]
 800a3e6:	6862      	ldr	r2, [r4, #4]
 800a3e8:	2100      	movs	r1, #0
 800a3ea:	4630      	mov	r0, r6
 800a3ec:	f7f5 fef0 	bl	80001d0 <memchr>
 800a3f0:	b108      	cbz	r0, 800a3f6 <_printf_i+0x1e6>
 800a3f2:	1b80      	subs	r0, r0, r6
 800a3f4:	6060      	str	r0, [r4, #4]
 800a3f6:	6863      	ldr	r3, [r4, #4]
 800a3f8:	6123      	str	r3, [r4, #16]
 800a3fa:	2300      	movs	r3, #0
 800a3fc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800a400:	e7aa      	b.n	800a358 <_printf_i+0x148>
 800a402:	6923      	ldr	r3, [r4, #16]
 800a404:	4632      	mov	r2, r6
 800a406:	4649      	mov	r1, r9
 800a408:	4640      	mov	r0, r8
 800a40a:	47d0      	blx	sl
 800a40c:	3001      	adds	r0, #1
 800a40e:	d0ad      	beq.n	800a36c <_printf_i+0x15c>
 800a410:	6823      	ldr	r3, [r4, #0]
 800a412:	079b      	lsls	r3, r3, #30
 800a414:	d413      	bmi.n	800a43e <_printf_i+0x22e>
 800a416:	68e0      	ldr	r0, [r4, #12]
 800a418:	9b03      	ldr	r3, [sp, #12]
 800a41a:	4298      	cmp	r0, r3
 800a41c:	bfb8      	it	lt
 800a41e:	4618      	movlt	r0, r3
 800a420:	e7a6      	b.n	800a370 <_printf_i+0x160>
 800a422:	2301      	movs	r3, #1
 800a424:	4632      	mov	r2, r6
 800a426:	4649      	mov	r1, r9
 800a428:	4640      	mov	r0, r8
 800a42a:	47d0      	blx	sl
 800a42c:	3001      	adds	r0, #1
 800a42e:	d09d      	beq.n	800a36c <_printf_i+0x15c>
 800a430:	3501      	adds	r5, #1
 800a432:	68e3      	ldr	r3, [r4, #12]
 800a434:	9903      	ldr	r1, [sp, #12]
 800a436:	1a5b      	subs	r3, r3, r1
 800a438:	42ab      	cmp	r3, r5
 800a43a:	dcf2      	bgt.n	800a422 <_printf_i+0x212>
 800a43c:	e7eb      	b.n	800a416 <_printf_i+0x206>
 800a43e:	2500      	movs	r5, #0
 800a440:	f104 0619 	add.w	r6, r4, #25
 800a444:	e7f5      	b.n	800a432 <_printf_i+0x222>
 800a446:	bf00      	nop
 800a448:	0800d483 	.word	0x0800d483
 800a44c:	0800d494 	.word	0x0800d494

0800a450 <std>:
 800a450:	2300      	movs	r3, #0
 800a452:	b510      	push	{r4, lr}
 800a454:	4604      	mov	r4, r0
 800a456:	e9c0 3300 	strd	r3, r3, [r0]
 800a45a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a45e:	6083      	str	r3, [r0, #8]
 800a460:	8181      	strh	r1, [r0, #12]
 800a462:	6643      	str	r3, [r0, #100]	@ 0x64
 800a464:	81c2      	strh	r2, [r0, #14]
 800a466:	6183      	str	r3, [r0, #24]
 800a468:	4619      	mov	r1, r3
 800a46a:	2208      	movs	r2, #8
 800a46c:	305c      	adds	r0, #92	@ 0x5c
 800a46e:	f000 f926 	bl	800a6be <memset>
 800a472:	4b0d      	ldr	r3, [pc, #52]	@ (800a4a8 <std+0x58>)
 800a474:	6263      	str	r3, [r4, #36]	@ 0x24
 800a476:	4b0d      	ldr	r3, [pc, #52]	@ (800a4ac <std+0x5c>)
 800a478:	62a3      	str	r3, [r4, #40]	@ 0x28
 800a47a:	4b0d      	ldr	r3, [pc, #52]	@ (800a4b0 <std+0x60>)
 800a47c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800a47e:	4b0d      	ldr	r3, [pc, #52]	@ (800a4b4 <std+0x64>)
 800a480:	6323      	str	r3, [r4, #48]	@ 0x30
 800a482:	4b0d      	ldr	r3, [pc, #52]	@ (800a4b8 <std+0x68>)
 800a484:	6224      	str	r4, [r4, #32]
 800a486:	429c      	cmp	r4, r3
 800a488:	d006      	beq.n	800a498 <std+0x48>
 800a48a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800a48e:	4294      	cmp	r4, r2
 800a490:	d002      	beq.n	800a498 <std+0x48>
 800a492:	33d0      	adds	r3, #208	@ 0xd0
 800a494:	429c      	cmp	r4, r3
 800a496:	d105      	bne.n	800a4a4 <std+0x54>
 800a498:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800a49c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4a0:	f000 ba1e 	b.w	800a8e0 <__retarget_lock_init_recursive>
 800a4a4:	bd10      	pop	{r4, pc}
 800a4a6:	bf00      	nop
 800a4a8:	0800a639 	.word	0x0800a639
 800a4ac:	0800a65b 	.word	0x0800a65b
 800a4b0:	0800a693 	.word	0x0800a693
 800a4b4:	0800a6b7 	.word	0x0800a6b7
 800a4b8:	20000c20 	.word	0x20000c20

0800a4bc <stdio_exit_handler>:
 800a4bc:	4a02      	ldr	r2, [pc, #8]	@ (800a4c8 <stdio_exit_handler+0xc>)
 800a4be:	4903      	ldr	r1, [pc, #12]	@ (800a4cc <stdio_exit_handler+0x10>)
 800a4c0:	4803      	ldr	r0, [pc, #12]	@ (800a4d0 <stdio_exit_handler+0x14>)
 800a4c2:	f000 b87b 	b.w	800a5bc <_fwalk_sglue>
 800a4c6:	bf00      	nop
 800a4c8:	200000ac 	.word	0x200000ac
 800a4cc:	0800ccc5 	.word	0x0800ccc5
 800a4d0:	20000228 	.word	0x20000228

0800a4d4 <cleanup_stdio>:
 800a4d4:	6841      	ldr	r1, [r0, #4]
 800a4d6:	4b0c      	ldr	r3, [pc, #48]	@ (800a508 <cleanup_stdio+0x34>)
 800a4d8:	4299      	cmp	r1, r3
 800a4da:	b510      	push	{r4, lr}
 800a4dc:	4604      	mov	r4, r0
 800a4de:	d001      	beq.n	800a4e4 <cleanup_stdio+0x10>
 800a4e0:	f002 fbf0 	bl	800ccc4 <_fflush_r>
 800a4e4:	68a1      	ldr	r1, [r4, #8]
 800a4e6:	4b09      	ldr	r3, [pc, #36]	@ (800a50c <cleanup_stdio+0x38>)
 800a4e8:	4299      	cmp	r1, r3
 800a4ea:	d002      	beq.n	800a4f2 <cleanup_stdio+0x1e>
 800a4ec:	4620      	mov	r0, r4
 800a4ee:	f002 fbe9 	bl	800ccc4 <_fflush_r>
 800a4f2:	68e1      	ldr	r1, [r4, #12]
 800a4f4:	4b06      	ldr	r3, [pc, #24]	@ (800a510 <cleanup_stdio+0x3c>)
 800a4f6:	4299      	cmp	r1, r3
 800a4f8:	d004      	beq.n	800a504 <cleanup_stdio+0x30>
 800a4fa:	4620      	mov	r0, r4
 800a4fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a500:	f002 bbe0 	b.w	800ccc4 <_fflush_r>
 800a504:	bd10      	pop	{r4, pc}
 800a506:	bf00      	nop
 800a508:	20000c20 	.word	0x20000c20
 800a50c:	20000c88 	.word	0x20000c88
 800a510:	20000cf0 	.word	0x20000cf0

0800a514 <global_stdio_init.part.0>:
 800a514:	b510      	push	{r4, lr}
 800a516:	4b0b      	ldr	r3, [pc, #44]	@ (800a544 <global_stdio_init.part.0+0x30>)
 800a518:	4c0b      	ldr	r4, [pc, #44]	@ (800a548 <global_stdio_init.part.0+0x34>)
 800a51a:	4a0c      	ldr	r2, [pc, #48]	@ (800a54c <global_stdio_init.part.0+0x38>)
 800a51c:	601a      	str	r2, [r3, #0]
 800a51e:	4620      	mov	r0, r4
 800a520:	2200      	movs	r2, #0
 800a522:	2104      	movs	r1, #4
 800a524:	f7ff ff94 	bl	800a450 <std>
 800a528:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800a52c:	2201      	movs	r2, #1
 800a52e:	2109      	movs	r1, #9
 800a530:	f7ff ff8e 	bl	800a450 <std>
 800a534:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800a538:	2202      	movs	r2, #2
 800a53a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a53e:	2112      	movs	r1, #18
 800a540:	f7ff bf86 	b.w	800a450 <std>
 800a544:	20000d58 	.word	0x20000d58
 800a548:	20000c20 	.word	0x20000c20
 800a54c:	0800a4bd 	.word	0x0800a4bd

0800a550 <__sfp_lock_acquire>:
 800a550:	4801      	ldr	r0, [pc, #4]	@ (800a558 <__sfp_lock_acquire+0x8>)
 800a552:	f000 b9c6 	b.w	800a8e2 <__retarget_lock_acquire_recursive>
 800a556:	bf00      	nop
 800a558:	20000d61 	.word	0x20000d61

0800a55c <__sfp_lock_release>:
 800a55c:	4801      	ldr	r0, [pc, #4]	@ (800a564 <__sfp_lock_release+0x8>)
 800a55e:	f000 b9c1 	b.w	800a8e4 <__retarget_lock_release_recursive>
 800a562:	bf00      	nop
 800a564:	20000d61 	.word	0x20000d61

0800a568 <__sinit>:
 800a568:	b510      	push	{r4, lr}
 800a56a:	4604      	mov	r4, r0
 800a56c:	f7ff fff0 	bl	800a550 <__sfp_lock_acquire>
 800a570:	6a23      	ldr	r3, [r4, #32]
 800a572:	b11b      	cbz	r3, 800a57c <__sinit+0x14>
 800a574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a578:	f7ff bff0 	b.w	800a55c <__sfp_lock_release>
 800a57c:	4b04      	ldr	r3, [pc, #16]	@ (800a590 <__sinit+0x28>)
 800a57e:	6223      	str	r3, [r4, #32]
 800a580:	4b04      	ldr	r3, [pc, #16]	@ (800a594 <__sinit+0x2c>)
 800a582:	681b      	ldr	r3, [r3, #0]
 800a584:	2b00      	cmp	r3, #0
 800a586:	d1f5      	bne.n	800a574 <__sinit+0xc>
 800a588:	f7ff ffc4 	bl	800a514 <global_stdio_init.part.0>
 800a58c:	e7f2      	b.n	800a574 <__sinit+0xc>
 800a58e:	bf00      	nop
 800a590:	0800a4d5 	.word	0x0800a4d5
 800a594:	20000d58 	.word	0x20000d58

0800a598 <fiprintf>:
 800a598:	b40e      	push	{r1, r2, r3}
 800a59a:	b503      	push	{r0, r1, lr}
 800a59c:	4601      	mov	r1, r0
 800a59e:	ab03      	add	r3, sp, #12
 800a5a0:	4805      	ldr	r0, [pc, #20]	@ (800a5b8 <fiprintf+0x20>)
 800a5a2:	f853 2b04 	ldr.w	r2, [r3], #4
 800a5a6:	6800      	ldr	r0, [r0, #0]
 800a5a8:	9301      	str	r3, [sp, #4]
 800a5aa:	f002 f9ef 	bl	800c98c <_vfiprintf_r>
 800a5ae:	b002      	add	sp, #8
 800a5b0:	f85d eb04 	ldr.w	lr, [sp], #4
 800a5b4:	b003      	add	sp, #12
 800a5b6:	4770      	bx	lr
 800a5b8:	20000224 	.word	0x20000224

0800a5bc <_fwalk_sglue>:
 800a5bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a5c0:	4607      	mov	r7, r0
 800a5c2:	4688      	mov	r8, r1
 800a5c4:	4614      	mov	r4, r2
 800a5c6:	2600      	movs	r6, #0
 800a5c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800a5cc:	f1b9 0901 	subs.w	r9, r9, #1
 800a5d0:	d505      	bpl.n	800a5de <_fwalk_sglue+0x22>
 800a5d2:	6824      	ldr	r4, [r4, #0]
 800a5d4:	2c00      	cmp	r4, #0
 800a5d6:	d1f7      	bne.n	800a5c8 <_fwalk_sglue+0xc>
 800a5d8:	4630      	mov	r0, r6
 800a5da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a5de:	89ab      	ldrh	r3, [r5, #12]
 800a5e0:	2b01      	cmp	r3, #1
 800a5e2:	d907      	bls.n	800a5f4 <_fwalk_sglue+0x38>
 800a5e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800a5e8:	3301      	adds	r3, #1
 800a5ea:	d003      	beq.n	800a5f4 <_fwalk_sglue+0x38>
 800a5ec:	4629      	mov	r1, r5
 800a5ee:	4638      	mov	r0, r7
 800a5f0:	47c0      	blx	r8
 800a5f2:	4306      	orrs	r6, r0
 800a5f4:	3568      	adds	r5, #104	@ 0x68
 800a5f6:	e7e9      	b.n	800a5cc <_fwalk_sglue+0x10>

0800a5f8 <siprintf>:
 800a5f8:	b40e      	push	{r1, r2, r3}
 800a5fa:	b500      	push	{lr}
 800a5fc:	b09c      	sub	sp, #112	@ 0x70
 800a5fe:	ab1d      	add	r3, sp, #116	@ 0x74
 800a600:	9002      	str	r0, [sp, #8]
 800a602:	9006      	str	r0, [sp, #24]
 800a604:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800a608:	4809      	ldr	r0, [pc, #36]	@ (800a630 <siprintf+0x38>)
 800a60a:	9107      	str	r1, [sp, #28]
 800a60c:	9104      	str	r1, [sp, #16]
 800a60e:	4909      	ldr	r1, [pc, #36]	@ (800a634 <siprintf+0x3c>)
 800a610:	f853 2b04 	ldr.w	r2, [r3], #4
 800a614:	9105      	str	r1, [sp, #20]
 800a616:	6800      	ldr	r0, [r0, #0]
 800a618:	9301      	str	r3, [sp, #4]
 800a61a:	a902      	add	r1, sp, #8
 800a61c:	f002 f890 	bl	800c740 <_svfiprintf_r>
 800a620:	9b02      	ldr	r3, [sp, #8]
 800a622:	2200      	movs	r2, #0
 800a624:	701a      	strb	r2, [r3, #0]
 800a626:	b01c      	add	sp, #112	@ 0x70
 800a628:	f85d eb04 	ldr.w	lr, [sp], #4
 800a62c:	b003      	add	sp, #12
 800a62e:	4770      	bx	lr
 800a630:	20000224 	.word	0x20000224
 800a634:	ffff0208 	.word	0xffff0208

0800a638 <__sread>:
 800a638:	b510      	push	{r4, lr}
 800a63a:	460c      	mov	r4, r1
 800a63c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a640:	f000 f8f0 	bl	800a824 <_read_r>
 800a644:	2800      	cmp	r0, #0
 800a646:	bfab      	itete	ge
 800a648:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800a64a:	89a3      	ldrhlt	r3, [r4, #12]
 800a64c:	181b      	addge	r3, r3, r0
 800a64e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800a652:	bfac      	ite	ge
 800a654:	6563      	strge	r3, [r4, #84]	@ 0x54
 800a656:	81a3      	strhlt	r3, [r4, #12]
 800a658:	bd10      	pop	{r4, pc}

0800a65a <__swrite>:
 800a65a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a65e:	461f      	mov	r7, r3
 800a660:	898b      	ldrh	r3, [r1, #12]
 800a662:	05db      	lsls	r3, r3, #23
 800a664:	4605      	mov	r5, r0
 800a666:	460c      	mov	r4, r1
 800a668:	4616      	mov	r6, r2
 800a66a:	d505      	bpl.n	800a678 <__swrite+0x1e>
 800a66c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a670:	2302      	movs	r3, #2
 800a672:	2200      	movs	r2, #0
 800a674:	f000 f8c4 	bl	800a800 <_lseek_r>
 800a678:	89a3      	ldrh	r3, [r4, #12]
 800a67a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a67e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800a682:	81a3      	strh	r3, [r4, #12]
 800a684:	4632      	mov	r2, r6
 800a686:	463b      	mov	r3, r7
 800a688:	4628      	mov	r0, r5
 800a68a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a68e:	f000 b8eb 	b.w	800a868 <_write_r>

0800a692 <__sseek>:
 800a692:	b510      	push	{r4, lr}
 800a694:	460c      	mov	r4, r1
 800a696:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a69a:	f000 f8b1 	bl	800a800 <_lseek_r>
 800a69e:	1c43      	adds	r3, r0, #1
 800a6a0:	89a3      	ldrh	r3, [r4, #12]
 800a6a2:	bf15      	itete	ne
 800a6a4:	6560      	strne	r0, [r4, #84]	@ 0x54
 800a6a6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800a6aa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800a6ae:	81a3      	strheq	r3, [r4, #12]
 800a6b0:	bf18      	it	ne
 800a6b2:	81a3      	strhne	r3, [r4, #12]
 800a6b4:	bd10      	pop	{r4, pc}

0800a6b6 <__sclose>:
 800a6b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a6ba:	f000 b891 	b.w	800a7e0 <_close_r>

0800a6be <memset>:
 800a6be:	4402      	add	r2, r0
 800a6c0:	4603      	mov	r3, r0
 800a6c2:	4293      	cmp	r3, r2
 800a6c4:	d100      	bne.n	800a6c8 <memset+0xa>
 800a6c6:	4770      	bx	lr
 800a6c8:	f803 1b01 	strb.w	r1, [r3], #1
 800a6cc:	e7f9      	b.n	800a6c2 <memset+0x4>

0800a6ce <strncmp>:
 800a6ce:	b510      	push	{r4, lr}
 800a6d0:	b16a      	cbz	r2, 800a6ee <strncmp+0x20>
 800a6d2:	3901      	subs	r1, #1
 800a6d4:	1884      	adds	r4, r0, r2
 800a6d6:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a6da:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a6de:	429a      	cmp	r2, r3
 800a6e0:	d103      	bne.n	800a6ea <strncmp+0x1c>
 800a6e2:	42a0      	cmp	r0, r4
 800a6e4:	d001      	beq.n	800a6ea <strncmp+0x1c>
 800a6e6:	2a00      	cmp	r2, #0
 800a6e8:	d1f5      	bne.n	800a6d6 <strncmp+0x8>
 800a6ea:	1ad0      	subs	r0, r2, r3
 800a6ec:	bd10      	pop	{r4, pc}
 800a6ee:	4610      	mov	r0, r2
 800a6f0:	e7fc      	b.n	800a6ec <strncmp+0x1e>
	...

0800a6f4 <strtok>:
 800a6f4:	4b16      	ldr	r3, [pc, #88]	@ (800a750 <strtok+0x5c>)
 800a6f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6fa:	681f      	ldr	r7, [r3, #0]
 800a6fc:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 800a6fe:	4605      	mov	r5, r0
 800a700:	460e      	mov	r6, r1
 800a702:	b9ec      	cbnz	r4, 800a740 <strtok+0x4c>
 800a704:	2050      	movs	r0, #80	@ 0x50
 800a706:	f7fe faa1 	bl	8008c4c <malloc>
 800a70a:	4602      	mov	r2, r0
 800a70c:	6478      	str	r0, [r7, #68]	@ 0x44
 800a70e:	b920      	cbnz	r0, 800a71a <strtok+0x26>
 800a710:	4b10      	ldr	r3, [pc, #64]	@ (800a754 <strtok+0x60>)
 800a712:	4811      	ldr	r0, [pc, #68]	@ (800a758 <strtok+0x64>)
 800a714:	215b      	movs	r1, #91	@ 0x5b
 800a716:	f7fe fa7b 	bl	8008c10 <__assert_func>
 800a71a:	e9c0 4400 	strd	r4, r4, [r0]
 800a71e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800a722:	e9c0 4404 	strd	r4, r4, [r0, #16]
 800a726:	e9c0 440a 	strd	r4, r4, [r0, #40]	@ 0x28
 800a72a:	e9c0 440c 	strd	r4, r4, [r0, #48]	@ 0x30
 800a72e:	e9c0 440e 	strd	r4, r4, [r0, #56]	@ 0x38
 800a732:	e9c0 4410 	strd	r4, r4, [r0, #64]	@ 0x40
 800a736:	e9c0 4412 	strd	r4, r4, [r0, #72]	@ 0x48
 800a73a:	6184      	str	r4, [r0, #24]
 800a73c:	7704      	strb	r4, [r0, #28]
 800a73e:	6244      	str	r4, [r0, #36]	@ 0x24
 800a740:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800a742:	4631      	mov	r1, r6
 800a744:	4628      	mov	r0, r5
 800a746:	2301      	movs	r3, #1
 800a748:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a74c:	f000 b806 	b.w	800a75c <__strtok_r>
 800a750:	20000224 	.word	0x20000224
 800a754:	0800d4a5 	.word	0x0800d4a5
 800a758:	0800d4bc 	.word	0x0800d4bc

0800a75c <__strtok_r>:
 800a75c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a75e:	4604      	mov	r4, r0
 800a760:	b908      	cbnz	r0, 800a766 <__strtok_r+0xa>
 800a762:	6814      	ldr	r4, [r2, #0]
 800a764:	b144      	cbz	r4, 800a778 <__strtok_r+0x1c>
 800a766:	4620      	mov	r0, r4
 800a768:	f814 5b01 	ldrb.w	r5, [r4], #1
 800a76c:	460f      	mov	r7, r1
 800a76e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800a772:	b91e      	cbnz	r6, 800a77c <__strtok_r+0x20>
 800a774:	b965      	cbnz	r5, 800a790 <__strtok_r+0x34>
 800a776:	6015      	str	r5, [r2, #0]
 800a778:	2000      	movs	r0, #0
 800a77a:	e005      	b.n	800a788 <__strtok_r+0x2c>
 800a77c:	42b5      	cmp	r5, r6
 800a77e:	d1f6      	bne.n	800a76e <__strtok_r+0x12>
 800a780:	2b00      	cmp	r3, #0
 800a782:	d1f0      	bne.n	800a766 <__strtok_r+0xa>
 800a784:	6014      	str	r4, [r2, #0]
 800a786:	7003      	strb	r3, [r0, #0]
 800a788:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a78a:	461c      	mov	r4, r3
 800a78c:	e00c      	b.n	800a7a8 <__strtok_r+0x4c>
 800a78e:	b915      	cbnz	r5, 800a796 <__strtok_r+0x3a>
 800a790:	f814 3b01 	ldrb.w	r3, [r4], #1
 800a794:	460e      	mov	r6, r1
 800a796:	f816 5b01 	ldrb.w	r5, [r6], #1
 800a79a:	42ab      	cmp	r3, r5
 800a79c:	d1f7      	bne.n	800a78e <__strtok_r+0x32>
 800a79e:	2b00      	cmp	r3, #0
 800a7a0:	d0f3      	beq.n	800a78a <__strtok_r+0x2e>
 800a7a2:	2300      	movs	r3, #0
 800a7a4:	f804 3c01 	strb.w	r3, [r4, #-1]
 800a7a8:	6014      	str	r4, [r2, #0]
 800a7aa:	e7ed      	b.n	800a788 <__strtok_r+0x2c>

0800a7ac <strstr>:
 800a7ac:	780a      	ldrb	r2, [r1, #0]
 800a7ae:	b570      	push	{r4, r5, r6, lr}
 800a7b0:	b96a      	cbnz	r2, 800a7ce <strstr+0x22>
 800a7b2:	bd70      	pop	{r4, r5, r6, pc}
 800a7b4:	429a      	cmp	r2, r3
 800a7b6:	d109      	bne.n	800a7cc <strstr+0x20>
 800a7b8:	460c      	mov	r4, r1
 800a7ba:	4605      	mov	r5, r0
 800a7bc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d0f6      	beq.n	800a7b2 <strstr+0x6>
 800a7c4:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800a7c8:	429e      	cmp	r6, r3
 800a7ca:	d0f7      	beq.n	800a7bc <strstr+0x10>
 800a7cc:	3001      	adds	r0, #1
 800a7ce:	7803      	ldrb	r3, [r0, #0]
 800a7d0:	2b00      	cmp	r3, #0
 800a7d2:	d1ef      	bne.n	800a7b4 <strstr+0x8>
 800a7d4:	4618      	mov	r0, r3
 800a7d6:	e7ec      	b.n	800a7b2 <strstr+0x6>

0800a7d8 <_localeconv_r>:
 800a7d8:	4800      	ldr	r0, [pc, #0]	@ (800a7dc <_localeconv_r+0x4>)
 800a7da:	4770      	bx	lr
 800a7dc:	200001a8 	.word	0x200001a8

0800a7e0 <_close_r>:
 800a7e0:	b538      	push	{r3, r4, r5, lr}
 800a7e2:	4d06      	ldr	r5, [pc, #24]	@ (800a7fc <_close_r+0x1c>)
 800a7e4:	2300      	movs	r3, #0
 800a7e6:	4604      	mov	r4, r0
 800a7e8:	4608      	mov	r0, r1
 800a7ea:	602b      	str	r3, [r5, #0]
 800a7ec:	f7f9 fb30 	bl	8003e50 <_close>
 800a7f0:	1c43      	adds	r3, r0, #1
 800a7f2:	d102      	bne.n	800a7fa <_close_r+0x1a>
 800a7f4:	682b      	ldr	r3, [r5, #0]
 800a7f6:	b103      	cbz	r3, 800a7fa <_close_r+0x1a>
 800a7f8:	6023      	str	r3, [r4, #0]
 800a7fa:	bd38      	pop	{r3, r4, r5, pc}
 800a7fc:	20000d5c 	.word	0x20000d5c

0800a800 <_lseek_r>:
 800a800:	b538      	push	{r3, r4, r5, lr}
 800a802:	4d07      	ldr	r5, [pc, #28]	@ (800a820 <_lseek_r+0x20>)
 800a804:	4604      	mov	r4, r0
 800a806:	4608      	mov	r0, r1
 800a808:	4611      	mov	r1, r2
 800a80a:	2200      	movs	r2, #0
 800a80c:	602a      	str	r2, [r5, #0]
 800a80e:	461a      	mov	r2, r3
 800a810:	f7f9 fb45 	bl	8003e9e <_lseek>
 800a814:	1c43      	adds	r3, r0, #1
 800a816:	d102      	bne.n	800a81e <_lseek_r+0x1e>
 800a818:	682b      	ldr	r3, [r5, #0]
 800a81a:	b103      	cbz	r3, 800a81e <_lseek_r+0x1e>
 800a81c:	6023      	str	r3, [r4, #0]
 800a81e:	bd38      	pop	{r3, r4, r5, pc}
 800a820:	20000d5c 	.word	0x20000d5c

0800a824 <_read_r>:
 800a824:	b538      	push	{r3, r4, r5, lr}
 800a826:	4d07      	ldr	r5, [pc, #28]	@ (800a844 <_read_r+0x20>)
 800a828:	4604      	mov	r4, r0
 800a82a:	4608      	mov	r0, r1
 800a82c:	4611      	mov	r1, r2
 800a82e:	2200      	movs	r2, #0
 800a830:	602a      	str	r2, [r5, #0]
 800a832:	461a      	mov	r2, r3
 800a834:	f7f9 fad3 	bl	8003dde <_read>
 800a838:	1c43      	adds	r3, r0, #1
 800a83a:	d102      	bne.n	800a842 <_read_r+0x1e>
 800a83c:	682b      	ldr	r3, [r5, #0]
 800a83e:	b103      	cbz	r3, 800a842 <_read_r+0x1e>
 800a840:	6023      	str	r3, [r4, #0]
 800a842:	bd38      	pop	{r3, r4, r5, pc}
 800a844:	20000d5c 	.word	0x20000d5c

0800a848 <_sbrk_r>:
 800a848:	b538      	push	{r3, r4, r5, lr}
 800a84a:	4d06      	ldr	r5, [pc, #24]	@ (800a864 <_sbrk_r+0x1c>)
 800a84c:	2300      	movs	r3, #0
 800a84e:	4604      	mov	r4, r0
 800a850:	4608      	mov	r0, r1
 800a852:	602b      	str	r3, [r5, #0]
 800a854:	f7f9 fb30 	bl	8003eb8 <_sbrk>
 800a858:	1c43      	adds	r3, r0, #1
 800a85a:	d102      	bne.n	800a862 <_sbrk_r+0x1a>
 800a85c:	682b      	ldr	r3, [r5, #0]
 800a85e:	b103      	cbz	r3, 800a862 <_sbrk_r+0x1a>
 800a860:	6023      	str	r3, [r4, #0]
 800a862:	bd38      	pop	{r3, r4, r5, pc}
 800a864:	20000d5c 	.word	0x20000d5c

0800a868 <_write_r>:
 800a868:	b538      	push	{r3, r4, r5, lr}
 800a86a:	4d07      	ldr	r5, [pc, #28]	@ (800a888 <_write_r+0x20>)
 800a86c:	4604      	mov	r4, r0
 800a86e:	4608      	mov	r0, r1
 800a870:	4611      	mov	r1, r2
 800a872:	2200      	movs	r2, #0
 800a874:	602a      	str	r2, [r5, #0]
 800a876:	461a      	mov	r2, r3
 800a878:	f7f9 face 	bl	8003e18 <_write>
 800a87c:	1c43      	adds	r3, r0, #1
 800a87e:	d102      	bne.n	800a886 <_write_r+0x1e>
 800a880:	682b      	ldr	r3, [r5, #0]
 800a882:	b103      	cbz	r3, 800a886 <_write_r+0x1e>
 800a884:	6023      	str	r3, [r4, #0]
 800a886:	bd38      	pop	{r3, r4, r5, pc}
 800a888:	20000d5c 	.word	0x20000d5c

0800a88c <__errno>:
 800a88c:	4b01      	ldr	r3, [pc, #4]	@ (800a894 <__errno+0x8>)
 800a88e:	6818      	ldr	r0, [r3, #0]
 800a890:	4770      	bx	lr
 800a892:	bf00      	nop
 800a894:	20000224 	.word	0x20000224

0800a898 <__libc_init_array>:
 800a898:	b570      	push	{r4, r5, r6, lr}
 800a89a:	4d0d      	ldr	r5, [pc, #52]	@ (800a8d0 <__libc_init_array+0x38>)
 800a89c:	4c0d      	ldr	r4, [pc, #52]	@ (800a8d4 <__libc_init_array+0x3c>)
 800a89e:	1b64      	subs	r4, r4, r5
 800a8a0:	10a4      	asrs	r4, r4, #2
 800a8a2:	2600      	movs	r6, #0
 800a8a4:	42a6      	cmp	r6, r4
 800a8a6:	d109      	bne.n	800a8bc <__libc_init_array+0x24>
 800a8a8:	4d0b      	ldr	r5, [pc, #44]	@ (800a8d8 <__libc_init_array+0x40>)
 800a8aa:	4c0c      	ldr	r4, [pc, #48]	@ (800a8dc <__libc_init_array+0x44>)
 800a8ac:	f002 fc38 	bl	800d120 <_init>
 800a8b0:	1b64      	subs	r4, r4, r5
 800a8b2:	10a4      	asrs	r4, r4, #2
 800a8b4:	2600      	movs	r6, #0
 800a8b6:	42a6      	cmp	r6, r4
 800a8b8:	d105      	bne.n	800a8c6 <__libc_init_array+0x2e>
 800a8ba:	bd70      	pop	{r4, r5, r6, pc}
 800a8bc:	f855 3b04 	ldr.w	r3, [r5], #4
 800a8c0:	4798      	blx	r3
 800a8c2:	3601      	adds	r6, #1
 800a8c4:	e7ee      	b.n	800a8a4 <__libc_init_array+0xc>
 800a8c6:	f855 3b04 	ldr.w	r3, [r5], #4
 800a8ca:	4798      	blx	r3
 800a8cc:	3601      	adds	r6, #1
 800a8ce:	e7f2      	b.n	800a8b6 <__libc_init_array+0x1e>
 800a8d0:	0800d76c 	.word	0x0800d76c
 800a8d4:	0800d76c 	.word	0x0800d76c
 800a8d8:	0800d76c 	.word	0x0800d76c
 800a8dc:	0800d770 	.word	0x0800d770

0800a8e0 <__retarget_lock_init_recursive>:
 800a8e0:	4770      	bx	lr

0800a8e2 <__retarget_lock_acquire_recursive>:
 800a8e2:	4770      	bx	lr

0800a8e4 <__retarget_lock_release_recursive>:
 800a8e4:	4770      	bx	lr

0800a8e6 <strcpy>:
 800a8e6:	4603      	mov	r3, r0
 800a8e8:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a8ec:	f803 2b01 	strb.w	r2, [r3], #1
 800a8f0:	2a00      	cmp	r2, #0
 800a8f2:	d1f9      	bne.n	800a8e8 <strcpy+0x2>
 800a8f4:	4770      	bx	lr

0800a8f6 <memcpy>:
 800a8f6:	440a      	add	r2, r1
 800a8f8:	4291      	cmp	r1, r2
 800a8fa:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 800a8fe:	d100      	bne.n	800a902 <memcpy+0xc>
 800a900:	4770      	bx	lr
 800a902:	b510      	push	{r4, lr}
 800a904:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a908:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a90c:	4291      	cmp	r1, r2
 800a90e:	d1f9      	bne.n	800a904 <memcpy+0xe>
 800a910:	bd10      	pop	{r4, pc}
 800a912:	0000      	movs	r0, r0
 800a914:	0000      	movs	r0, r0
	...

0800a918 <nan>:
 800a918:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800a920 <nan+0x8>
 800a91c:	4770      	bx	lr
 800a91e:	bf00      	nop
 800a920:	00000000 	.word	0x00000000
 800a924:	7ff80000 	.word	0x7ff80000

0800a928 <nanf>:
 800a928:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 800a930 <nanf+0x8>
 800a92c:	4770      	bx	lr
 800a92e:	bf00      	nop
 800a930:	7fc00000 	.word	0x7fc00000

0800a934 <abort>:
 800a934:	b508      	push	{r3, lr}
 800a936:	2006      	movs	r0, #6
 800a938:	f002 fac2 	bl	800cec0 <raise>
 800a93c:	2001      	movs	r0, #1
 800a93e:	f7f9 fa43 	bl	8003dc8 <_exit>

0800a942 <quorem>:
 800a942:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a946:	6903      	ldr	r3, [r0, #16]
 800a948:	690c      	ldr	r4, [r1, #16]
 800a94a:	42a3      	cmp	r3, r4
 800a94c:	4607      	mov	r7, r0
 800a94e:	db7e      	blt.n	800aa4e <quorem+0x10c>
 800a950:	3c01      	subs	r4, #1
 800a952:	f101 0814 	add.w	r8, r1, #20
 800a956:	00a3      	lsls	r3, r4, #2
 800a958:	f100 0514 	add.w	r5, r0, #20
 800a95c:	9300      	str	r3, [sp, #0]
 800a95e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a962:	9301      	str	r3, [sp, #4]
 800a964:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800a968:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a96c:	3301      	adds	r3, #1
 800a96e:	429a      	cmp	r2, r3
 800a970:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a974:	fbb2 f6f3 	udiv	r6, r2, r3
 800a978:	d32e      	bcc.n	800a9d8 <quorem+0x96>
 800a97a:	f04f 0a00 	mov.w	sl, #0
 800a97e:	46c4      	mov	ip, r8
 800a980:	46ae      	mov	lr, r5
 800a982:	46d3      	mov	fp, sl
 800a984:	f85c 3b04 	ldr.w	r3, [ip], #4
 800a988:	b298      	uxth	r0, r3
 800a98a:	fb06 a000 	mla	r0, r6, r0, sl
 800a98e:	0c02      	lsrs	r2, r0, #16
 800a990:	0c1b      	lsrs	r3, r3, #16
 800a992:	fb06 2303 	mla	r3, r6, r3, r2
 800a996:	f8de 2000 	ldr.w	r2, [lr]
 800a99a:	b280      	uxth	r0, r0
 800a99c:	b292      	uxth	r2, r2
 800a99e:	1a12      	subs	r2, r2, r0
 800a9a0:	445a      	add	r2, fp
 800a9a2:	f8de 0000 	ldr.w	r0, [lr]
 800a9a6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800a9aa:	b29b      	uxth	r3, r3
 800a9ac:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800a9b0:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800a9b4:	b292      	uxth	r2, r2
 800a9b6:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800a9ba:	45e1      	cmp	r9, ip
 800a9bc:	f84e 2b04 	str.w	r2, [lr], #4
 800a9c0:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800a9c4:	d2de      	bcs.n	800a984 <quorem+0x42>
 800a9c6:	9b00      	ldr	r3, [sp, #0]
 800a9c8:	58eb      	ldr	r3, [r5, r3]
 800a9ca:	b92b      	cbnz	r3, 800a9d8 <quorem+0x96>
 800a9cc:	9b01      	ldr	r3, [sp, #4]
 800a9ce:	3b04      	subs	r3, #4
 800a9d0:	429d      	cmp	r5, r3
 800a9d2:	461a      	mov	r2, r3
 800a9d4:	d32f      	bcc.n	800aa36 <quorem+0xf4>
 800a9d6:	613c      	str	r4, [r7, #16]
 800a9d8:	4638      	mov	r0, r7
 800a9da:	f001 fc5b 	bl	800c294 <__mcmp>
 800a9de:	2800      	cmp	r0, #0
 800a9e0:	db25      	blt.n	800aa2e <quorem+0xec>
 800a9e2:	4629      	mov	r1, r5
 800a9e4:	2000      	movs	r0, #0
 800a9e6:	f858 2b04 	ldr.w	r2, [r8], #4
 800a9ea:	f8d1 c000 	ldr.w	ip, [r1]
 800a9ee:	fa1f fe82 	uxth.w	lr, r2
 800a9f2:	fa1f f38c 	uxth.w	r3, ip
 800a9f6:	eba3 030e 	sub.w	r3, r3, lr
 800a9fa:	4403      	add	r3, r0
 800a9fc:	0c12      	lsrs	r2, r2, #16
 800a9fe:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800aa02:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800aa06:	b29b      	uxth	r3, r3
 800aa08:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800aa0c:	45c1      	cmp	r9, r8
 800aa0e:	f841 3b04 	str.w	r3, [r1], #4
 800aa12:	ea4f 4022 	mov.w	r0, r2, asr #16
 800aa16:	d2e6      	bcs.n	800a9e6 <quorem+0xa4>
 800aa18:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800aa1c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800aa20:	b922      	cbnz	r2, 800aa2c <quorem+0xea>
 800aa22:	3b04      	subs	r3, #4
 800aa24:	429d      	cmp	r5, r3
 800aa26:	461a      	mov	r2, r3
 800aa28:	d30b      	bcc.n	800aa42 <quorem+0x100>
 800aa2a:	613c      	str	r4, [r7, #16]
 800aa2c:	3601      	adds	r6, #1
 800aa2e:	4630      	mov	r0, r6
 800aa30:	b003      	add	sp, #12
 800aa32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa36:	6812      	ldr	r2, [r2, #0]
 800aa38:	3b04      	subs	r3, #4
 800aa3a:	2a00      	cmp	r2, #0
 800aa3c:	d1cb      	bne.n	800a9d6 <quorem+0x94>
 800aa3e:	3c01      	subs	r4, #1
 800aa40:	e7c6      	b.n	800a9d0 <quorem+0x8e>
 800aa42:	6812      	ldr	r2, [r2, #0]
 800aa44:	3b04      	subs	r3, #4
 800aa46:	2a00      	cmp	r2, #0
 800aa48:	d1ef      	bne.n	800aa2a <quorem+0xe8>
 800aa4a:	3c01      	subs	r4, #1
 800aa4c:	e7ea      	b.n	800aa24 <quorem+0xe2>
 800aa4e:	2000      	movs	r0, #0
 800aa50:	e7ee      	b.n	800aa30 <quorem+0xee>
 800aa52:	0000      	movs	r0, r0
 800aa54:	0000      	movs	r0, r0
	...

0800aa58 <_dtoa_r>:
 800aa58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa5c:	69c7      	ldr	r7, [r0, #28]
 800aa5e:	b099      	sub	sp, #100	@ 0x64
 800aa60:	ed8d 0b02 	vstr	d0, [sp, #8]
 800aa64:	ec55 4b10 	vmov	r4, r5, d0
 800aa68:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800aa6a:	9109      	str	r1, [sp, #36]	@ 0x24
 800aa6c:	4683      	mov	fp, r0
 800aa6e:	920e      	str	r2, [sp, #56]	@ 0x38
 800aa70:	9313      	str	r3, [sp, #76]	@ 0x4c
 800aa72:	b97f      	cbnz	r7, 800aa94 <_dtoa_r+0x3c>
 800aa74:	2010      	movs	r0, #16
 800aa76:	f7fe f8e9 	bl	8008c4c <malloc>
 800aa7a:	4602      	mov	r2, r0
 800aa7c:	f8cb 001c 	str.w	r0, [fp, #28]
 800aa80:	b920      	cbnz	r0, 800aa8c <_dtoa_r+0x34>
 800aa82:	4ba7      	ldr	r3, [pc, #668]	@ (800ad20 <_dtoa_r+0x2c8>)
 800aa84:	21ef      	movs	r1, #239	@ 0xef
 800aa86:	48a7      	ldr	r0, [pc, #668]	@ (800ad24 <_dtoa_r+0x2cc>)
 800aa88:	f7fe f8c2 	bl	8008c10 <__assert_func>
 800aa8c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800aa90:	6007      	str	r7, [r0, #0]
 800aa92:	60c7      	str	r7, [r0, #12]
 800aa94:	f8db 301c 	ldr.w	r3, [fp, #28]
 800aa98:	6819      	ldr	r1, [r3, #0]
 800aa9a:	b159      	cbz	r1, 800aab4 <_dtoa_r+0x5c>
 800aa9c:	685a      	ldr	r2, [r3, #4]
 800aa9e:	604a      	str	r2, [r1, #4]
 800aaa0:	2301      	movs	r3, #1
 800aaa2:	4093      	lsls	r3, r2
 800aaa4:	608b      	str	r3, [r1, #8]
 800aaa6:	4658      	mov	r0, fp
 800aaa8:	f001 f970 	bl	800bd8c <_Bfree>
 800aaac:	f8db 301c 	ldr.w	r3, [fp, #28]
 800aab0:	2200      	movs	r2, #0
 800aab2:	601a      	str	r2, [r3, #0]
 800aab4:	1e2b      	subs	r3, r5, #0
 800aab6:	bfb9      	ittee	lt
 800aab8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800aabc:	9303      	strlt	r3, [sp, #12]
 800aabe:	2300      	movge	r3, #0
 800aac0:	6033      	strge	r3, [r6, #0]
 800aac2:	9f03      	ldr	r7, [sp, #12]
 800aac4:	4b98      	ldr	r3, [pc, #608]	@ (800ad28 <_dtoa_r+0x2d0>)
 800aac6:	bfbc      	itt	lt
 800aac8:	2201      	movlt	r2, #1
 800aaca:	6032      	strlt	r2, [r6, #0]
 800aacc:	43bb      	bics	r3, r7
 800aace:	d112      	bne.n	800aaf6 <_dtoa_r+0x9e>
 800aad0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800aad2:	f242 730f 	movw	r3, #9999	@ 0x270f
 800aad6:	6013      	str	r3, [r2, #0]
 800aad8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800aadc:	4323      	orrs	r3, r4
 800aade:	f000 854d 	beq.w	800b57c <_dtoa_r+0xb24>
 800aae2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800aae4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 800ad3c <_dtoa_r+0x2e4>
 800aae8:	2b00      	cmp	r3, #0
 800aaea:	f000 854f 	beq.w	800b58c <_dtoa_r+0xb34>
 800aaee:	f10a 0303 	add.w	r3, sl, #3
 800aaf2:	f000 bd49 	b.w	800b588 <_dtoa_r+0xb30>
 800aaf6:	ed9d 7b02 	vldr	d7, [sp, #8]
 800aafa:	2200      	movs	r2, #0
 800aafc:	ec51 0b17 	vmov	r0, r1, d7
 800ab00:	2300      	movs	r3, #0
 800ab02:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 800ab06:	f7f5 ffdf 	bl	8000ac8 <__aeabi_dcmpeq>
 800ab0a:	4680      	mov	r8, r0
 800ab0c:	b158      	cbz	r0, 800ab26 <_dtoa_r+0xce>
 800ab0e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800ab10:	2301      	movs	r3, #1
 800ab12:	6013      	str	r3, [r2, #0]
 800ab14:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800ab16:	b113      	cbz	r3, 800ab1e <_dtoa_r+0xc6>
 800ab18:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800ab1a:	4b84      	ldr	r3, [pc, #528]	@ (800ad2c <_dtoa_r+0x2d4>)
 800ab1c:	6013      	str	r3, [r2, #0]
 800ab1e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 800ad40 <_dtoa_r+0x2e8>
 800ab22:	f000 bd33 	b.w	800b58c <_dtoa_r+0xb34>
 800ab26:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800ab2a:	aa16      	add	r2, sp, #88	@ 0x58
 800ab2c:	a917      	add	r1, sp, #92	@ 0x5c
 800ab2e:	4658      	mov	r0, fp
 800ab30:	f001 fcd0 	bl	800c4d4 <__d2b>
 800ab34:	f3c7 560a 	ubfx	r6, r7, #20, #11
 800ab38:	4681      	mov	r9, r0
 800ab3a:	2e00      	cmp	r6, #0
 800ab3c:	d077      	beq.n	800ac2e <_dtoa_r+0x1d6>
 800ab3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ab40:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800ab44:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ab48:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800ab4c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800ab50:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800ab54:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800ab58:	4619      	mov	r1, r3
 800ab5a:	2200      	movs	r2, #0
 800ab5c:	4b74      	ldr	r3, [pc, #464]	@ (800ad30 <_dtoa_r+0x2d8>)
 800ab5e:	f7f5 fb93 	bl	8000288 <__aeabi_dsub>
 800ab62:	a369      	add	r3, pc, #420	@ (adr r3, 800ad08 <_dtoa_r+0x2b0>)
 800ab64:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab68:	f7f5 fd46 	bl	80005f8 <__aeabi_dmul>
 800ab6c:	a368      	add	r3, pc, #416	@ (adr r3, 800ad10 <_dtoa_r+0x2b8>)
 800ab6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab72:	f7f5 fb8b 	bl	800028c <__adddf3>
 800ab76:	4604      	mov	r4, r0
 800ab78:	4630      	mov	r0, r6
 800ab7a:	460d      	mov	r5, r1
 800ab7c:	f7f5 fcd2 	bl	8000524 <__aeabi_i2d>
 800ab80:	a365      	add	r3, pc, #404	@ (adr r3, 800ad18 <_dtoa_r+0x2c0>)
 800ab82:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab86:	f7f5 fd37 	bl	80005f8 <__aeabi_dmul>
 800ab8a:	4602      	mov	r2, r0
 800ab8c:	460b      	mov	r3, r1
 800ab8e:	4620      	mov	r0, r4
 800ab90:	4629      	mov	r1, r5
 800ab92:	f7f5 fb7b 	bl	800028c <__adddf3>
 800ab96:	4604      	mov	r4, r0
 800ab98:	460d      	mov	r5, r1
 800ab9a:	f7f5 ffdd 	bl	8000b58 <__aeabi_d2iz>
 800ab9e:	2200      	movs	r2, #0
 800aba0:	4607      	mov	r7, r0
 800aba2:	2300      	movs	r3, #0
 800aba4:	4620      	mov	r0, r4
 800aba6:	4629      	mov	r1, r5
 800aba8:	f7f5 ff98 	bl	8000adc <__aeabi_dcmplt>
 800abac:	b140      	cbz	r0, 800abc0 <_dtoa_r+0x168>
 800abae:	4638      	mov	r0, r7
 800abb0:	f7f5 fcb8 	bl	8000524 <__aeabi_i2d>
 800abb4:	4622      	mov	r2, r4
 800abb6:	462b      	mov	r3, r5
 800abb8:	f7f5 ff86 	bl	8000ac8 <__aeabi_dcmpeq>
 800abbc:	b900      	cbnz	r0, 800abc0 <_dtoa_r+0x168>
 800abbe:	3f01      	subs	r7, #1
 800abc0:	2f16      	cmp	r7, #22
 800abc2:	d851      	bhi.n	800ac68 <_dtoa_r+0x210>
 800abc4:	4b5b      	ldr	r3, [pc, #364]	@ (800ad34 <_dtoa_r+0x2dc>)
 800abc6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800abca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abce:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800abd2:	f7f5 ff83 	bl	8000adc <__aeabi_dcmplt>
 800abd6:	2800      	cmp	r0, #0
 800abd8:	d048      	beq.n	800ac6c <_dtoa_r+0x214>
 800abda:	3f01      	subs	r7, #1
 800abdc:	2300      	movs	r3, #0
 800abde:	9312      	str	r3, [sp, #72]	@ 0x48
 800abe0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800abe2:	1b9b      	subs	r3, r3, r6
 800abe4:	1e5a      	subs	r2, r3, #1
 800abe6:	bf44      	itt	mi
 800abe8:	f1c3 0801 	rsbmi	r8, r3, #1
 800abec:	2300      	movmi	r3, #0
 800abee:	9208      	str	r2, [sp, #32]
 800abf0:	bf54      	ite	pl
 800abf2:	f04f 0800 	movpl.w	r8, #0
 800abf6:	9308      	strmi	r3, [sp, #32]
 800abf8:	2f00      	cmp	r7, #0
 800abfa:	db39      	blt.n	800ac70 <_dtoa_r+0x218>
 800abfc:	9b08      	ldr	r3, [sp, #32]
 800abfe:	970f      	str	r7, [sp, #60]	@ 0x3c
 800ac00:	443b      	add	r3, r7
 800ac02:	9308      	str	r3, [sp, #32]
 800ac04:	2300      	movs	r3, #0
 800ac06:	930a      	str	r3, [sp, #40]	@ 0x28
 800ac08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ac0a:	2b09      	cmp	r3, #9
 800ac0c:	d864      	bhi.n	800acd8 <_dtoa_r+0x280>
 800ac0e:	2b05      	cmp	r3, #5
 800ac10:	bfc4      	itt	gt
 800ac12:	3b04      	subgt	r3, #4
 800ac14:	9309      	strgt	r3, [sp, #36]	@ 0x24
 800ac16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ac18:	f1a3 0302 	sub.w	r3, r3, #2
 800ac1c:	bfcc      	ite	gt
 800ac1e:	2400      	movgt	r4, #0
 800ac20:	2401      	movle	r4, #1
 800ac22:	2b03      	cmp	r3, #3
 800ac24:	d863      	bhi.n	800acee <_dtoa_r+0x296>
 800ac26:	e8df f003 	tbb	[pc, r3]
 800ac2a:	372a      	.short	0x372a
 800ac2c:	5535      	.short	0x5535
 800ac2e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 800ac32:	441e      	add	r6, r3
 800ac34:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800ac38:	2b20      	cmp	r3, #32
 800ac3a:	bfc1      	itttt	gt
 800ac3c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800ac40:	409f      	lslgt	r7, r3
 800ac42:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800ac46:	fa24 f303 	lsrgt.w	r3, r4, r3
 800ac4a:	bfd6      	itet	le
 800ac4c:	f1c3 0320 	rsble	r3, r3, #32
 800ac50:	ea47 0003 	orrgt.w	r0, r7, r3
 800ac54:	fa04 f003 	lslle.w	r0, r4, r3
 800ac58:	f7f5 fc54 	bl	8000504 <__aeabi_ui2d>
 800ac5c:	2201      	movs	r2, #1
 800ac5e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800ac62:	3e01      	subs	r6, #1
 800ac64:	9214      	str	r2, [sp, #80]	@ 0x50
 800ac66:	e777      	b.n	800ab58 <_dtoa_r+0x100>
 800ac68:	2301      	movs	r3, #1
 800ac6a:	e7b8      	b.n	800abde <_dtoa_r+0x186>
 800ac6c:	9012      	str	r0, [sp, #72]	@ 0x48
 800ac6e:	e7b7      	b.n	800abe0 <_dtoa_r+0x188>
 800ac70:	427b      	negs	r3, r7
 800ac72:	930a      	str	r3, [sp, #40]	@ 0x28
 800ac74:	2300      	movs	r3, #0
 800ac76:	eba8 0807 	sub.w	r8, r8, r7
 800ac7a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ac7c:	e7c4      	b.n	800ac08 <_dtoa_r+0x1b0>
 800ac7e:	2300      	movs	r3, #0
 800ac80:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ac82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ac84:	2b00      	cmp	r3, #0
 800ac86:	dc35      	bgt.n	800acf4 <_dtoa_r+0x29c>
 800ac88:	2301      	movs	r3, #1
 800ac8a:	9300      	str	r3, [sp, #0]
 800ac8c:	9307      	str	r3, [sp, #28]
 800ac8e:	461a      	mov	r2, r3
 800ac90:	920e      	str	r2, [sp, #56]	@ 0x38
 800ac92:	e00b      	b.n	800acac <_dtoa_r+0x254>
 800ac94:	2301      	movs	r3, #1
 800ac96:	e7f3      	b.n	800ac80 <_dtoa_r+0x228>
 800ac98:	2300      	movs	r3, #0
 800ac9a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ac9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ac9e:	18fb      	adds	r3, r7, r3
 800aca0:	9300      	str	r3, [sp, #0]
 800aca2:	3301      	adds	r3, #1
 800aca4:	2b01      	cmp	r3, #1
 800aca6:	9307      	str	r3, [sp, #28]
 800aca8:	bfb8      	it	lt
 800acaa:	2301      	movlt	r3, #1
 800acac:	f8db 001c 	ldr.w	r0, [fp, #28]
 800acb0:	2100      	movs	r1, #0
 800acb2:	2204      	movs	r2, #4
 800acb4:	f102 0514 	add.w	r5, r2, #20
 800acb8:	429d      	cmp	r5, r3
 800acba:	d91f      	bls.n	800acfc <_dtoa_r+0x2a4>
 800acbc:	6041      	str	r1, [r0, #4]
 800acbe:	4658      	mov	r0, fp
 800acc0:	f001 f824 	bl	800bd0c <_Balloc>
 800acc4:	4682      	mov	sl, r0
 800acc6:	2800      	cmp	r0, #0
 800acc8:	d13c      	bne.n	800ad44 <_dtoa_r+0x2ec>
 800acca:	4b1b      	ldr	r3, [pc, #108]	@ (800ad38 <_dtoa_r+0x2e0>)
 800accc:	4602      	mov	r2, r0
 800acce:	f240 11af 	movw	r1, #431	@ 0x1af
 800acd2:	e6d8      	b.n	800aa86 <_dtoa_r+0x2e>
 800acd4:	2301      	movs	r3, #1
 800acd6:	e7e0      	b.n	800ac9a <_dtoa_r+0x242>
 800acd8:	2401      	movs	r4, #1
 800acda:	2300      	movs	r3, #0
 800acdc:	9309      	str	r3, [sp, #36]	@ 0x24
 800acde:	940b      	str	r4, [sp, #44]	@ 0x2c
 800ace0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800ace4:	9300      	str	r3, [sp, #0]
 800ace6:	9307      	str	r3, [sp, #28]
 800ace8:	2200      	movs	r2, #0
 800acea:	2312      	movs	r3, #18
 800acec:	e7d0      	b.n	800ac90 <_dtoa_r+0x238>
 800acee:	2301      	movs	r3, #1
 800acf0:	930b      	str	r3, [sp, #44]	@ 0x2c
 800acf2:	e7f5      	b.n	800ace0 <_dtoa_r+0x288>
 800acf4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800acf6:	9300      	str	r3, [sp, #0]
 800acf8:	9307      	str	r3, [sp, #28]
 800acfa:	e7d7      	b.n	800acac <_dtoa_r+0x254>
 800acfc:	3101      	adds	r1, #1
 800acfe:	0052      	lsls	r2, r2, #1
 800ad00:	e7d8      	b.n	800acb4 <_dtoa_r+0x25c>
 800ad02:	bf00      	nop
 800ad04:	f3af 8000 	nop.w
 800ad08:	636f4361 	.word	0x636f4361
 800ad0c:	3fd287a7 	.word	0x3fd287a7
 800ad10:	8b60c8b3 	.word	0x8b60c8b3
 800ad14:	3fc68a28 	.word	0x3fc68a28
 800ad18:	509f79fb 	.word	0x509f79fb
 800ad1c:	3fd34413 	.word	0x3fd34413
 800ad20:	0800d4a5 	.word	0x0800d4a5
 800ad24:	0800d52b 	.word	0x0800d52b
 800ad28:	7ff00000 	.word	0x7ff00000
 800ad2c:	0800d482 	.word	0x0800d482
 800ad30:	3ff80000 	.word	0x3ff80000
 800ad34:	0800d688 	.word	0x0800d688
 800ad38:	0800d583 	.word	0x0800d583
 800ad3c:	0800d527 	.word	0x0800d527
 800ad40:	0800d481 	.word	0x0800d481
 800ad44:	f8db 301c 	ldr.w	r3, [fp, #28]
 800ad48:	6018      	str	r0, [r3, #0]
 800ad4a:	9b07      	ldr	r3, [sp, #28]
 800ad4c:	2b0e      	cmp	r3, #14
 800ad4e:	f200 80a4 	bhi.w	800ae9a <_dtoa_r+0x442>
 800ad52:	2c00      	cmp	r4, #0
 800ad54:	f000 80a1 	beq.w	800ae9a <_dtoa_r+0x442>
 800ad58:	2f00      	cmp	r7, #0
 800ad5a:	dd33      	ble.n	800adc4 <_dtoa_r+0x36c>
 800ad5c:	4bad      	ldr	r3, [pc, #692]	@ (800b014 <_dtoa_r+0x5bc>)
 800ad5e:	f007 020f 	and.w	r2, r7, #15
 800ad62:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ad66:	ed93 7b00 	vldr	d7, [r3]
 800ad6a:	05f8      	lsls	r0, r7, #23
 800ad6c:	ed8d 7b04 	vstr	d7, [sp, #16]
 800ad70:	ea4f 1427 	mov.w	r4, r7, asr #4
 800ad74:	d516      	bpl.n	800ada4 <_dtoa_r+0x34c>
 800ad76:	4ba8      	ldr	r3, [pc, #672]	@ (800b018 <_dtoa_r+0x5c0>)
 800ad78:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800ad7c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800ad80:	f7f5 fd64 	bl	800084c <__aeabi_ddiv>
 800ad84:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ad88:	f004 040f 	and.w	r4, r4, #15
 800ad8c:	2603      	movs	r6, #3
 800ad8e:	4da2      	ldr	r5, [pc, #648]	@ (800b018 <_dtoa_r+0x5c0>)
 800ad90:	b954      	cbnz	r4, 800ada8 <_dtoa_r+0x350>
 800ad92:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ad96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ad9a:	f7f5 fd57 	bl	800084c <__aeabi_ddiv>
 800ad9e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ada2:	e028      	b.n	800adf6 <_dtoa_r+0x39e>
 800ada4:	2602      	movs	r6, #2
 800ada6:	e7f2      	b.n	800ad8e <_dtoa_r+0x336>
 800ada8:	07e1      	lsls	r1, r4, #31
 800adaa:	d508      	bpl.n	800adbe <_dtoa_r+0x366>
 800adac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800adb0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800adb4:	f7f5 fc20 	bl	80005f8 <__aeabi_dmul>
 800adb8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800adbc:	3601      	adds	r6, #1
 800adbe:	1064      	asrs	r4, r4, #1
 800adc0:	3508      	adds	r5, #8
 800adc2:	e7e5      	b.n	800ad90 <_dtoa_r+0x338>
 800adc4:	f000 80d2 	beq.w	800af6c <_dtoa_r+0x514>
 800adc8:	427c      	negs	r4, r7
 800adca:	4b92      	ldr	r3, [pc, #584]	@ (800b014 <_dtoa_r+0x5bc>)
 800adcc:	4d92      	ldr	r5, [pc, #584]	@ (800b018 <_dtoa_r+0x5c0>)
 800adce:	f004 020f 	and.w	r2, r4, #15
 800add2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800add6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800adda:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800adde:	f7f5 fc0b 	bl	80005f8 <__aeabi_dmul>
 800ade2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ade6:	1124      	asrs	r4, r4, #4
 800ade8:	2300      	movs	r3, #0
 800adea:	2602      	movs	r6, #2
 800adec:	2c00      	cmp	r4, #0
 800adee:	f040 80b2 	bne.w	800af56 <_dtoa_r+0x4fe>
 800adf2:	2b00      	cmp	r3, #0
 800adf4:	d1d3      	bne.n	800ad9e <_dtoa_r+0x346>
 800adf6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800adf8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800adfc:	2b00      	cmp	r3, #0
 800adfe:	f000 80b7 	beq.w	800af70 <_dtoa_r+0x518>
 800ae02:	4b86      	ldr	r3, [pc, #536]	@ (800b01c <_dtoa_r+0x5c4>)
 800ae04:	2200      	movs	r2, #0
 800ae06:	4620      	mov	r0, r4
 800ae08:	4629      	mov	r1, r5
 800ae0a:	f7f5 fe67 	bl	8000adc <__aeabi_dcmplt>
 800ae0e:	2800      	cmp	r0, #0
 800ae10:	f000 80ae 	beq.w	800af70 <_dtoa_r+0x518>
 800ae14:	9b07      	ldr	r3, [sp, #28]
 800ae16:	2b00      	cmp	r3, #0
 800ae18:	f000 80aa 	beq.w	800af70 <_dtoa_r+0x518>
 800ae1c:	9b00      	ldr	r3, [sp, #0]
 800ae1e:	2b00      	cmp	r3, #0
 800ae20:	dd37      	ble.n	800ae92 <_dtoa_r+0x43a>
 800ae22:	1e7b      	subs	r3, r7, #1
 800ae24:	9304      	str	r3, [sp, #16]
 800ae26:	4620      	mov	r0, r4
 800ae28:	4b7d      	ldr	r3, [pc, #500]	@ (800b020 <_dtoa_r+0x5c8>)
 800ae2a:	2200      	movs	r2, #0
 800ae2c:	4629      	mov	r1, r5
 800ae2e:	f7f5 fbe3 	bl	80005f8 <__aeabi_dmul>
 800ae32:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ae36:	9c00      	ldr	r4, [sp, #0]
 800ae38:	3601      	adds	r6, #1
 800ae3a:	4630      	mov	r0, r6
 800ae3c:	f7f5 fb72 	bl	8000524 <__aeabi_i2d>
 800ae40:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800ae44:	f7f5 fbd8 	bl	80005f8 <__aeabi_dmul>
 800ae48:	4b76      	ldr	r3, [pc, #472]	@ (800b024 <_dtoa_r+0x5cc>)
 800ae4a:	2200      	movs	r2, #0
 800ae4c:	f7f5 fa1e 	bl	800028c <__adddf3>
 800ae50:	4605      	mov	r5, r0
 800ae52:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800ae56:	2c00      	cmp	r4, #0
 800ae58:	f040 808d 	bne.w	800af76 <_dtoa_r+0x51e>
 800ae5c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ae60:	4b71      	ldr	r3, [pc, #452]	@ (800b028 <_dtoa_r+0x5d0>)
 800ae62:	2200      	movs	r2, #0
 800ae64:	f7f5 fa10 	bl	8000288 <__aeabi_dsub>
 800ae68:	4602      	mov	r2, r0
 800ae6a:	460b      	mov	r3, r1
 800ae6c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800ae70:	462a      	mov	r2, r5
 800ae72:	4633      	mov	r3, r6
 800ae74:	f7f5 fe50 	bl	8000b18 <__aeabi_dcmpgt>
 800ae78:	2800      	cmp	r0, #0
 800ae7a:	f040 828b 	bne.w	800b394 <_dtoa_r+0x93c>
 800ae7e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ae82:	462a      	mov	r2, r5
 800ae84:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800ae88:	f7f5 fe28 	bl	8000adc <__aeabi_dcmplt>
 800ae8c:	2800      	cmp	r0, #0
 800ae8e:	f040 8128 	bne.w	800b0e2 <_dtoa_r+0x68a>
 800ae92:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800ae96:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800ae9a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800ae9c:	2b00      	cmp	r3, #0
 800ae9e:	f2c0 815a 	blt.w	800b156 <_dtoa_r+0x6fe>
 800aea2:	2f0e      	cmp	r7, #14
 800aea4:	f300 8157 	bgt.w	800b156 <_dtoa_r+0x6fe>
 800aea8:	4b5a      	ldr	r3, [pc, #360]	@ (800b014 <_dtoa_r+0x5bc>)
 800aeaa:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800aeae:	ed93 7b00 	vldr	d7, [r3]
 800aeb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800aeb4:	2b00      	cmp	r3, #0
 800aeb6:	ed8d 7b00 	vstr	d7, [sp]
 800aeba:	da03      	bge.n	800aec4 <_dtoa_r+0x46c>
 800aebc:	9b07      	ldr	r3, [sp, #28]
 800aebe:	2b00      	cmp	r3, #0
 800aec0:	f340 8101 	ble.w	800b0c6 <_dtoa_r+0x66e>
 800aec4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800aec8:	4656      	mov	r6, sl
 800aeca:	e9dd 2300 	ldrd	r2, r3, [sp]
 800aece:	4620      	mov	r0, r4
 800aed0:	4629      	mov	r1, r5
 800aed2:	f7f5 fcbb 	bl	800084c <__aeabi_ddiv>
 800aed6:	f7f5 fe3f 	bl	8000b58 <__aeabi_d2iz>
 800aeda:	4680      	mov	r8, r0
 800aedc:	f7f5 fb22 	bl	8000524 <__aeabi_i2d>
 800aee0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800aee4:	f7f5 fb88 	bl	80005f8 <__aeabi_dmul>
 800aee8:	4602      	mov	r2, r0
 800aeea:	460b      	mov	r3, r1
 800aeec:	4620      	mov	r0, r4
 800aeee:	4629      	mov	r1, r5
 800aef0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800aef4:	f7f5 f9c8 	bl	8000288 <__aeabi_dsub>
 800aef8:	f806 4b01 	strb.w	r4, [r6], #1
 800aefc:	9d07      	ldr	r5, [sp, #28]
 800aefe:	eba6 040a 	sub.w	r4, r6, sl
 800af02:	42a5      	cmp	r5, r4
 800af04:	4602      	mov	r2, r0
 800af06:	460b      	mov	r3, r1
 800af08:	f040 8117 	bne.w	800b13a <_dtoa_r+0x6e2>
 800af0c:	f7f5 f9be 	bl	800028c <__adddf3>
 800af10:	e9dd 2300 	ldrd	r2, r3, [sp]
 800af14:	4604      	mov	r4, r0
 800af16:	460d      	mov	r5, r1
 800af18:	f7f5 fdfe 	bl	8000b18 <__aeabi_dcmpgt>
 800af1c:	2800      	cmp	r0, #0
 800af1e:	f040 80f9 	bne.w	800b114 <_dtoa_r+0x6bc>
 800af22:	e9dd 2300 	ldrd	r2, r3, [sp]
 800af26:	4620      	mov	r0, r4
 800af28:	4629      	mov	r1, r5
 800af2a:	f7f5 fdcd 	bl	8000ac8 <__aeabi_dcmpeq>
 800af2e:	b118      	cbz	r0, 800af38 <_dtoa_r+0x4e0>
 800af30:	f018 0f01 	tst.w	r8, #1
 800af34:	f040 80ee 	bne.w	800b114 <_dtoa_r+0x6bc>
 800af38:	4649      	mov	r1, r9
 800af3a:	4658      	mov	r0, fp
 800af3c:	f000 ff26 	bl	800bd8c <_Bfree>
 800af40:	2300      	movs	r3, #0
 800af42:	7033      	strb	r3, [r6, #0]
 800af44:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800af46:	3701      	adds	r7, #1
 800af48:	601f      	str	r7, [r3, #0]
 800af4a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800af4c:	2b00      	cmp	r3, #0
 800af4e:	f000 831d 	beq.w	800b58c <_dtoa_r+0xb34>
 800af52:	601e      	str	r6, [r3, #0]
 800af54:	e31a      	b.n	800b58c <_dtoa_r+0xb34>
 800af56:	07e2      	lsls	r2, r4, #31
 800af58:	d505      	bpl.n	800af66 <_dtoa_r+0x50e>
 800af5a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800af5e:	f7f5 fb4b 	bl	80005f8 <__aeabi_dmul>
 800af62:	3601      	adds	r6, #1
 800af64:	2301      	movs	r3, #1
 800af66:	1064      	asrs	r4, r4, #1
 800af68:	3508      	adds	r5, #8
 800af6a:	e73f      	b.n	800adec <_dtoa_r+0x394>
 800af6c:	2602      	movs	r6, #2
 800af6e:	e742      	b.n	800adf6 <_dtoa_r+0x39e>
 800af70:	9c07      	ldr	r4, [sp, #28]
 800af72:	9704      	str	r7, [sp, #16]
 800af74:	e761      	b.n	800ae3a <_dtoa_r+0x3e2>
 800af76:	4b27      	ldr	r3, [pc, #156]	@ (800b014 <_dtoa_r+0x5bc>)
 800af78:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800af7a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800af7e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800af82:	4454      	add	r4, sl
 800af84:	2900      	cmp	r1, #0
 800af86:	d053      	beq.n	800b030 <_dtoa_r+0x5d8>
 800af88:	4928      	ldr	r1, [pc, #160]	@ (800b02c <_dtoa_r+0x5d4>)
 800af8a:	2000      	movs	r0, #0
 800af8c:	f7f5 fc5e 	bl	800084c <__aeabi_ddiv>
 800af90:	4633      	mov	r3, r6
 800af92:	462a      	mov	r2, r5
 800af94:	f7f5 f978 	bl	8000288 <__aeabi_dsub>
 800af98:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800af9c:	4656      	mov	r6, sl
 800af9e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800afa2:	f7f5 fdd9 	bl	8000b58 <__aeabi_d2iz>
 800afa6:	4605      	mov	r5, r0
 800afa8:	f7f5 fabc 	bl	8000524 <__aeabi_i2d>
 800afac:	4602      	mov	r2, r0
 800afae:	460b      	mov	r3, r1
 800afb0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800afb4:	f7f5 f968 	bl	8000288 <__aeabi_dsub>
 800afb8:	3530      	adds	r5, #48	@ 0x30
 800afba:	4602      	mov	r2, r0
 800afbc:	460b      	mov	r3, r1
 800afbe:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800afc2:	f806 5b01 	strb.w	r5, [r6], #1
 800afc6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800afca:	f7f5 fd87 	bl	8000adc <__aeabi_dcmplt>
 800afce:	2800      	cmp	r0, #0
 800afd0:	d171      	bne.n	800b0b6 <_dtoa_r+0x65e>
 800afd2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800afd6:	4911      	ldr	r1, [pc, #68]	@ (800b01c <_dtoa_r+0x5c4>)
 800afd8:	2000      	movs	r0, #0
 800afda:	f7f5 f955 	bl	8000288 <__aeabi_dsub>
 800afde:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800afe2:	f7f5 fd7b 	bl	8000adc <__aeabi_dcmplt>
 800afe6:	2800      	cmp	r0, #0
 800afe8:	f040 8095 	bne.w	800b116 <_dtoa_r+0x6be>
 800afec:	42a6      	cmp	r6, r4
 800afee:	f43f af50 	beq.w	800ae92 <_dtoa_r+0x43a>
 800aff2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800aff6:	4b0a      	ldr	r3, [pc, #40]	@ (800b020 <_dtoa_r+0x5c8>)
 800aff8:	2200      	movs	r2, #0
 800affa:	f7f5 fafd 	bl	80005f8 <__aeabi_dmul>
 800affe:	4b08      	ldr	r3, [pc, #32]	@ (800b020 <_dtoa_r+0x5c8>)
 800b000:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800b004:	2200      	movs	r2, #0
 800b006:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b00a:	f7f5 faf5 	bl	80005f8 <__aeabi_dmul>
 800b00e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800b012:	e7c4      	b.n	800af9e <_dtoa_r+0x546>
 800b014:	0800d688 	.word	0x0800d688
 800b018:	0800d660 	.word	0x0800d660
 800b01c:	3ff00000 	.word	0x3ff00000
 800b020:	40240000 	.word	0x40240000
 800b024:	401c0000 	.word	0x401c0000
 800b028:	40140000 	.word	0x40140000
 800b02c:	3fe00000 	.word	0x3fe00000
 800b030:	4631      	mov	r1, r6
 800b032:	4628      	mov	r0, r5
 800b034:	f7f5 fae0 	bl	80005f8 <__aeabi_dmul>
 800b038:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800b03c:	9415      	str	r4, [sp, #84]	@ 0x54
 800b03e:	4656      	mov	r6, sl
 800b040:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b044:	f7f5 fd88 	bl	8000b58 <__aeabi_d2iz>
 800b048:	4605      	mov	r5, r0
 800b04a:	f7f5 fa6b 	bl	8000524 <__aeabi_i2d>
 800b04e:	4602      	mov	r2, r0
 800b050:	460b      	mov	r3, r1
 800b052:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b056:	f7f5 f917 	bl	8000288 <__aeabi_dsub>
 800b05a:	3530      	adds	r5, #48	@ 0x30
 800b05c:	f806 5b01 	strb.w	r5, [r6], #1
 800b060:	4602      	mov	r2, r0
 800b062:	460b      	mov	r3, r1
 800b064:	42a6      	cmp	r6, r4
 800b066:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800b06a:	f04f 0200 	mov.w	r2, #0
 800b06e:	d124      	bne.n	800b0ba <_dtoa_r+0x662>
 800b070:	4bac      	ldr	r3, [pc, #688]	@ (800b324 <_dtoa_r+0x8cc>)
 800b072:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800b076:	f7f5 f909 	bl	800028c <__adddf3>
 800b07a:	4602      	mov	r2, r0
 800b07c:	460b      	mov	r3, r1
 800b07e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b082:	f7f5 fd49 	bl	8000b18 <__aeabi_dcmpgt>
 800b086:	2800      	cmp	r0, #0
 800b088:	d145      	bne.n	800b116 <_dtoa_r+0x6be>
 800b08a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800b08e:	49a5      	ldr	r1, [pc, #660]	@ (800b324 <_dtoa_r+0x8cc>)
 800b090:	2000      	movs	r0, #0
 800b092:	f7f5 f8f9 	bl	8000288 <__aeabi_dsub>
 800b096:	4602      	mov	r2, r0
 800b098:	460b      	mov	r3, r1
 800b09a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800b09e:	f7f5 fd1d 	bl	8000adc <__aeabi_dcmplt>
 800b0a2:	2800      	cmp	r0, #0
 800b0a4:	f43f aef5 	beq.w	800ae92 <_dtoa_r+0x43a>
 800b0a8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800b0aa:	1e73      	subs	r3, r6, #1
 800b0ac:	9315      	str	r3, [sp, #84]	@ 0x54
 800b0ae:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800b0b2:	2b30      	cmp	r3, #48	@ 0x30
 800b0b4:	d0f8      	beq.n	800b0a8 <_dtoa_r+0x650>
 800b0b6:	9f04      	ldr	r7, [sp, #16]
 800b0b8:	e73e      	b.n	800af38 <_dtoa_r+0x4e0>
 800b0ba:	4b9b      	ldr	r3, [pc, #620]	@ (800b328 <_dtoa_r+0x8d0>)
 800b0bc:	f7f5 fa9c 	bl	80005f8 <__aeabi_dmul>
 800b0c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800b0c4:	e7bc      	b.n	800b040 <_dtoa_r+0x5e8>
 800b0c6:	d10c      	bne.n	800b0e2 <_dtoa_r+0x68a>
 800b0c8:	4b98      	ldr	r3, [pc, #608]	@ (800b32c <_dtoa_r+0x8d4>)
 800b0ca:	2200      	movs	r2, #0
 800b0cc:	e9dd 0100 	ldrd	r0, r1, [sp]
 800b0d0:	f7f5 fa92 	bl	80005f8 <__aeabi_dmul>
 800b0d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800b0d8:	f7f5 fd14 	bl	8000b04 <__aeabi_dcmpge>
 800b0dc:	2800      	cmp	r0, #0
 800b0de:	f000 8157 	beq.w	800b390 <_dtoa_r+0x938>
 800b0e2:	2400      	movs	r4, #0
 800b0e4:	4625      	mov	r5, r4
 800b0e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b0e8:	43db      	mvns	r3, r3
 800b0ea:	9304      	str	r3, [sp, #16]
 800b0ec:	4656      	mov	r6, sl
 800b0ee:	2700      	movs	r7, #0
 800b0f0:	4621      	mov	r1, r4
 800b0f2:	4658      	mov	r0, fp
 800b0f4:	f000 fe4a 	bl	800bd8c <_Bfree>
 800b0f8:	2d00      	cmp	r5, #0
 800b0fa:	d0dc      	beq.n	800b0b6 <_dtoa_r+0x65e>
 800b0fc:	b12f      	cbz	r7, 800b10a <_dtoa_r+0x6b2>
 800b0fe:	42af      	cmp	r7, r5
 800b100:	d003      	beq.n	800b10a <_dtoa_r+0x6b2>
 800b102:	4639      	mov	r1, r7
 800b104:	4658      	mov	r0, fp
 800b106:	f000 fe41 	bl	800bd8c <_Bfree>
 800b10a:	4629      	mov	r1, r5
 800b10c:	4658      	mov	r0, fp
 800b10e:	f000 fe3d 	bl	800bd8c <_Bfree>
 800b112:	e7d0      	b.n	800b0b6 <_dtoa_r+0x65e>
 800b114:	9704      	str	r7, [sp, #16]
 800b116:	4633      	mov	r3, r6
 800b118:	461e      	mov	r6, r3
 800b11a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800b11e:	2a39      	cmp	r2, #57	@ 0x39
 800b120:	d107      	bne.n	800b132 <_dtoa_r+0x6da>
 800b122:	459a      	cmp	sl, r3
 800b124:	d1f8      	bne.n	800b118 <_dtoa_r+0x6c0>
 800b126:	9a04      	ldr	r2, [sp, #16]
 800b128:	3201      	adds	r2, #1
 800b12a:	9204      	str	r2, [sp, #16]
 800b12c:	2230      	movs	r2, #48	@ 0x30
 800b12e:	f88a 2000 	strb.w	r2, [sl]
 800b132:	781a      	ldrb	r2, [r3, #0]
 800b134:	3201      	adds	r2, #1
 800b136:	701a      	strb	r2, [r3, #0]
 800b138:	e7bd      	b.n	800b0b6 <_dtoa_r+0x65e>
 800b13a:	4b7b      	ldr	r3, [pc, #492]	@ (800b328 <_dtoa_r+0x8d0>)
 800b13c:	2200      	movs	r2, #0
 800b13e:	f7f5 fa5b 	bl	80005f8 <__aeabi_dmul>
 800b142:	2200      	movs	r2, #0
 800b144:	2300      	movs	r3, #0
 800b146:	4604      	mov	r4, r0
 800b148:	460d      	mov	r5, r1
 800b14a:	f7f5 fcbd 	bl	8000ac8 <__aeabi_dcmpeq>
 800b14e:	2800      	cmp	r0, #0
 800b150:	f43f aebb 	beq.w	800aeca <_dtoa_r+0x472>
 800b154:	e6f0      	b.n	800af38 <_dtoa_r+0x4e0>
 800b156:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800b158:	2a00      	cmp	r2, #0
 800b15a:	f000 80db 	beq.w	800b314 <_dtoa_r+0x8bc>
 800b15e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800b160:	2a01      	cmp	r2, #1
 800b162:	f300 80bf 	bgt.w	800b2e4 <_dtoa_r+0x88c>
 800b166:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 800b168:	2a00      	cmp	r2, #0
 800b16a:	f000 80b7 	beq.w	800b2dc <_dtoa_r+0x884>
 800b16e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800b172:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800b174:	4646      	mov	r6, r8
 800b176:	9a08      	ldr	r2, [sp, #32]
 800b178:	2101      	movs	r1, #1
 800b17a:	441a      	add	r2, r3
 800b17c:	4658      	mov	r0, fp
 800b17e:	4498      	add	r8, r3
 800b180:	9208      	str	r2, [sp, #32]
 800b182:	f000 ff01 	bl	800bf88 <__i2b>
 800b186:	4605      	mov	r5, r0
 800b188:	b15e      	cbz	r6, 800b1a2 <_dtoa_r+0x74a>
 800b18a:	9b08      	ldr	r3, [sp, #32]
 800b18c:	2b00      	cmp	r3, #0
 800b18e:	dd08      	ble.n	800b1a2 <_dtoa_r+0x74a>
 800b190:	42b3      	cmp	r3, r6
 800b192:	9a08      	ldr	r2, [sp, #32]
 800b194:	bfa8      	it	ge
 800b196:	4633      	movge	r3, r6
 800b198:	eba8 0803 	sub.w	r8, r8, r3
 800b19c:	1af6      	subs	r6, r6, r3
 800b19e:	1ad3      	subs	r3, r2, r3
 800b1a0:	9308      	str	r3, [sp, #32]
 800b1a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b1a4:	b1f3      	cbz	r3, 800b1e4 <_dtoa_r+0x78c>
 800b1a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b1a8:	2b00      	cmp	r3, #0
 800b1aa:	f000 80b7 	beq.w	800b31c <_dtoa_r+0x8c4>
 800b1ae:	b18c      	cbz	r4, 800b1d4 <_dtoa_r+0x77c>
 800b1b0:	4629      	mov	r1, r5
 800b1b2:	4622      	mov	r2, r4
 800b1b4:	4658      	mov	r0, fp
 800b1b6:	f000 ffa7 	bl	800c108 <__pow5mult>
 800b1ba:	464a      	mov	r2, r9
 800b1bc:	4601      	mov	r1, r0
 800b1be:	4605      	mov	r5, r0
 800b1c0:	4658      	mov	r0, fp
 800b1c2:	f000 fef7 	bl	800bfb4 <__multiply>
 800b1c6:	4649      	mov	r1, r9
 800b1c8:	9004      	str	r0, [sp, #16]
 800b1ca:	4658      	mov	r0, fp
 800b1cc:	f000 fdde 	bl	800bd8c <_Bfree>
 800b1d0:	9b04      	ldr	r3, [sp, #16]
 800b1d2:	4699      	mov	r9, r3
 800b1d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b1d6:	1b1a      	subs	r2, r3, r4
 800b1d8:	d004      	beq.n	800b1e4 <_dtoa_r+0x78c>
 800b1da:	4649      	mov	r1, r9
 800b1dc:	4658      	mov	r0, fp
 800b1de:	f000 ff93 	bl	800c108 <__pow5mult>
 800b1e2:	4681      	mov	r9, r0
 800b1e4:	2101      	movs	r1, #1
 800b1e6:	4658      	mov	r0, fp
 800b1e8:	f000 fece 	bl	800bf88 <__i2b>
 800b1ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b1ee:	4604      	mov	r4, r0
 800b1f0:	2b00      	cmp	r3, #0
 800b1f2:	f000 81cf 	beq.w	800b594 <_dtoa_r+0xb3c>
 800b1f6:	461a      	mov	r2, r3
 800b1f8:	4601      	mov	r1, r0
 800b1fa:	4658      	mov	r0, fp
 800b1fc:	f000 ff84 	bl	800c108 <__pow5mult>
 800b200:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b202:	2b01      	cmp	r3, #1
 800b204:	4604      	mov	r4, r0
 800b206:	f300 8095 	bgt.w	800b334 <_dtoa_r+0x8dc>
 800b20a:	9b02      	ldr	r3, [sp, #8]
 800b20c:	2b00      	cmp	r3, #0
 800b20e:	f040 8087 	bne.w	800b320 <_dtoa_r+0x8c8>
 800b212:	9b03      	ldr	r3, [sp, #12]
 800b214:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800b218:	2b00      	cmp	r3, #0
 800b21a:	f040 8089 	bne.w	800b330 <_dtoa_r+0x8d8>
 800b21e:	9b03      	ldr	r3, [sp, #12]
 800b220:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800b224:	0d1b      	lsrs	r3, r3, #20
 800b226:	051b      	lsls	r3, r3, #20
 800b228:	b12b      	cbz	r3, 800b236 <_dtoa_r+0x7de>
 800b22a:	9b08      	ldr	r3, [sp, #32]
 800b22c:	3301      	adds	r3, #1
 800b22e:	9308      	str	r3, [sp, #32]
 800b230:	f108 0801 	add.w	r8, r8, #1
 800b234:	2301      	movs	r3, #1
 800b236:	930a      	str	r3, [sp, #40]	@ 0x28
 800b238:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b23a:	2b00      	cmp	r3, #0
 800b23c:	f000 81b0 	beq.w	800b5a0 <_dtoa_r+0xb48>
 800b240:	6923      	ldr	r3, [r4, #16]
 800b242:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800b246:	6918      	ldr	r0, [r3, #16]
 800b248:	f000 fe52 	bl	800bef0 <__hi0bits>
 800b24c:	f1c0 0020 	rsb	r0, r0, #32
 800b250:	9b08      	ldr	r3, [sp, #32]
 800b252:	4418      	add	r0, r3
 800b254:	f010 001f 	ands.w	r0, r0, #31
 800b258:	d077      	beq.n	800b34a <_dtoa_r+0x8f2>
 800b25a:	f1c0 0320 	rsb	r3, r0, #32
 800b25e:	2b04      	cmp	r3, #4
 800b260:	dd6b      	ble.n	800b33a <_dtoa_r+0x8e2>
 800b262:	9b08      	ldr	r3, [sp, #32]
 800b264:	f1c0 001c 	rsb	r0, r0, #28
 800b268:	4403      	add	r3, r0
 800b26a:	4480      	add	r8, r0
 800b26c:	4406      	add	r6, r0
 800b26e:	9308      	str	r3, [sp, #32]
 800b270:	f1b8 0f00 	cmp.w	r8, #0
 800b274:	dd05      	ble.n	800b282 <_dtoa_r+0x82a>
 800b276:	4649      	mov	r1, r9
 800b278:	4642      	mov	r2, r8
 800b27a:	4658      	mov	r0, fp
 800b27c:	f000 ff9e 	bl	800c1bc <__lshift>
 800b280:	4681      	mov	r9, r0
 800b282:	9b08      	ldr	r3, [sp, #32]
 800b284:	2b00      	cmp	r3, #0
 800b286:	dd05      	ble.n	800b294 <_dtoa_r+0x83c>
 800b288:	4621      	mov	r1, r4
 800b28a:	461a      	mov	r2, r3
 800b28c:	4658      	mov	r0, fp
 800b28e:	f000 ff95 	bl	800c1bc <__lshift>
 800b292:	4604      	mov	r4, r0
 800b294:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b296:	2b00      	cmp	r3, #0
 800b298:	d059      	beq.n	800b34e <_dtoa_r+0x8f6>
 800b29a:	4621      	mov	r1, r4
 800b29c:	4648      	mov	r0, r9
 800b29e:	f000 fff9 	bl	800c294 <__mcmp>
 800b2a2:	2800      	cmp	r0, #0
 800b2a4:	da53      	bge.n	800b34e <_dtoa_r+0x8f6>
 800b2a6:	1e7b      	subs	r3, r7, #1
 800b2a8:	9304      	str	r3, [sp, #16]
 800b2aa:	4649      	mov	r1, r9
 800b2ac:	2300      	movs	r3, #0
 800b2ae:	220a      	movs	r2, #10
 800b2b0:	4658      	mov	r0, fp
 800b2b2:	f000 fd8d 	bl	800bdd0 <__multadd>
 800b2b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b2b8:	4681      	mov	r9, r0
 800b2ba:	2b00      	cmp	r3, #0
 800b2bc:	f000 8172 	beq.w	800b5a4 <_dtoa_r+0xb4c>
 800b2c0:	2300      	movs	r3, #0
 800b2c2:	4629      	mov	r1, r5
 800b2c4:	220a      	movs	r2, #10
 800b2c6:	4658      	mov	r0, fp
 800b2c8:	f000 fd82 	bl	800bdd0 <__multadd>
 800b2cc:	9b00      	ldr	r3, [sp, #0]
 800b2ce:	2b00      	cmp	r3, #0
 800b2d0:	4605      	mov	r5, r0
 800b2d2:	dc67      	bgt.n	800b3a4 <_dtoa_r+0x94c>
 800b2d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b2d6:	2b02      	cmp	r3, #2
 800b2d8:	dc41      	bgt.n	800b35e <_dtoa_r+0x906>
 800b2da:	e063      	b.n	800b3a4 <_dtoa_r+0x94c>
 800b2dc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800b2de:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800b2e2:	e746      	b.n	800b172 <_dtoa_r+0x71a>
 800b2e4:	9b07      	ldr	r3, [sp, #28]
 800b2e6:	1e5c      	subs	r4, r3, #1
 800b2e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b2ea:	42a3      	cmp	r3, r4
 800b2ec:	bfbf      	itttt	lt
 800b2ee:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 800b2f0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 800b2f2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 800b2f4:	1ae3      	sublt	r3, r4, r3
 800b2f6:	bfb4      	ite	lt
 800b2f8:	18d2      	addlt	r2, r2, r3
 800b2fa:	1b1c      	subge	r4, r3, r4
 800b2fc:	9b07      	ldr	r3, [sp, #28]
 800b2fe:	bfbc      	itt	lt
 800b300:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 800b302:	2400      	movlt	r4, #0
 800b304:	2b00      	cmp	r3, #0
 800b306:	bfb5      	itete	lt
 800b308:	eba8 0603 	sublt.w	r6, r8, r3
 800b30c:	9b07      	ldrge	r3, [sp, #28]
 800b30e:	2300      	movlt	r3, #0
 800b310:	4646      	movge	r6, r8
 800b312:	e730      	b.n	800b176 <_dtoa_r+0x71e>
 800b314:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800b316:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800b318:	4646      	mov	r6, r8
 800b31a:	e735      	b.n	800b188 <_dtoa_r+0x730>
 800b31c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b31e:	e75c      	b.n	800b1da <_dtoa_r+0x782>
 800b320:	2300      	movs	r3, #0
 800b322:	e788      	b.n	800b236 <_dtoa_r+0x7de>
 800b324:	3fe00000 	.word	0x3fe00000
 800b328:	40240000 	.word	0x40240000
 800b32c:	40140000 	.word	0x40140000
 800b330:	9b02      	ldr	r3, [sp, #8]
 800b332:	e780      	b.n	800b236 <_dtoa_r+0x7de>
 800b334:	2300      	movs	r3, #0
 800b336:	930a      	str	r3, [sp, #40]	@ 0x28
 800b338:	e782      	b.n	800b240 <_dtoa_r+0x7e8>
 800b33a:	d099      	beq.n	800b270 <_dtoa_r+0x818>
 800b33c:	9a08      	ldr	r2, [sp, #32]
 800b33e:	331c      	adds	r3, #28
 800b340:	441a      	add	r2, r3
 800b342:	4498      	add	r8, r3
 800b344:	441e      	add	r6, r3
 800b346:	9208      	str	r2, [sp, #32]
 800b348:	e792      	b.n	800b270 <_dtoa_r+0x818>
 800b34a:	4603      	mov	r3, r0
 800b34c:	e7f6      	b.n	800b33c <_dtoa_r+0x8e4>
 800b34e:	9b07      	ldr	r3, [sp, #28]
 800b350:	9704      	str	r7, [sp, #16]
 800b352:	2b00      	cmp	r3, #0
 800b354:	dc20      	bgt.n	800b398 <_dtoa_r+0x940>
 800b356:	9300      	str	r3, [sp, #0]
 800b358:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b35a:	2b02      	cmp	r3, #2
 800b35c:	dd1e      	ble.n	800b39c <_dtoa_r+0x944>
 800b35e:	9b00      	ldr	r3, [sp, #0]
 800b360:	2b00      	cmp	r3, #0
 800b362:	f47f aec0 	bne.w	800b0e6 <_dtoa_r+0x68e>
 800b366:	4621      	mov	r1, r4
 800b368:	2205      	movs	r2, #5
 800b36a:	4658      	mov	r0, fp
 800b36c:	f000 fd30 	bl	800bdd0 <__multadd>
 800b370:	4601      	mov	r1, r0
 800b372:	4604      	mov	r4, r0
 800b374:	4648      	mov	r0, r9
 800b376:	f000 ff8d 	bl	800c294 <__mcmp>
 800b37a:	2800      	cmp	r0, #0
 800b37c:	f77f aeb3 	ble.w	800b0e6 <_dtoa_r+0x68e>
 800b380:	4656      	mov	r6, sl
 800b382:	2331      	movs	r3, #49	@ 0x31
 800b384:	f806 3b01 	strb.w	r3, [r6], #1
 800b388:	9b04      	ldr	r3, [sp, #16]
 800b38a:	3301      	adds	r3, #1
 800b38c:	9304      	str	r3, [sp, #16]
 800b38e:	e6ae      	b.n	800b0ee <_dtoa_r+0x696>
 800b390:	9c07      	ldr	r4, [sp, #28]
 800b392:	9704      	str	r7, [sp, #16]
 800b394:	4625      	mov	r5, r4
 800b396:	e7f3      	b.n	800b380 <_dtoa_r+0x928>
 800b398:	9b07      	ldr	r3, [sp, #28]
 800b39a:	9300      	str	r3, [sp, #0]
 800b39c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b39e:	2b00      	cmp	r3, #0
 800b3a0:	f000 8104 	beq.w	800b5ac <_dtoa_r+0xb54>
 800b3a4:	2e00      	cmp	r6, #0
 800b3a6:	dd05      	ble.n	800b3b4 <_dtoa_r+0x95c>
 800b3a8:	4629      	mov	r1, r5
 800b3aa:	4632      	mov	r2, r6
 800b3ac:	4658      	mov	r0, fp
 800b3ae:	f000 ff05 	bl	800c1bc <__lshift>
 800b3b2:	4605      	mov	r5, r0
 800b3b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b3b6:	2b00      	cmp	r3, #0
 800b3b8:	d05a      	beq.n	800b470 <_dtoa_r+0xa18>
 800b3ba:	6869      	ldr	r1, [r5, #4]
 800b3bc:	4658      	mov	r0, fp
 800b3be:	f000 fca5 	bl	800bd0c <_Balloc>
 800b3c2:	4606      	mov	r6, r0
 800b3c4:	b928      	cbnz	r0, 800b3d2 <_dtoa_r+0x97a>
 800b3c6:	4b84      	ldr	r3, [pc, #528]	@ (800b5d8 <_dtoa_r+0xb80>)
 800b3c8:	4602      	mov	r2, r0
 800b3ca:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800b3ce:	f7ff bb5a 	b.w	800aa86 <_dtoa_r+0x2e>
 800b3d2:	692a      	ldr	r2, [r5, #16]
 800b3d4:	3202      	adds	r2, #2
 800b3d6:	0092      	lsls	r2, r2, #2
 800b3d8:	f105 010c 	add.w	r1, r5, #12
 800b3dc:	300c      	adds	r0, #12
 800b3de:	f7ff fa8a 	bl	800a8f6 <memcpy>
 800b3e2:	2201      	movs	r2, #1
 800b3e4:	4631      	mov	r1, r6
 800b3e6:	4658      	mov	r0, fp
 800b3e8:	f000 fee8 	bl	800c1bc <__lshift>
 800b3ec:	f10a 0301 	add.w	r3, sl, #1
 800b3f0:	9307      	str	r3, [sp, #28]
 800b3f2:	9b00      	ldr	r3, [sp, #0]
 800b3f4:	4453      	add	r3, sl
 800b3f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b3f8:	9b02      	ldr	r3, [sp, #8]
 800b3fa:	f003 0301 	and.w	r3, r3, #1
 800b3fe:	462f      	mov	r7, r5
 800b400:	930a      	str	r3, [sp, #40]	@ 0x28
 800b402:	4605      	mov	r5, r0
 800b404:	9b07      	ldr	r3, [sp, #28]
 800b406:	4621      	mov	r1, r4
 800b408:	3b01      	subs	r3, #1
 800b40a:	4648      	mov	r0, r9
 800b40c:	9300      	str	r3, [sp, #0]
 800b40e:	f7ff fa98 	bl	800a942 <quorem>
 800b412:	4639      	mov	r1, r7
 800b414:	9002      	str	r0, [sp, #8]
 800b416:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800b41a:	4648      	mov	r0, r9
 800b41c:	f000 ff3a 	bl	800c294 <__mcmp>
 800b420:	462a      	mov	r2, r5
 800b422:	9008      	str	r0, [sp, #32]
 800b424:	4621      	mov	r1, r4
 800b426:	4658      	mov	r0, fp
 800b428:	f000 ff50 	bl	800c2cc <__mdiff>
 800b42c:	68c2      	ldr	r2, [r0, #12]
 800b42e:	4606      	mov	r6, r0
 800b430:	bb02      	cbnz	r2, 800b474 <_dtoa_r+0xa1c>
 800b432:	4601      	mov	r1, r0
 800b434:	4648      	mov	r0, r9
 800b436:	f000 ff2d 	bl	800c294 <__mcmp>
 800b43a:	4602      	mov	r2, r0
 800b43c:	4631      	mov	r1, r6
 800b43e:	4658      	mov	r0, fp
 800b440:	920e      	str	r2, [sp, #56]	@ 0x38
 800b442:	f000 fca3 	bl	800bd8c <_Bfree>
 800b446:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b448:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b44a:	9e07      	ldr	r6, [sp, #28]
 800b44c:	ea43 0102 	orr.w	r1, r3, r2
 800b450:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b452:	4319      	orrs	r1, r3
 800b454:	d110      	bne.n	800b478 <_dtoa_r+0xa20>
 800b456:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800b45a:	d029      	beq.n	800b4b0 <_dtoa_r+0xa58>
 800b45c:	9b08      	ldr	r3, [sp, #32]
 800b45e:	2b00      	cmp	r3, #0
 800b460:	dd02      	ble.n	800b468 <_dtoa_r+0xa10>
 800b462:	9b02      	ldr	r3, [sp, #8]
 800b464:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800b468:	9b00      	ldr	r3, [sp, #0]
 800b46a:	f883 8000 	strb.w	r8, [r3]
 800b46e:	e63f      	b.n	800b0f0 <_dtoa_r+0x698>
 800b470:	4628      	mov	r0, r5
 800b472:	e7bb      	b.n	800b3ec <_dtoa_r+0x994>
 800b474:	2201      	movs	r2, #1
 800b476:	e7e1      	b.n	800b43c <_dtoa_r+0x9e4>
 800b478:	9b08      	ldr	r3, [sp, #32]
 800b47a:	2b00      	cmp	r3, #0
 800b47c:	db04      	blt.n	800b488 <_dtoa_r+0xa30>
 800b47e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800b480:	430b      	orrs	r3, r1
 800b482:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800b484:	430b      	orrs	r3, r1
 800b486:	d120      	bne.n	800b4ca <_dtoa_r+0xa72>
 800b488:	2a00      	cmp	r2, #0
 800b48a:	dded      	ble.n	800b468 <_dtoa_r+0xa10>
 800b48c:	4649      	mov	r1, r9
 800b48e:	2201      	movs	r2, #1
 800b490:	4658      	mov	r0, fp
 800b492:	f000 fe93 	bl	800c1bc <__lshift>
 800b496:	4621      	mov	r1, r4
 800b498:	4681      	mov	r9, r0
 800b49a:	f000 fefb 	bl	800c294 <__mcmp>
 800b49e:	2800      	cmp	r0, #0
 800b4a0:	dc03      	bgt.n	800b4aa <_dtoa_r+0xa52>
 800b4a2:	d1e1      	bne.n	800b468 <_dtoa_r+0xa10>
 800b4a4:	f018 0f01 	tst.w	r8, #1
 800b4a8:	d0de      	beq.n	800b468 <_dtoa_r+0xa10>
 800b4aa:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800b4ae:	d1d8      	bne.n	800b462 <_dtoa_r+0xa0a>
 800b4b0:	9a00      	ldr	r2, [sp, #0]
 800b4b2:	2339      	movs	r3, #57	@ 0x39
 800b4b4:	7013      	strb	r3, [r2, #0]
 800b4b6:	4633      	mov	r3, r6
 800b4b8:	461e      	mov	r6, r3
 800b4ba:	3b01      	subs	r3, #1
 800b4bc:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800b4c0:	2a39      	cmp	r2, #57	@ 0x39
 800b4c2:	d052      	beq.n	800b56a <_dtoa_r+0xb12>
 800b4c4:	3201      	adds	r2, #1
 800b4c6:	701a      	strb	r2, [r3, #0]
 800b4c8:	e612      	b.n	800b0f0 <_dtoa_r+0x698>
 800b4ca:	2a00      	cmp	r2, #0
 800b4cc:	dd07      	ble.n	800b4de <_dtoa_r+0xa86>
 800b4ce:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800b4d2:	d0ed      	beq.n	800b4b0 <_dtoa_r+0xa58>
 800b4d4:	9a00      	ldr	r2, [sp, #0]
 800b4d6:	f108 0301 	add.w	r3, r8, #1
 800b4da:	7013      	strb	r3, [r2, #0]
 800b4dc:	e608      	b.n	800b0f0 <_dtoa_r+0x698>
 800b4de:	9b07      	ldr	r3, [sp, #28]
 800b4e0:	9a07      	ldr	r2, [sp, #28]
 800b4e2:	f803 8c01 	strb.w	r8, [r3, #-1]
 800b4e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b4e8:	4293      	cmp	r3, r2
 800b4ea:	d028      	beq.n	800b53e <_dtoa_r+0xae6>
 800b4ec:	4649      	mov	r1, r9
 800b4ee:	2300      	movs	r3, #0
 800b4f0:	220a      	movs	r2, #10
 800b4f2:	4658      	mov	r0, fp
 800b4f4:	f000 fc6c 	bl	800bdd0 <__multadd>
 800b4f8:	42af      	cmp	r7, r5
 800b4fa:	4681      	mov	r9, r0
 800b4fc:	f04f 0300 	mov.w	r3, #0
 800b500:	f04f 020a 	mov.w	r2, #10
 800b504:	4639      	mov	r1, r7
 800b506:	4658      	mov	r0, fp
 800b508:	d107      	bne.n	800b51a <_dtoa_r+0xac2>
 800b50a:	f000 fc61 	bl	800bdd0 <__multadd>
 800b50e:	4607      	mov	r7, r0
 800b510:	4605      	mov	r5, r0
 800b512:	9b07      	ldr	r3, [sp, #28]
 800b514:	3301      	adds	r3, #1
 800b516:	9307      	str	r3, [sp, #28]
 800b518:	e774      	b.n	800b404 <_dtoa_r+0x9ac>
 800b51a:	f000 fc59 	bl	800bdd0 <__multadd>
 800b51e:	4629      	mov	r1, r5
 800b520:	4607      	mov	r7, r0
 800b522:	2300      	movs	r3, #0
 800b524:	220a      	movs	r2, #10
 800b526:	4658      	mov	r0, fp
 800b528:	f000 fc52 	bl	800bdd0 <__multadd>
 800b52c:	4605      	mov	r5, r0
 800b52e:	e7f0      	b.n	800b512 <_dtoa_r+0xaba>
 800b530:	9b00      	ldr	r3, [sp, #0]
 800b532:	2b00      	cmp	r3, #0
 800b534:	bfcc      	ite	gt
 800b536:	461e      	movgt	r6, r3
 800b538:	2601      	movle	r6, #1
 800b53a:	4456      	add	r6, sl
 800b53c:	2700      	movs	r7, #0
 800b53e:	4649      	mov	r1, r9
 800b540:	2201      	movs	r2, #1
 800b542:	4658      	mov	r0, fp
 800b544:	f000 fe3a 	bl	800c1bc <__lshift>
 800b548:	4621      	mov	r1, r4
 800b54a:	4681      	mov	r9, r0
 800b54c:	f000 fea2 	bl	800c294 <__mcmp>
 800b550:	2800      	cmp	r0, #0
 800b552:	dcb0      	bgt.n	800b4b6 <_dtoa_r+0xa5e>
 800b554:	d102      	bne.n	800b55c <_dtoa_r+0xb04>
 800b556:	f018 0f01 	tst.w	r8, #1
 800b55a:	d1ac      	bne.n	800b4b6 <_dtoa_r+0xa5e>
 800b55c:	4633      	mov	r3, r6
 800b55e:	461e      	mov	r6, r3
 800b560:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800b564:	2a30      	cmp	r2, #48	@ 0x30
 800b566:	d0fa      	beq.n	800b55e <_dtoa_r+0xb06>
 800b568:	e5c2      	b.n	800b0f0 <_dtoa_r+0x698>
 800b56a:	459a      	cmp	sl, r3
 800b56c:	d1a4      	bne.n	800b4b8 <_dtoa_r+0xa60>
 800b56e:	9b04      	ldr	r3, [sp, #16]
 800b570:	3301      	adds	r3, #1
 800b572:	9304      	str	r3, [sp, #16]
 800b574:	2331      	movs	r3, #49	@ 0x31
 800b576:	f88a 3000 	strb.w	r3, [sl]
 800b57a:	e5b9      	b.n	800b0f0 <_dtoa_r+0x698>
 800b57c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800b57e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800b5dc <_dtoa_r+0xb84>
 800b582:	b11b      	cbz	r3, 800b58c <_dtoa_r+0xb34>
 800b584:	f10a 0308 	add.w	r3, sl, #8
 800b588:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800b58a:	6013      	str	r3, [r2, #0]
 800b58c:	4650      	mov	r0, sl
 800b58e:	b019      	add	sp, #100	@ 0x64
 800b590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b594:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b596:	2b01      	cmp	r3, #1
 800b598:	f77f ae37 	ble.w	800b20a <_dtoa_r+0x7b2>
 800b59c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b59e:	930a      	str	r3, [sp, #40]	@ 0x28
 800b5a0:	2001      	movs	r0, #1
 800b5a2:	e655      	b.n	800b250 <_dtoa_r+0x7f8>
 800b5a4:	9b00      	ldr	r3, [sp, #0]
 800b5a6:	2b00      	cmp	r3, #0
 800b5a8:	f77f aed6 	ble.w	800b358 <_dtoa_r+0x900>
 800b5ac:	4656      	mov	r6, sl
 800b5ae:	4621      	mov	r1, r4
 800b5b0:	4648      	mov	r0, r9
 800b5b2:	f7ff f9c6 	bl	800a942 <quorem>
 800b5b6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800b5ba:	f806 8b01 	strb.w	r8, [r6], #1
 800b5be:	9b00      	ldr	r3, [sp, #0]
 800b5c0:	eba6 020a 	sub.w	r2, r6, sl
 800b5c4:	4293      	cmp	r3, r2
 800b5c6:	ddb3      	ble.n	800b530 <_dtoa_r+0xad8>
 800b5c8:	4649      	mov	r1, r9
 800b5ca:	2300      	movs	r3, #0
 800b5cc:	220a      	movs	r2, #10
 800b5ce:	4658      	mov	r0, fp
 800b5d0:	f000 fbfe 	bl	800bdd0 <__multadd>
 800b5d4:	4681      	mov	r9, r0
 800b5d6:	e7ea      	b.n	800b5ae <_dtoa_r+0xb56>
 800b5d8:	0800d583 	.word	0x0800d583
 800b5dc:	0800d51e 	.word	0x0800d51e

0800b5e0 <_free_r>:
 800b5e0:	b538      	push	{r3, r4, r5, lr}
 800b5e2:	4605      	mov	r5, r0
 800b5e4:	2900      	cmp	r1, #0
 800b5e6:	d041      	beq.n	800b66c <_free_r+0x8c>
 800b5e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800b5ec:	1f0c      	subs	r4, r1, #4
 800b5ee:	2b00      	cmp	r3, #0
 800b5f0:	bfb8      	it	lt
 800b5f2:	18e4      	addlt	r4, r4, r3
 800b5f4:	f7fd fbdc 	bl	8008db0 <__malloc_lock>
 800b5f8:	4a1d      	ldr	r2, [pc, #116]	@ (800b670 <_free_r+0x90>)
 800b5fa:	6813      	ldr	r3, [r2, #0]
 800b5fc:	b933      	cbnz	r3, 800b60c <_free_r+0x2c>
 800b5fe:	6063      	str	r3, [r4, #4]
 800b600:	6014      	str	r4, [r2, #0]
 800b602:	4628      	mov	r0, r5
 800b604:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b608:	f7fd bbd8 	b.w	8008dbc <__malloc_unlock>
 800b60c:	42a3      	cmp	r3, r4
 800b60e:	d908      	bls.n	800b622 <_free_r+0x42>
 800b610:	6820      	ldr	r0, [r4, #0]
 800b612:	1821      	adds	r1, r4, r0
 800b614:	428b      	cmp	r3, r1
 800b616:	bf01      	itttt	eq
 800b618:	6819      	ldreq	r1, [r3, #0]
 800b61a:	685b      	ldreq	r3, [r3, #4]
 800b61c:	1809      	addeq	r1, r1, r0
 800b61e:	6021      	streq	r1, [r4, #0]
 800b620:	e7ed      	b.n	800b5fe <_free_r+0x1e>
 800b622:	461a      	mov	r2, r3
 800b624:	685b      	ldr	r3, [r3, #4]
 800b626:	b10b      	cbz	r3, 800b62c <_free_r+0x4c>
 800b628:	42a3      	cmp	r3, r4
 800b62a:	d9fa      	bls.n	800b622 <_free_r+0x42>
 800b62c:	6811      	ldr	r1, [r2, #0]
 800b62e:	1850      	adds	r0, r2, r1
 800b630:	42a0      	cmp	r0, r4
 800b632:	d10b      	bne.n	800b64c <_free_r+0x6c>
 800b634:	6820      	ldr	r0, [r4, #0]
 800b636:	4401      	add	r1, r0
 800b638:	1850      	adds	r0, r2, r1
 800b63a:	4283      	cmp	r3, r0
 800b63c:	6011      	str	r1, [r2, #0]
 800b63e:	d1e0      	bne.n	800b602 <_free_r+0x22>
 800b640:	6818      	ldr	r0, [r3, #0]
 800b642:	685b      	ldr	r3, [r3, #4]
 800b644:	6053      	str	r3, [r2, #4]
 800b646:	4408      	add	r0, r1
 800b648:	6010      	str	r0, [r2, #0]
 800b64a:	e7da      	b.n	800b602 <_free_r+0x22>
 800b64c:	d902      	bls.n	800b654 <_free_r+0x74>
 800b64e:	230c      	movs	r3, #12
 800b650:	602b      	str	r3, [r5, #0]
 800b652:	e7d6      	b.n	800b602 <_free_r+0x22>
 800b654:	6820      	ldr	r0, [r4, #0]
 800b656:	1821      	adds	r1, r4, r0
 800b658:	428b      	cmp	r3, r1
 800b65a:	bf04      	itt	eq
 800b65c:	6819      	ldreq	r1, [r3, #0]
 800b65e:	685b      	ldreq	r3, [r3, #4]
 800b660:	6063      	str	r3, [r4, #4]
 800b662:	bf04      	itt	eq
 800b664:	1809      	addeq	r1, r1, r0
 800b666:	6021      	streq	r1, [r4, #0]
 800b668:	6054      	str	r4, [r2, #4]
 800b66a:	e7ca      	b.n	800b602 <_free_r+0x22>
 800b66c:	bd38      	pop	{r3, r4, r5, pc}
 800b66e:	bf00      	nop
 800b670:	20000c1c 	.word	0x20000c1c

0800b674 <rshift>:
 800b674:	6903      	ldr	r3, [r0, #16]
 800b676:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800b67a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b67e:	ea4f 1261 	mov.w	r2, r1, asr #5
 800b682:	f100 0414 	add.w	r4, r0, #20
 800b686:	dd45      	ble.n	800b714 <rshift+0xa0>
 800b688:	f011 011f 	ands.w	r1, r1, #31
 800b68c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800b690:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800b694:	d10c      	bne.n	800b6b0 <rshift+0x3c>
 800b696:	f100 0710 	add.w	r7, r0, #16
 800b69a:	4629      	mov	r1, r5
 800b69c:	42b1      	cmp	r1, r6
 800b69e:	d334      	bcc.n	800b70a <rshift+0x96>
 800b6a0:	1a9b      	subs	r3, r3, r2
 800b6a2:	009b      	lsls	r3, r3, #2
 800b6a4:	1eea      	subs	r2, r5, #3
 800b6a6:	4296      	cmp	r6, r2
 800b6a8:	bf38      	it	cc
 800b6aa:	2300      	movcc	r3, #0
 800b6ac:	4423      	add	r3, r4
 800b6ae:	e015      	b.n	800b6dc <rshift+0x68>
 800b6b0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800b6b4:	f1c1 0820 	rsb	r8, r1, #32
 800b6b8:	40cf      	lsrs	r7, r1
 800b6ba:	f105 0e04 	add.w	lr, r5, #4
 800b6be:	46a1      	mov	r9, r4
 800b6c0:	4576      	cmp	r6, lr
 800b6c2:	46f4      	mov	ip, lr
 800b6c4:	d815      	bhi.n	800b6f2 <rshift+0x7e>
 800b6c6:	1a9a      	subs	r2, r3, r2
 800b6c8:	0092      	lsls	r2, r2, #2
 800b6ca:	3a04      	subs	r2, #4
 800b6cc:	3501      	adds	r5, #1
 800b6ce:	42ae      	cmp	r6, r5
 800b6d0:	bf38      	it	cc
 800b6d2:	2200      	movcc	r2, #0
 800b6d4:	18a3      	adds	r3, r4, r2
 800b6d6:	50a7      	str	r7, [r4, r2]
 800b6d8:	b107      	cbz	r7, 800b6dc <rshift+0x68>
 800b6da:	3304      	adds	r3, #4
 800b6dc:	1b1a      	subs	r2, r3, r4
 800b6de:	42a3      	cmp	r3, r4
 800b6e0:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800b6e4:	bf08      	it	eq
 800b6e6:	2300      	moveq	r3, #0
 800b6e8:	6102      	str	r2, [r0, #16]
 800b6ea:	bf08      	it	eq
 800b6ec:	6143      	streq	r3, [r0, #20]
 800b6ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b6f2:	f8dc c000 	ldr.w	ip, [ip]
 800b6f6:	fa0c fc08 	lsl.w	ip, ip, r8
 800b6fa:	ea4c 0707 	orr.w	r7, ip, r7
 800b6fe:	f849 7b04 	str.w	r7, [r9], #4
 800b702:	f85e 7b04 	ldr.w	r7, [lr], #4
 800b706:	40cf      	lsrs	r7, r1
 800b708:	e7da      	b.n	800b6c0 <rshift+0x4c>
 800b70a:	f851 cb04 	ldr.w	ip, [r1], #4
 800b70e:	f847 cf04 	str.w	ip, [r7, #4]!
 800b712:	e7c3      	b.n	800b69c <rshift+0x28>
 800b714:	4623      	mov	r3, r4
 800b716:	e7e1      	b.n	800b6dc <rshift+0x68>

0800b718 <__hexdig_fun>:
 800b718:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800b71c:	2b09      	cmp	r3, #9
 800b71e:	d802      	bhi.n	800b726 <__hexdig_fun+0xe>
 800b720:	3820      	subs	r0, #32
 800b722:	b2c0      	uxtb	r0, r0
 800b724:	4770      	bx	lr
 800b726:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800b72a:	2b05      	cmp	r3, #5
 800b72c:	d801      	bhi.n	800b732 <__hexdig_fun+0x1a>
 800b72e:	3847      	subs	r0, #71	@ 0x47
 800b730:	e7f7      	b.n	800b722 <__hexdig_fun+0xa>
 800b732:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800b736:	2b05      	cmp	r3, #5
 800b738:	d801      	bhi.n	800b73e <__hexdig_fun+0x26>
 800b73a:	3827      	subs	r0, #39	@ 0x27
 800b73c:	e7f1      	b.n	800b722 <__hexdig_fun+0xa>
 800b73e:	2000      	movs	r0, #0
 800b740:	4770      	bx	lr
	...

0800b744 <__gethex>:
 800b744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b748:	b085      	sub	sp, #20
 800b74a:	468a      	mov	sl, r1
 800b74c:	9302      	str	r3, [sp, #8]
 800b74e:	680b      	ldr	r3, [r1, #0]
 800b750:	9001      	str	r0, [sp, #4]
 800b752:	4690      	mov	r8, r2
 800b754:	1c9c      	adds	r4, r3, #2
 800b756:	46a1      	mov	r9, r4
 800b758:	f814 0b01 	ldrb.w	r0, [r4], #1
 800b75c:	2830      	cmp	r0, #48	@ 0x30
 800b75e:	d0fa      	beq.n	800b756 <__gethex+0x12>
 800b760:	eba9 0303 	sub.w	r3, r9, r3
 800b764:	f1a3 0b02 	sub.w	fp, r3, #2
 800b768:	f7ff ffd6 	bl	800b718 <__hexdig_fun>
 800b76c:	4605      	mov	r5, r0
 800b76e:	2800      	cmp	r0, #0
 800b770:	d168      	bne.n	800b844 <__gethex+0x100>
 800b772:	49a0      	ldr	r1, [pc, #640]	@ (800b9f4 <__gethex+0x2b0>)
 800b774:	2201      	movs	r2, #1
 800b776:	4648      	mov	r0, r9
 800b778:	f7fe ffa9 	bl	800a6ce <strncmp>
 800b77c:	4607      	mov	r7, r0
 800b77e:	2800      	cmp	r0, #0
 800b780:	d167      	bne.n	800b852 <__gethex+0x10e>
 800b782:	f899 0001 	ldrb.w	r0, [r9, #1]
 800b786:	4626      	mov	r6, r4
 800b788:	f7ff ffc6 	bl	800b718 <__hexdig_fun>
 800b78c:	2800      	cmp	r0, #0
 800b78e:	d062      	beq.n	800b856 <__gethex+0x112>
 800b790:	4623      	mov	r3, r4
 800b792:	7818      	ldrb	r0, [r3, #0]
 800b794:	2830      	cmp	r0, #48	@ 0x30
 800b796:	4699      	mov	r9, r3
 800b798:	f103 0301 	add.w	r3, r3, #1
 800b79c:	d0f9      	beq.n	800b792 <__gethex+0x4e>
 800b79e:	f7ff ffbb 	bl	800b718 <__hexdig_fun>
 800b7a2:	fab0 f580 	clz	r5, r0
 800b7a6:	096d      	lsrs	r5, r5, #5
 800b7a8:	f04f 0b01 	mov.w	fp, #1
 800b7ac:	464a      	mov	r2, r9
 800b7ae:	4616      	mov	r6, r2
 800b7b0:	3201      	adds	r2, #1
 800b7b2:	7830      	ldrb	r0, [r6, #0]
 800b7b4:	f7ff ffb0 	bl	800b718 <__hexdig_fun>
 800b7b8:	2800      	cmp	r0, #0
 800b7ba:	d1f8      	bne.n	800b7ae <__gethex+0x6a>
 800b7bc:	498d      	ldr	r1, [pc, #564]	@ (800b9f4 <__gethex+0x2b0>)
 800b7be:	2201      	movs	r2, #1
 800b7c0:	4630      	mov	r0, r6
 800b7c2:	f7fe ff84 	bl	800a6ce <strncmp>
 800b7c6:	2800      	cmp	r0, #0
 800b7c8:	d13f      	bne.n	800b84a <__gethex+0x106>
 800b7ca:	b944      	cbnz	r4, 800b7de <__gethex+0x9a>
 800b7cc:	1c74      	adds	r4, r6, #1
 800b7ce:	4622      	mov	r2, r4
 800b7d0:	4616      	mov	r6, r2
 800b7d2:	3201      	adds	r2, #1
 800b7d4:	7830      	ldrb	r0, [r6, #0]
 800b7d6:	f7ff ff9f 	bl	800b718 <__hexdig_fun>
 800b7da:	2800      	cmp	r0, #0
 800b7dc:	d1f8      	bne.n	800b7d0 <__gethex+0x8c>
 800b7de:	1ba4      	subs	r4, r4, r6
 800b7e0:	00a7      	lsls	r7, r4, #2
 800b7e2:	7833      	ldrb	r3, [r6, #0]
 800b7e4:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800b7e8:	2b50      	cmp	r3, #80	@ 0x50
 800b7ea:	d13e      	bne.n	800b86a <__gethex+0x126>
 800b7ec:	7873      	ldrb	r3, [r6, #1]
 800b7ee:	2b2b      	cmp	r3, #43	@ 0x2b
 800b7f0:	d033      	beq.n	800b85a <__gethex+0x116>
 800b7f2:	2b2d      	cmp	r3, #45	@ 0x2d
 800b7f4:	d034      	beq.n	800b860 <__gethex+0x11c>
 800b7f6:	1c71      	adds	r1, r6, #1
 800b7f8:	2400      	movs	r4, #0
 800b7fa:	7808      	ldrb	r0, [r1, #0]
 800b7fc:	f7ff ff8c 	bl	800b718 <__hexdig_fun>
 800b800:	1e43      	subs	r3, r0, #1
 800b802:	b2db      	uxtb	r3, r3
 800b804:	2b18      	cmp	r3, #24
 800b806:	d830      	bhi.n	800b86a <__gethex+0x126>
 800b808:	f1a0 0210 	sub.w	r2, r0, #16
 800b80c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800b810:	f7ff ff82 	bl	800b718 <__hexdig_fun>
 800b814:	f100 3cff 	add.w	ip, r0, #4294967295	@ 0xffffffff
 800b818:	fa5f fc8c 	uxtb.w	ip, ip
 800b81c:	f1bc 0f18 	cmp.w	ip, #24
 800b820:	f04f 030a 	mov.w	r3, #10
 800b824:	d91e      	bls.n	800b864 <__gethex+0x120>
 800b826:	b104      	cbz	r4, 800b82a <__gethex+0xe6>
 800b828:	4252      	negs	r2, r2
 800b82a:	4417      	add	r7, r2
 800b82c:	f8ca 1000 	str.w	r1, [sl]
 800b830:	b1ed      	cbz	r5, 800b86e <__gethex+0x12a>
 800b832:	f1bb 0f00 	cmp.w	fp, #0
 800b836:	bf0c      	ite	eq
 800b838:	2506      	moveq	r5, #6
 800b83a:	2500      	movne	r5, #0
 800b83c:	4628      	mov	r0, r5
 800b83e:	b005      	add	sp, #20
 800b840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b844:	2500      	movs	r5, #0
 800b846:	462c      	mov	r4, r5
 800b848:	e7b0      	b.n	800b7ac <__gethex+0x68>
 800b84a:	2c00      	cmp	r4, #0
 800b84c:	d1c7      	bne.n	800b7de <__gethex+0x9a>
 800b84e:	4627      	mov	r7, r4
 800b850:	e7c7      	b.n	800b7e2 <__gethex+0x9e>
 800b852:	464e      	mov	r6, r9
 800b854:	462f      	mov	r7, r5
 800b856:	2501      	movs	r5, #1
 800b858:	e7c3      	b.n	800b7e2 <__gethex+0x9e>
 800b85a:	2400      	movs	r4, #0
 800b85c:	1cb1      	adds	r1, r6, #2
 800b85e:	e7cc      	b.n	800b7fa <__gethex+0xb6>
 800b860:	2401      	movs	r4, #1
 800b862:	e7fb      	b.n	800b85c <__gethex+0x118>
 800b864:	fb03 0002 	mla	r0, r3, r2, r0
 800b868:	e7ce      	b.n	800b808 <__gethex+0xc4>
 800b86a:	4631      	mov	r1, r6
 800b86c:	e7de      	b.n	800b82c <__gethex+0xe8>
 800b86e:	eba6 0309 	sub.w	r3, r6, r9
 800b872:	3b01      	subs	r3, #1
 800b874:	4629      	mov	r1, r5
 800b876:	2b07      	cmp	r3, #7
 800b878:	dc0a      	bgt.n	800b890 <__gethex+0x14c>
 800b87a:	9801      	ldr	r0, [sp, #4]
 800b87c:	f000 fa46 	bl	800bd0c <_Balloc>
 800b880:	4604      	mov	r4, r0
 800b882:	b940      	cbnz	r0, 800b896 <__gethex+0x152>
 800b884:	4b5c      	ldr	r3, [pc, #368]	@ (800b9f8 <__gethex+0x2b4>)
 800b886:	4602      	mov	r2, r0
 800b888:	21e4      	movs	r1, #228	@ 0xe4
 800b88a:	485c      	ldr	r0, [pc, #368]	@ (800b9fc <__gethex+0x2b8>)
 800b88c:	f7fd f9c0 	bl	8008c10 <__assert_func>
 800b890:	3101      	adds	r1, #1
 800b892:	105b      	asrs	r3, r3, #1
 800b894:	e7ef      	b.n	800b876 <__gethex+0x132>
 800b896:	f100 0a14 	add.w	sl, r0, #20
 800b89a:	2300      	movs	r3, #0
 800b89c:	4655      	mov	r5, sl
 800b89e:	469b      	mov	fp, r3
 800b8a0:	45b1      	cmp	r9, r6
 800b8a2:	d337      	bcc.n	800b914 <__gethex+0x1d0>
 800b8a4:	f845 bb04 	str.w	fp, [r5], #4
 800b8a8:	eba5 050a 	sub.w	r5, r5, sl
 800b8ac:	10ad      	asrs	r5, r5, #2
 800b8ae:	6125      	str	r5, [r4, #16]
 800b8b0:	4658      	mov	r0, fp
 800b8b2:	f000 fb1d 	bl	800bef0 <__hi0bits>
 800b8b6:	016d      	lsls	r5, r5, #5
 800b8b8:	f8d8 6000 	ldr.w	r6, [r8]
 800b8bc:	1a2d      	subs	r5, r5, r0
 800b8be:	42b5      	cmp	r5, r6
 800b8c0:	dd54      	ble.n	800b96c <__gethex+0x228>
 800b8c2:	1bad      	subs	r5, r5, r6
 800b8c4:	4629      	mov	r1, r5
 800b8c6:	4620      	mov	r0, r4
 800b8c8:	f000 feb1 	bl	800c62e <__any_on>
 800b8cc:	4681      	mov	r9, r0
 800b8ce:	b178      	cbz	r0, 800b8f0 <__gethex+0x1ac>
 800b8d0:	1e6b      	subs	r3, r5, #1
 800b8d2:	1159      	asrs	r1, r3, #5
 800b8d4:	f003 021f 	and.w	r2, r3, #31
 800b8d8:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800b8dc:	f04f 0901 	mov.w	r9, #1
 800b8e0:	fa09 f202 	lsl.w	r2, r9, r2
 800b8e4:	420a      	tst	r2, r1
 800b8e6:	d003      	beq.n	800b8f0 <__gethex+0x1ac>
 800b8e8:	454b      	cmp	r3, r9
 800b8ea:	dc36      	bgt.n	800b95a <__gethex+0x216>
 800b8ec:	f04f 0902 	mov.w	r9, #2
 800b8f0:	4629      	mov	r1, r5
 800b8f2:	4620      	mov	r0, r4
 800b8f4:	f7ff febe 	bl	800b674 <rshift>
 800b8f8:	442f      	add	r7, r5
 800b8fa:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800b8fe:	42bb      	cmp	r3, r7
 800b900:	da42      	bge.n	800b988 <__gethex+0x244>
 800b902:	9801      	ldr	r0, [sp, #4]
 800b904:	4621      	mov	r1, r4
 800b906:	f000 fa41 	bl	800bd8c <_Bfree>
 800b90a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b90c:	2300      	movs	r3, #0
 800b90e:	6013      	str	r3, [r2, #0]
 800b910:	25a3      	movs	r5, #163	@ 0xa3
 800b912:	e793      	b.n	800b83c <__gethex+0xf8>
 800b914:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800b918:	2a2e      	cmp	r2, #46	@ 0x2e
 800b91a:	d012      	beq.n	800b942 <__gethex+0x1fe>
 800b91c:	2b20      	cmp	r3, #32
 800b91e:	d104      	bne.n	800b92a <__gethex+0x1e6>
 800b920:	f845 bb04 	str.w	fp, [r5], #4
 800b924:	f04f 0b00 	mov.w	fp, #0
 800b928:	465b      	mov	r3, fp
 800b92a:	7830      	ldrb	r0, [r6, #0]
 800b92c:	9303      	str	r3, [sp, #12]
 800b92e:	f7ff fef3 	bl	800b718 <__hexdig_fun>
 800b932:	9b03      	ldr	r3, [sp, #12]
 800b934:	f000 000f 	and.w	r0, r0, #15
 800b938:	4098      	lsls	r0, r3
 800b93a:	ea4b 0b00 	orr.w	fp, fp, r0
 800b93e:	3304      	adds	r3, #4
 800b940:	e7ae      	b.n	800b8a0 <__gethex+0x15c>
 800b942:	45b1      	cmp	r9, r6
 800b944:	d8ea      	bhi.n	800b91c <__gethex+0x1d8>
 800b946:	492b      	ldr	r1, [pc, #172]	@ (800b9f4 <__gethex+0x2b0>)
 800b948:	9303      	str	r3, [sp, #12]
 800b94a:	2201      	movs	r2, #1
 800b94c:	4630      	mov	r0, r6
 800b94e:	f7fe febe 	bl	800a6ce <strncmp>
 800b952:	9b03      	ldr	r3, [sp, #12]
 800b954:	2800      	cmp	r0, #0
 800b956:	d1e1      	bne.n	800b91c <__gethex+0x1d8>
 800b958:	e7a2      	b.n	800b8a0 <__gethex+0x15c>
 800b95a:	1ea9      	subs	r1, r5, #2
 800b95c:	4620      	mov	r0, r4
 800b95e:	f000 fe66 	bl	800c62e <__any_on>
 800b962:	2800      	cmp	r0, #0
 800b964:	d0c2      	beq.n	800b8ec <__gethex+0x1a8>
 800b966:	f04f 0903 	mov.w	r9, #3
 800b96a:	e7c1      	b.n	800b8f0 <__gethex+0x1ac>
 800b96c:	da09      	bge.n	800b982 <__gethex+0x23e>
 800b96e:	1b75      	subs	r5, r6, r5
 800b970:	4621      	mov	r1, r4
 800b972:	9801      	ldr	r0, [sp, #4]
 800b974:	462a      	mov	r2, r5
 800b976:	f000 fc21 	bl	800c1bc <__lshift>
 800b97a:	1b7f      	subs	r7, r7, r5
 800b97c:	4604      	mov	r4, r0
 800b97e:	f100 0a14 	add.w	sl, r0, #20
 800b982:	f04f 0900 	mov.w	r9, #0
 800b986:	e7b8      	b.n	800b8fa <__gethex+0x1b6>
 800b988:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800b98c:	42bd      	cmp	r5, r7
 800b98e:	dd6f      	ble.n	800ba70 <__gethex+0x32c>
 800b990:	1bed      	subs	r5, r5, r7
 800b992:	42ae      	cmp	r6, r5
 800b994:	dc34      	bgt.n	800ba00 <__gethex+0x2bc>
 800b996:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800b99a:	2b02      	cmp	r3, #2
 800b99c:	d022      	beq.n	800b9e4 <__gethex+0x2a0>
 800b99e:	2b03      	cmp	r3, #3
 800b9a0:	d024      	beq.n	800b9ec <__gethex+0x2a8>
 800b9a2:	2b01      	cmp	r3, #1
 800b9a4:	d115      	bne.n	800b9d2 <__gethex+0x28e>
 800b9a6:	42ae      	cmp	r6, r5
 800b9a8:	d113      	bne.n	800b9d2 <__gethex+0x28e>
 800b9aa:	2e01      	cmp	r6, #1
 800b9ac:	d10b      	bne.n	800b9c6 <__gethex+0x282>
 800b9ae:	9a02      	ldr	r2, [sp, #8]
 800b9b0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800b9b4:	6013      	str	r3, [r2, #0]
 800b9b6:	2301      	movs	r3, #1
 800b9b8:	6123      	str	r3, [r4, #16]
 800b9ba:	f8ca 3000 	str.w	r3, [sl]
 800b9be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800b9c0:	2562      	movs	r5, #98	@ 0x62
 800b9c2:	601c      	str	r4, [r3, #0]
 800b9c4:	e73a      	b.n	800b83c <__gethex+0xf8>
 800b9c6:	1e71      	subs	r1, r6, #1
 800b9c8:	4620      	mov	r0, r4
 800b9ca:	f000 fe30 	bl	800c62e <__any_on>
 800b9ce:	2800      	cmp	r0, #0
 800b9d0:	d1ed      	bne.n	800b9ae <__gethex+0x26a>
 800b9d2:	9801      	ldr	r0, [sp, #4]
 800b9d4:	4621      	mov	r1, r4
 800b9d6:	f000 f9d9 	bl	800bd8c <_Bfree>
 800b9da:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b9dc:	2300      	movs	r3, #0
 800b9de:	6013      	str	r3, [r2, #0]
 800b9e0:	2550      	movs	r5, #80	@ 0x50
 800b9e2:	e72b      	b.n	800b83c <__gethex+0xf8>
 800b9e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b9e6:	2b00      	cmp	r3, #0
 800b9e8:	d1f3      	bne.n	800b9d2 <__gethex+0x28e>
 800b9ea:	e7e0      	b.n	800b9ae <__gethex+0x26a>
 800b9ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800b9ee:	2b00      	cmp	r3, #0
 800b9f0:	d1dd      	bne.n	800b9ae <__gethex+0x26a>
 800b9f2:	e7ee      	b.n	800b9d2 <__gethex+0x28e>
 800b9f4:	0800d318 	.word	0x0800d318
 800b9f8:	0800d583 	.word	0x0800d583
 800b9fc:	0800d594 	.word	0x0800d594
 800ba00:	1e6f      	subs	r7, r5, #1
 800ba02:	f1b9 0f00 	cmp.w	r9, #0
 800ba06:	d130      	bne.n	800ba6a <__gethex+0x326>
 800ba08:	b127      	cbz	r7, 800ba14 <__gethex+0x2d0>
 800ba0a:	4639      	mov	r1, r7
 800ba0c:	4620      	mov	r0, r4
 800ba0e:	f000 fe0e 	bl	800c62e <__any_on>
 800ba12:	4681      	mov	r9, r0
 800ba14:	117a      	asrs	r2, r7, #5
 800ba16:	2301      	movs	r3, #1
 800ba18:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800ba1c:	f007 071f 	and.w	r7, r7, #31
 800ba20:	40bb      	lsls	r3, r7
 800ba22:	4213      	tst	r3, r2
 800ba24:	4629      	mov	r1, r5
 800ba26:	4620      	mov	r0, r4
 800ba28:	bf18      	it	ne
 800ba2a:	f049 0902 	orrne.w	r9, r9, #2
 800ba2e:	f7ff fe21 	bl	800b674 <rshift>
 800ba32:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800ba36:	1b76      	subs	r6, r6, r5
 800ba38:	2502      	movs	r5, #2
 800ba3a:	f1b9 0f00 	cmp.w	r9, #0
 800ba3e:	d047      	beq.n	800bad0 <__gethex+0x38c>
 800ba40:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800ba44:	2b02      	cmp	r3, #2
 800ba46:	d015      	beq.n	800ba74 <__gethex+0x330>
 800ba48:	2b03      	cmp	r3, #3
 800ba4a:	d017      	beq.n	800ba7c <__gethex+0x338>
 800ba4c:	2b01      	cmp	r3, #1
 800ba4e:	d109      	bne.n	800ba64 <__gethex+0x320>
 800ba50:	f019 0f02 	tst.w	r9, #2
 800ba54:	d006      	beq.n	800ba64 <__gethex+0x320>
 800ba56:	f8da 3000 	ldr.w	r3, [sl]
 800ba5a:	ea49 0903 	orr.w	r9, r9, r3
 800ba5e:	f019 0f01 	tst.w	r9, #1
 800ba62:	d10e      	bne.n	800ba82 <__gethex+0x33e>
 800ba64:	f045 0510 	orr.w	r5, r5, #16
 800ba68:	e032      	b.n	800bad0 <__gethex+0x38c>
 800ba6a:	f04f 0901 	mov.w	r9, #1
 800ba6e:	e7d1      	b.n	800ba14 <__gethex+0x2d0>
 800ba70:	2501      	movs	r5, #1
 800ba72:	e7e2      	b.n	800ba3a <__gethex+0x2f6>
 800ba74:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ba76:	f1c3 0301 	rsb	r3, r3, #1
 800ba7a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ba7c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ba7e:	2b00      	cmp	r3, #0
 800ba80:	d0f0      	beq.n	800ba64 <__gethex+0x320>
 800ba82:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800ba86:	f104 0314 	add.w	r3, r4, #20
 800ba8a:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800ba8e:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800ba92:	f04f 0c00 	mov.w	ip, #0
 800ba96:	4618      	mov	r0, r3
 800ba98:	f853 2b04 	ldr.w	r2, [r3], #4
 800ba9c:	f1b2 3fff 	cmp.w	r2, #4294967295	@ 0xffffffff
 800baa0:	d01b      	beq.n	800bada <__gethex+0x396>
 800baa2:	3201      	adds	r2, #1
 800baa4:	6002      	str	r2, [r0, #0]
 800baa6:	2d02      	cmp	r5, #2
 800baa8:	f104 0314 	add.w	r3, r4, #20
 800baac:	d13c      	bne.n	800bb28 <__gethex+0x3e4>
 800baae:	f8d8 2000 	ldr.w	r2, [r8]
 800bab2:	3a01      	subs	r2, #1
 800bab4:	42b2      	cmp	r2, r6
 800bab6:	d109      	bne.n	800bacc <__gethex+0x388>
 800bab8:	1171      	asrs	r1, r6, #5
 800baba:	2201      	movs	r2, #1
 800babc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bac0:	f006 061f 	and.w	r6, r6, #31
 800bac4:	fa02 f606 	lsl.w	r6, r2, r6
 800bac8:	421e      	tst	r6, r3
 800baca:	d13a      	bne.n	800bb42 <__gethex+0x3fe>
 800bacc:	f045 0520 	orr.w	r5, r5, #32
 800bad0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800bad2:	601c      	str	r4, [r3, #0]
 800bad4:	9b02      	ldr	r3, [sp, #8]
 800bad6:	601f      	str	r7, [r3, #0]
 800bad8:	e6b0      	b.n	800b83c <__gethex+0xf8>
 800bada:	4299      	cmp	r1, r3
 800badc:	f843 cc04 	str.w	ip, [r3, #-4]
 800bae0:	d8d9      	bhi.n	800ba96 <__gethex+0x352>
 800bae2:	68a3      	ldr	r3, [r4, #8]
 800bae4:	459b      	cmp	fp, r3
 800bae6:	db17      	blt.n	800bb18 <__gethex+0x3d4>
 800bae8:	6861      	ldr	r1, [r4, #4]
 800baea:	9801      	ldr	r0, [sp, #4]
 800baec:	3101      	adds	r1, #1
 800baee:	f000 f90d 	bl	800bd0c <_Balloc>
 800baf2:	4681      	mov	r9, r0
 800baf4:	b918      	cbnz	r0, 800bafe <__gethex+0x3ba>
 800baf6:	4b1a      	ldr	r3, [pc, #104]	@ (800bb60 <__gethex+0x41c>)
 800baf8:	4602      	mov	r2, r0
 800bafa:	2184      	movs	r1, #132	@ 0x84
 800bafc:	e6c5      	b.n	800b88a <__gethex+0x146>
 800bafe:	6922      	ldr	r2, [r4, #16]
 800bb00:	3202      	adds	r2, #2
 800bb02:	f104 010c 	add.w	r1, r4, #12
 800bb06:	0092      	lsls	r2, r2, #2
 800bb08:	300c      	adds	r0, #12
 800bb0a:	f7fe fef4 	bl	800a8f6 <memcpy>
 800bb0e:	4621      	mov	r1, r4
 800bb10:	9801      	ldr	r0, [sp, #4]
 800bb12:	f000 f93b 	bl	800bd8c <_Bfree>
 800bb16:	464c      	mov	r4, r9
 800bb18:	6923      	ldr	r3, [r4, #16]
 800bb1a:	1c5a      	adds	r2, r3, #1
 800bb1c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800bb20:	6122      	str	r2, [r4, #16]
 800bb22:	2201      	movs	r2, #1
 800bb24:	615a      	str	r2, [r3, #20]
 800bb26:	e7be      	b.n	800baa6 <__gethex+0x362>
 800bb28:	6922      	ldr	r2, [r4, #16]
 800bb2a:	455a      	cmp	r2, fp
 800bb2c:	dd0b      	ble.n	800bb46 <__gethex+0x402>
 800bb2e:	2101      	movs	r1, #1
 800bb30:	4620      	mov	r0, r4
 800bb32:	f7ff fd9f 	bl	800b674 <rshift>
 800bb36:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800bb3a:	3701      	adds	r7, #1
 800bb3c:	42bb      	cmp	r3, r7
 800bb3e:	f6ff aee0 	blt.w	800b902 <__gethex+0x1be>
 800bb42:	2501      	movs	r5, #1
 800bb44:	e7c2      	b.n	800bacc <__gethex+0x388>
 800bb46:	f016 061f 	ands.w	r6, r6, #31
 800bb4a:	d0fa      	beq.n	800bb42 <__gethex+0x3fe>
 800bb4c:	4453      	add	r3, sl
 800bb4e:	f1c6 0620 	rsb	r6, r6, #32
 800bb52:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800bb56:	f000 f9cb 	bl	800bef0 <__hi0bits>
 800bb5a:	42b0      	cmp	r0, r6
 800bb5c:	dbe7      	blt.n	800bb2e <__gethex+0x3ea>
 800bb5e:	e7f0      	b.n	800bb42 <__gethex+0x3fe>
 800bb60:	0800d583 	.word	0x0800d583

0800bb64 <L_shift>:
 800bb64:	f1c2 0208 	rsb	r2, r2, #8
 800bb68:	0092      	lsls	r2, r2, #2
 800bb6a:	b570      	push	{r4, r5, r6, lr}
 800bb6c:	f1c2 0620 	rsb	r6, r2, #32
 800bb70:	6843      	ldr	r3, [r0, #4]
 800bb72:	6804      	ldr	r4, [r0, #0]
 800bb74:	fa03 f506 	lsl.w	r5, r3, r6
 800bb78:	432c      	orrs	r4, r5
 800bb7a:	40d3      	lsrs	r3, r2
 800bb7c:	6004      	str	r4, [r0, #0]
 800bb7e:	f840 3f04 	str.w	r3, [r0, #4]!
 800bb82:	4288      	cmp	r0, r1
 800bb84:	d3f4      	bcc.n	800bb70 <L_shift+0xc>
 800bb86:	bd70      	pop	{r4, r5, r6, pc}

0800bb88 <__match>:
 800bb88:	b530      	push	{r4, r5, lr}
 800bb8a:	6803      	ldr	r3, [r0, #0]
 800bb8c:	3301      	adds	r3, #1
 800bb8e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bb92:	b914      	cbnz	r4, 800bb9a <__match+0x12>
 800bb94:	6003      	str	r3, [r0, #0]
 800bb96:	2001      	movs	r0, #1
 800bb98:	bd30      	pop	{r4, r5, pc}
 800bb9a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bb9e:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800bba2:	2d19      	cmp	r5, #25
 800bba4:	bf98      	it	ls
 800bba6:	3220      	addls	r2, #32
 800bba8:	42a2      	cmp	r2, r4
 800bbaa:	d0f0      	beq.n	800bb8e <__match+0x6>
 800bbac:	2000      	movs	r0, #0
 800bbae:	e7f3      	b.n	800bb98 <__match+0x10>

0800bbb0 <__hexnan>:
 800bbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbb4:	680b      	ldr	r3, [r1, #0]
 800bbb6:	6801      	ldr	r1, [r0, #0]
 800bbb8:	115e      	asrs	r6, r3, #5
 800bbba:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800bbbe:	f013 031f 	ands.w	r3, r3, #31
 800bbc2:	b087      	sub	sp, #28
 800bbc4:	bf18      	it	ne
 800bbc6:	3604      	addne	r6, #4
 800bbc8:	2500      	movs	r5, #0
 800bbca:	1f37      	subs	r7, r6, #4
 800bbcc:	4682      	mov	sl, r0
 800bbce:	4690      	mov	r8, r2
 800bbd0:	9301      	str	r3, [sp, #4]
 800bbd2:	f846 5c04 	str.w	r5, [r6, #-4]
 800bbd6:	46b9      	mov	r9, r7
 800bbd8:	463c      	mov	r4, r7
 800bbda:	9502      	str	r5, [sp, #8]
 800bbdc:	46ab      	mov	fp, r5
 800bbde:	784a      	ldrb	r2, [r1, #1]
 800bbe0:	1c4b      	adds	r3, r1, #1
 800bbe2:	9303      	str	r3, [sp, #12]
 800bbe4:	b342      	cbz	r2, 800bc38 <__hexnan+0x88>
 800bbe6:	4610      	mov	r0, r2
 800bbe8:	9105      	str	r1, [sp, #20]
 800bbea:	9204      	str	r2, [sp, #16]
 800bbec:	f7ff fd94 	bl	800b718 <__hexdig_fun>
 800bbf0:	2800      	cmp	r0, #0
 800bbf2:	d151      	bne.n	800bc98 <__hexnan+0xe8>
 800bbf4:	9a04      	ldr	r2, [sp, #16]
 800bbf6:	9905      	ldr	r1, [sp, #20]
 800bbf8:	2a20      	cmp	r2, #32
 800bbfa:	d818      	bhi.n	800bc2e <__hexnan+0x7e>
 800bbfc:	9b02      	ldr	r3, [sp, #8]
 800bbfe:	459b      	cmp	fp, r3
 800bc00:	dd13      	ble.n	800bc2a <__hexnan+0x7a>
 800bc02:	454c      	cmp	r4, r9
 800bc04:	d206      	bcs.n	800bc14 <__hexnan+0x64>
 800bc06:	2d07      	cmp	r5, #7
 800bc08:	dc04      	bgt.n	800bc14 <__hexnan+0x64>
 800bc0a:	462a      	mov	r2, r5
 800bc0c:	4649      	mov	r1, r9
 800bc0e:	4620      	mov	r0, r4
 800bc10:	f7ff ffa8 	bl	800bb64 <L_shift>
 800bc14:	4544      	cmp	r4, r8
 800bc16:	d952      	bls.n	800bcbe <__hexnan+0x10e>
 800bc18:	2300      	movs	r3, #0
 800bc1a:	f1a4 0904 	sub.w	r9, r4, #4
 800bc1e:	f844 3c04 	str.w	r3, [r4, #-4]
 800bc22:	f8cd b008 	str.w	fp, [sp, #8]
 800bc26:	464c      	mov	r4, r9
 800bc28:	461d      	mov	r5, r3
 800bc2a:	9903      	ldr	r1, [sp, #12]
 800bc2c:	e7d7      	b.n	800bbde <__hexnan+0x2e>
 800bc2e:	2a29      	cmp	r2, #41	@ 0x29
 800bc30:	d157      	bne.n	800bce2 <__hexnan+0x132>
 800bc32:	3102      	adds	r1, #2
 800bc34:	f8ca 1000 	str.w	r1, [sl]
 800bc38:	f1bb 0f00 	cmp.w	fp, #0
 800bc3c:	d051      	beq.n	800bce2 <__hexnan+0x132>
 800bc3e:	454c      	cmp	r4, r9
 800bc40:	d206      	bcs.n	800bc50 <__hexnan+0xa0>
 800bc42:	2d07      	cmp	r5, #7
 800bc44:	dc04      	bgt.n	800bc50 <__hexnan+0xa0>
 800bc46:	462a      	mov	r2, r5
 800bc48:	4649      	mov	r1, r9
 800bc4a:	4620      	mov	r0, r4
 800bc4c:	f7ff ff8a 	bl	800bb64 <L_shift>
 800bc50:	4544      	cmp	r4, r8
 800bc52:	d936      	bls.n	800bcc2 <__hexnan+0x112>
 800bc54:	f1a8 0204 	sub.w	r2, r8, #4
 800bc58:	4623      	mov	r3, r4
 800bc5a:	f853 1b04 	ldr.w	r1, [r3], #4
 800bc5e:	f842 1f04 	str.w	r1, [r2, #4]!
 800bc62:	429f      	cmp	r7, r3
 800bc64:	d2f9      	bcs.n	800bc5a <__hexnan+0xaa>
 800bc66:	1b3b      	subs	r3, r7, r4
 800bc68:	f023 0303 	bic.w	r3, r3, #3
 800bc6c:	3304      	adds	r3, #4
 800bc6e:	3401      	adds	r4, #1
 800bc70:	3e03      	subs	r6, #3
 800bc72:	42b4      	cmp	r4, r6
 800bc74:	bf88      	it	hi
 800bc76:	2304      	movhi	r3, #4
 800bc78:	4443      	add	r3, r8
 800bc7a:	2200      	movs	r2, #0
 800bc7c:	f843 2b04 	str.w	r2, [r3], #4
 800bc80:	429f      	cmp	r7, r3
 800bc82:	d2fb      	bcs.n	800bc7c <__hexnan+0xcc>
 800bc84:	683b      	ldr	r3, [r7, #0]
 800bc86:	b91b      	cbnz	r3, 800bc90 <__hexnan+0xe0>
 800bc88:	4547      	cmp	r7, r8
 800bc8a:	d128      	bne.n	800bcde <__hexnan+0x12e>
 800bc8c:	2301      	movs	r3, #1
 800bc8e:	603b      	str	r3, [r7, #0]
 800bc90:	2005      	movs	r0, #5
 800bc92:	b007      	add	sp, #28
 800bc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc98:	3501      	adds	r5, #1
 800bc9a:	2d08      	cmp	r5, #8
 800bc9c:	f10b 0b01 	add.w	fp, fp, #1
 800bca0:	dd06      	ble.n	800bcb0 <__hexnan+0x100>
 800bca2:	4544      	cmp	r4, r8
 800bca4:	d9c1      	bls.n	800bc2a <__hexnan+0x7a>
 800bca6:	2300      	movs	r3, #0
 800bca8:	f844 3c04 	str.w	r3, [r4, #-4]
 800bcac:	2501      	movs	r5, #1
 800bcae:	3c04      	subs	r4, #4
 800bcb0:	6822      	ldr	r2, [r4, #0]
 800bcb2:	f000 000f 	and.w	r0, r0, #15
 800bcb6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800bcba:	6020      	str	r0, [r4, #0]
 800bcbc:	e7b5      	b.n	800bc2a <__hexnan+0x7a>
 800bcbe:	2508      	movs	r5, #8
 800bcc0:	e7b3      	b.n	800bc2a <__hexnan+0x7a>
 800bcc2:	9b01      	ldr	r3, [sp, #4]
 800bcc4:	2b00      	cmp	r3, #0
 800bcc6:	d0dd      	beq.n	800bc84 <__hexnan+0xd4>
 800bcc8:	f1c3 0320 	rsb	r3, r3, #32
 800bccc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800bcd0:	40da      	lsrs	r2, r3
 800bcd2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800bcd6:	4013      	ands	r3, r2
 800bcd8:	f846 3c04 	str.w	r3, [r6, #-4]
 800bcdc:	e7d2      	b.n	800bc84 <__hexnan+0xd4>
 800bcde:	3f04      	subs	r7, #4
 800bce0:	e7d0      	b.n	800bc84 <__hexnan+0xd4>
 800bce2:	2004      	movs	r0, #4
 800bce4:	e7d5      	b.n	800bc92 <__hexnan+0xe2>

0800bce6 <__ascii_mbtowc>:
 800bce6:	b082      	sub	sp, #8
 800bce8:	b901      	cbnz	r1, 800bcec <__ascii_mbtowc+0x6>
 800bcea:	a901      	add	r1, sp, #4
 800bcec:	b142      	cbz	r2, 800bd00 <__ascii_mbtowc+0x1a>
 800bcee:	b14b      	cbz	r3, 800bd04 <__ascii_mbtowc+0x1e>
 800bcf0:	7813      	ldrb	r3, [r2, #0]
 800bcf2:	600b      	str	r3, [r1, #0]
 800bcf4:	7812      	ldrb	r2, [r2, #0]
 800bcf6:	1e10      	subs	r0, r2, #0
 800bcf8:	bf18      	it	ne
 800bcfa:	2001      	movne	r0, #1
 800bcfc:	b002      	add	sp, #8
 800bcfe:	4770      	bx	lr
 800bd00:	4610      	mov	r0, r2
 800bd02:	e7fb      	b.n	800bcfc <__ascii_mbtowc+0x16>
 800bd04:	f06f 0001 	mvn.w	r0, #1
 800bd08:	e7f8      	b.n	800bcfc <__ascii_mbtowc+0x16>
	...

0800bd0c <_Balloc>:
 800bd0c:	b570      	push	{r4, r5, r6, lr}
 800bd0e:	69c6      	ldr	r6, [r0, #28]
 800bd10:	4604      	mov	r4, r0
 800bd12:	460d      	mov	r5, r1
 800bd14:	b976      	cbnz	r6, 800bd34 <_Balloc+0x28>
 800bd16:	2010      	movs	r0, #16
 800bd18:	f7fc ff98 	bl	8008c4c <malloc>
 800bd1c:	4602      	mov	r2, r0
 800bd1e:	61e0      	str	r0, [r4, #28]
 800bd20:	b920      	cbnz	r0, 800bd2c <_Balloc+0x20>
 800bd22:	4b18      	ldr	r3, [pc, #96]	@ (800bd84 <_Balloc+0x78>)
 800bd24:	4818      	ldr	r0, [pc, #96]	@ (800bd88 <_Balloc+0x7c>)
 800bd26:	216b      	movs	r1, #107	@ 0x6b
 800bd28:	f7fc ff72 	bl	8008c10 <__assert_func>
 800bd2c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800bd30:	6006      	str	r6, [r0, #0]
 800bd32:	60c6      	str	r6, [r0, #12]
 800bd34:	69e6      	ldr	r6, [r4, #28]
 800bd36:	68f3      	ldr	r3, [r6, #12]
 800bd38:	b183      	cbz	r3, 800bd5c <_Balloc+0x50>
 800bd3a:	69e3      	ldr	r3, [r4, #28]
 800bd3c:	68db      	ldr	r3, [r3, #12]
 800bd3e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800bd42:	b9b8      	cbnz	r0, 800bd74 <_Balloc+0x68>
 800bd44:	2101      	movs	r1, #1
 800bd46:	fa01 f605 	lsl.w	r6, r1, r5
 800bd4a:	1d72      	adds	r2, r6, #5
 800bd4c:	0092      	lsls	r2, r2, #2
 800bd4e:	4620      	mov	r0, r4
 800bd50:	f001 f8d2 	bl	800cef8 <_calloc_r>
 800bd54:	b160      	cbz	r0, 800bd70 <_Balloc+0x64>
 800bd56:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800bd5a:	e00e      	b.n	800bd7a <_Balloc+0x6e>
 800bd5c:	2221      	movs	r2, #33	@ 0x21
 800bd5e:	2104      	movs	r1, #4
 800bd60:	4620      	mov	r0, r4
 800bd62:	f001 f8c9 	bl	800cef8 <_calloc_r>
 800bd66:	69e3      	ldr	r3, [r4, #28]
 800bd68:	60f0      	str	r0, [r6, #12]
 800bd6a:	68db      	ldr	r3, [r3, #12]
 800bd6c:	2b00      	cmp	r3, #0
 800bd6e:	d1e4      	bne.n	800bd3a <_Balloc+0x2e>
 800bd70:	2000      	movs	r0, #0
 800bd72:	bd70      	pop	{r4, r5, r6, pc}
 800bd74:	6802      	ldr	r2, [r0, #0]
 800bd76:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800bd7a:	2300      	movs	r3, #0
 800bd7c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800bd80:	e7f7      	b.n	800bd72 <_Balloc+0x66>
 800bd82:	bf00      	nop
 800bd84:	0800d4a5 	.word	0x0800d4a5
 800bd88:	0800d5f4 	.word	0x0800d5f4

0800bd8c <_Bfree>:
 800bd8c:	b570      	push	{r4, r5, r6, lr}
 800bd8e:	69c6      	ldr	r6, [r0, #28]
 800bd90:	4605      	mov	r5, r0
 800bd92:	460c      	mov	r4, r1
 800bd94:	b976      	cbnz	r6, 800bdb4 <_Bfree+0x28>
 800bd96:	2010      	movs	r0, #16
 800bd98:	f7fc ff58 	bl	8008c4c <malloc>
 800bd9c:	4602      	mov	r2, r0
 800bd9e:	61e8      	str	r0, [r5, #28]
 800bda0:	b920      	cbnz	r0, 800bdac <_Bfree+0x20>
 800bda2:	4b09      	ldr	r3, [pc, #36]	@ (800bdc8 <_Bfree+0x3c>)
 800bda4:	4809      	ldr	r0, [pc, #36]	@ (800bdcc <_Bfree+0x40>)
 800bda6:	218f      	movs	r1, #143	@ 0x8f
 800bda8:	f7fc ff32 	bl	8008c10 <__assert_func>
 800bdac:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800bdb0:	6006      	str	r6, [r0, #0]
 800bdb2:	60c6      	str	r6, [r0, #12]
 800bdb4:	b13c      	cbz	r4, 800bdc6 <_Bfree+0x3a>
 800bdb6:	69eb      	ldr	r3, [r5, #28]
 800bdb8:	6862      	ldr	r2, [r4, #4]
 800bdba:	68db      	ldr	r3, [r3, #12]
 800bdbc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800bdc0:	6021      	str	r1, [r4, #0]
 800bdc2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800bdc6:	bd70      	pop	{r4, r5, r6, pc}
 800bdc8:	0800d4a5 	.word	0x0800d4a5
 800bdcc:	0800d5f4 	.word	0x0800d5f4

0800bdd0 <__multadd>:
 800bdd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdd4:	690d      	ldr	r5, [r1, #16]
 800bdd6:	4607      	mov	r7, r0
 800bdd8:	460c      	mov	r4, r1
 800bdda:	461e      	mov	r6, r3
 800bddc:	f101 0c14 	add.w	ip, r1, #20
 800bde0:	2000      	movs	r0, #0
 800bde2:	f8dc 3000 	ldr.w	r3, [ip]
 800bde6:	b299      	uxth	r1, r3
 800bde8:	fb02 6101 	mla	r1, r2, r1, r6
 800bdec:	0c1e      	lsrs	r6, r3, #16
 800bdee:	0c0b      	lsrs	r3, r1, #16
 800bdf0:	fb02 3306 	mla	r3, r2, r6, r3
 800bdf4:	b289      	uxth	r1, r1
 800bdf6:	3001      	adds	r0, #1
 800bdf8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800bdfc:	4285      	cmp	r5, r0
 800bdfe:	f84c 1b04 	str.w	r1, [ip], #4
 800be02:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800be06:	dcec      	bgt.n	800bde2 <__multadd+0x12>
 800be08:	b30e      	cbz	r6, 800be4e <__multadd+0x7e>
 800be0a:	68a3      	ldr	r3, [r4, #8]
 800be0c:	42ab      	cmp	r3, r5
 800be0e:	dc19      	bgt.n	800be44 <__multadd+0x74>
 800be10:	6861      	ldr	r1, [r4, #4]
 800be12:	4638      	mov	r0, r7
 800be14:	3101      	adds	r1, #1
 800be16:	f7ff ff79 	bl	800bd0c <_Balloc>
 800be1a:	4680      	mov	r8, r0
 800be1c:	b928      	cbnz	r0, 800be2a <__multadd+0x5a>
 800be1e:	4602      	mov	r2, r0
 800be20:	4b0c      	ldr	r3, [pc, #48]	@ (800be54 <__multadd+0x84>)
 800be22:	480d      	ldr	r0, [pc, #52]	@ (800be58 <__multadd+0x88>)
 800be24:	21ba      	movs	r1, #186	@ 0xba
 800be26:	f7fc fef3 	bl	8008c10 <__assert_func>
 800be2a:	6922      	ldr	r2, [r4, #16]
 800be2c:	3202      	adds	r2, #2
 800be2e:	f104 010c 	add.w	r1, r4, #12
 800be32:	0092      	lsls	r2, r2, #2
 800be34:	300c      	adds	r0, #12
 800be36:	f7fe fd5e 	bl	800a8f6 <memcpy>
 800be3a:	4621      	mov	r1, r4
 800be3c:	4638      	mov	r0, r7
 800be3e:	f7ff ffa5 	bl	800bd8c <_Bfree>
 800be42:	4644      	mov	r4, r8
 800be44:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800be48:	3501      	adds	r5, #1
 800be4a:	615e      	str	r6, [r3, #20]
 800be4c:	6125      	str	r5, [r4, #16]
 800be4e:	4620      	mov	r0, r4
 800be50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be54:	0800d583 	.word	0x0800d583
 800be58:	0800d5f4 	.word	0x0800d5f4

0800be5c <__s2b>:
 800be5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800be60:	460c      	mov	r4, r1
 800be62:	4615      	mov	r5, r2
 800be64:	461f      	mov	r7, r3
 800be66:	2209      	movs	r2, #9
 800be68:	3308      	adds	r3, #8
 800be6a:	4606      	mov	r6, r0
 800be6c:	fb93 f3f2 	sdiv	r3, r3, r2
 800be70:	2100      	movs	r1, #0
 800be72:	2201      	movs	r2, #1
 800be74:	429a      	cmp	r2, r3
 800be76:	db09      	blt.n	800be8c <__s2b+0x30>
 800be78:	4630      	mov	r0, r6
 800be7a:	f7ff ff47 	bl	800bd0c <_Balloc>
 800be7e:	b940      	cbnz	r0, 800be92 <__s2b+0x36>
 800be80:	4602      	mov	r2, r0
 800be82:	4b19      	ldr	r3, [pc, #100]	@ (800bee8 <__s2b+0x8c>)
 800be84:	4819      	ldr	r0, [pc, #100]	@ (800beec <__s2b+0x90>)
 800be86:	21d3      	movs	r1, #211	@ 0xd3
 800be88:	f7fc fec2 	bl	8008c10 <__assert_func>
 800be8c:	0052      	lsls	r2, r2, #1
 800be8e:	3101      	adds	r1, #1
 800be90:	e7f0      	b.n	800be74 <__s2b+0x18>
 800be92:	9b08      	ldr	r3, [sp, #32]
 800be94:	6143      	str	r3, [r0, #20]
 800be96:	2d09      	cmp	r5, #9
 800be98:	f04f 0301 	mov.w	r3, #1
 800be9c:	6103      	str	r3, [r0, #16]
 800be9e:	dd16      	ble.n	800bece <__s2b+0x72>
 800bea0:	f104 0909 	add.w	r9, r4, #9
 800bea4:	46c8      	mov	r8, r9
 800bea6:	442c      	add	r4, r5
 800bea8:	f818 3b01 	ldrb.w	r3, [r8], #1
 800beac:	4601      	mov	r1, r0
 800beae:	3b30      	subs	r3, #48	@ 0x30
 800beb0:	220a      	movs	r2, #10
 800beb2:	4630      	mov	r0, r6
 800beb4:	f7ff ff8c 	bl	800bdd0 <__multadd>
 800beb8:	45a0      	cmp	r8, r4
 800beba:	d1f5      	bne.n	800bea8 <__s2b+0x4c>
 800bebc:	f1a5 0408 	sub.w	r4, r5, #8
 800bec0:	444c      	add	r4, r9
 800bec2:	1b2d      	subs	r5, r5, r4
 800bec4:	1963      	adds	r3, r4, r5
 800bec6:	42bb      	cmp	r3, r7
 800bec8:	db04      	blt.n	800bed4 <__s2b+0x78>
 800beca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bece:	340a      	adds	r4, #10
 800bed0:	2509      	movs	r5, #9
 800bed2:	e7f6      	b.n	800bec2 <__s2b+0x66>
 800bed4:	f814 3b01 	ldrb.w	r3, [r4], #1
 800bed8:	4601      	mov	r1, r0
 800beda:	3b30      	subs	r3, #48	@ 0x30
 800bedc:	220a      	movs	r2, #10
 800bede:	4630      	mov	r0, r6
 800bee0:	f7ff ff76 	bl	800bdd0 <__multadd>
 800bee4:	e7ee      	b.n	800bec4 <__s2b+0x68>
 800bee6:	bf00      	nop
 800bee8:	0800d583 	.word	0x0800d583
 800beec:	0800d5f4 	.word	0x0800d5f4

0800bef0 <__hi0bits>:
 800bef0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800bef4:	4603      	mov	r3, r0
 800bef6:	bf36      	itet	cc
 800bef8:	0403      	lslcc	r3, r0, #16
 800befa:	2000      	movcs	r0, #0
 800befc:	2010      	movcc	r0, #16
 800befe:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800bf02:	bf3c      	itt	cc
 800bf04:	021b      	lslcc	r3, r3, #8
 800bf06:	3008      	addcc	r0, #8
 800bf08:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800bf0c:	bf3c      	itt	cc
 800bf0e:	011b      	lslcc	r3, r3, #4
 800bf10:	3004      	addcc	r0, #4
 800bf12:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800bf16:	bf3c      	itt	cc
 800bf18:	009b      	lslcc	r3, r3, #2
 800bf1a:	3002      	addcc	r0, #2
 800bf1c:	2b00      	cmp	r3, #0
 800bf1e:	db05      	blt.n	800bf2c <__hi0bits+0x3c>
 800bf20:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800bf24:	f100 0001 	add.w	r0, r0, #1
 800bf28:	bf08      	it	eq
 800bf2a:	2020      	moveq	r0, #32
 800bf2c:	4770      	bx	lr

0800bf2e <__lo0bits>:
 800bf2e:	6803      	ldr	r3, [r0, #0]
 800bf30:	4602      	mov	r2, r0
 800bf32:	f013 0007 	ands.w	r0, r3, #7
 800bf36:	d00b      	beq.n	800bf50 <__lo0bits+0x22>
 800bf38:	07d9      	lsls	r1, r3, #31
 800bf3a:	d421      	bmi.n	800bf80 <__lo0bits+0x52>
 800bf3c:	0798      	lsls	r0, r3, #30
 800bf3e:	bf49      	itett	mi
 800bf40:	085b      	lsrmi	r3, r3, #1
 800bf42:	089b      	lsrpl	r3, r3, #2
 800bf44:	2001      	movmi	r0, #1
 800bf46:	6013      	strmi	r3, [r2, #0]
 800bf48:	bf5c      	itt	pl
 800bf4a:	6013      	strpl	r3, [r2, #0]
 800bf4c:	2002      	movpl	r0, #2
 800bf4e:	4770      	bx	lr
 800bf50:	b299      	uxth	r1, r3
 800bf52:	b909      	cbnz	r1, 800bf58 <__lo0bits+0x2a>
 800bf54:	0c1b      	lsrs	r3, r3, #16
 800bf56:	2010      	movs	r0, #16
 800bf58:	b2d9      	uxtb	r1, r3
 800bf5a:	b909      	cbnz	r1, 800bf60 <__lo0bits+0x32>
 800bf5c:	3008      	adds	r0, #8
 800bf5e:	0a1b      	lsrs	r3, r3, #8
 800bf60:	0719      	lsls	r1, r3, #28
 800bf62:	bf04      	itt	eq
 800bf64:	091b      	lsreq	r3, r3, #4
 800bf66:	3004      	addeq	r0, #4
 800bf68:	0799      	lsls	r1, r3, #30
 800bf6a:	bf04      	itt	eq
 800bf6c:	089b      	lsreq	r3, r3, #2
 800bf6e:	3002      	addeq	r0, #2
 800bf70:	07d9      	lsls	r1, r3, #31
 800bf72:	d403      	bmi.n	800bf7c <__lo0bits+0x4e>
 800bf74:	085b      	lsrs	r3, r3, #1
 800bf76:	f100 0001 	add.w	r0, r0, #1
 800bf7a:	d003      	beq.n	800bf84 <__lo0bits+0x56>
 800bf7c:	6013      	str	r3, [r2, #0]
 800bf7e:	4770      	bx	lr
 800bf80:	2000      	movs	r0, #0
 800bf82:	4770      	bx	lr
 800bf84:	2020      	movs	r0, #32
 800bf86:	4770      	bx	lr

0800bf88 <__i2b>:
 800bf88:	b510      	push	{r4, lr}
 800bf8a:	460c      	mov	r4, r1
 800bf8c:	2101      	movs	r1, #1
 800bf8e:	f7ff febd 	bl	800bd0c <_Balloc>
 800bf92:	4602      	mov	r2, r0
 800bf94:	b928      	cbnz	r0, 800bfa2 <__i2b+0x1a>
 800bf96:	4b05      	ldr	r3, [pc, #20]	@ (800bfac <__i2b+0x24>)
 800bf98:	4805      	ldr	r0, [pc, #20]	@ (800bfb0 <__i2b+0x28>)
 800bf9a:	f240 1145 	movw	r1, #325	@ 0x145
 800bf9e:	f7fc fe37 	bl	8008c10 <__assert_func>
 800bfa2:	2301      	movs	r3, #1
 800bfa4:	6144      	str	r4, [r0, #20]
 800bfa6:	6103      	str	r3, [r0, #16]
 800bfa8:	bd10      	pop	{r4, pc}
 800bfaa:	bf00      	nop
 800bfac:	0800d583 	.word	0x0800d583
 800bfb0:	0800d5f4 	.word	0x0800d5f4

0800bfb4 <__multiply>:
 800bfb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfb8:	4614      	mov	r4, r2
 800bfba:	690a      	ldr	r2, [r1, #16]
 800bfbc:	6923      	ldr	r3, [r4, #16]
 800bfbe:	429a      	cmp	r2, r3
 800bfc0:	bfa8      	it	ge
 800bfc2:	4623      	movge	r3, r4
 800bfc4:	460f      	mov	r7, r1
 800bfc6:	bfa4      	itt	ge
 800bfc8:	460c      	movge	r4, r1
 800bfca:	461f      	movge	r7, r3
 800bfcc:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800bfd0:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800bfd4:	68a3      	ldr	r3, [r4, #8]
 800bfd6:	6861      	ldr	r1, [r4, #4]
 800bfd8:	eb0a 0609 	add.w	r6, sl, r9
 800bfdc:	42b3      	cmp	r3, r6
 800bfde:	b085      	sub	sp, #20
 800bfe0:	bfb8      	it	lt
 800bfe2:	3101      	addlt	r1, #1
 800bfe4:	f7ff fe92 	bl	800bd0c <_Balloc>
 800bfe8:	b930      	cbnz	r0, 800bff8 <__multiply+0x44>
 800bfea:	4602      	mov	r2, r0
 800bfec:	4b44      	ldr	r3, [pc, #272]	@ (800c100 <__multiply+0x14c>)
 800bfee:	4845      	ldr	r0, [pc, #276]	@ (800c104 <__multiply+0x150>)
 800bff0:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800bff4:	f7fc fe0c 	bl	8008c10 <__assert_func>
 800bff8:	f100 0514 	add.w	r5, r0, #20
 800bffc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800c000:	462b      	mov	r3, r5
 800c002:	2200      	movs	r2, #0
 800c004:	4543      	cmp	r3, r8
 800c006:	d321      	bcc.n	800c04c <__multiply+0x98>
 800c008:	f107 0114 	add.w	r1, r7, #20
 800c00c:	f104 0214 	add.w	r2, r4, #20
 800c010:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800c014:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800c018:	9302      	str	r3, [sp, #8]
 800c01a:	1b13      	subs	r3, r2, r4
 800c01c:	3b15      	subs	r3, #21
 800c01e:	f023 0303 	bic.w	r3, r3, #3
 800c022:	3304      	adds	r3, #4
 800c024:	f104 0715 	add.w	r7, r4, #21
 800c028:	42ba      	cmp	r2, r7
 800c02a:	bf38      	it	cc
 800c02c:	2304      	movcc	r3, #4
 800c02e:	9301      	str	r3, [sp, #4]
 800c030:	9b02      	ldr	r3, [sp, #8]
 800c032:	9103      	str	r1, [sp, #12]
 800c034:	428b      	cmp	r3, r1
 800c036:	d80c      	bhi.n	800c052 <__multiply+0x9e>
 800c038:	2e00      	cmp	r6, #0
 800c03a:	dd03      	ble.n	800c044 <__multiply+0x90>
 800c03c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800c040:	2b00      	cmp	r3, #0
 800c042:	d05b      	beq.n	800c0fc <__multiply+0x148>
 800c044:	6106      	str	r6, [r0, #16]
 800c046:	b005      	add	sp, #20
 800c048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c04c:	f843 2b04 	str.w	r2, [r3], #4
 800c050:	e7d8      	b.n	800c004 <__multiply+0x50>
 800c052:	f8b1 a000 	ldrh.w	sl, [r1]
 800c056:	f1ba 0f00 	cmp.w	sl, #0
 800c05a:	d024      	beq.n	800c0a6 <__multiply+0xf2>
 800c05c:	f104 0e14 	add.w	lr, r4, #20
 800c060:	46a9      	mov	r9, r5
 800c062:	f04f 0c00 	mov.w	ip, #0
 800c066:	f85e 7b04 	ldr.w	r7, [lr], #4
 800c06a:	f8d9 3000 	ldr.w	r3, [r9]
 800c06e:	fa1f fb87 	uxth.w	fp, r7
 800c072:	b29b      	uxth	r3, r3
 800c074:	fb0a 330b 	mla	r3, sl, fp, r3
 800c078:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800c07c:	f8d9 7000 	ldr.w	r7, [r9]
 800c080:	4463      	add	r3, ip
 800c082:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800c086:	fb0a c70b 	mla	r7, sl, fp, ip
 800c08a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800c08e:	b29b      	uxth	r3, r3
 800c090:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800c094:	4572      	cmp	r2, lr
 800c096:	f849 3b04 	str.w	r3, [r9], #4
 800c09a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800c09e:	d8e2      	bhi.n	800c066 <__multiply+0xb2>
 800c0a0:	9b01      	ldr	r3, [sp, #4]
 800c0a2:	f845 c003 	str.w	ip, [r5, r3]
 800c0a6:	9b03      	ldr	r3, [sp, #12]
 800c0a8:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800c0ac:	3104      	adds	r1, #4
 800c0ae:	f1b9 0f00 	cmp.w	r9, #0
 800c0b2:	d021      	beq.n	800c0f8 <__multiply+0x144>
 800c0b4:	682b      	ldr	r3, [r5, #0]
 800c0b6:	f104 0c14 	add.w	ip, r4, #20
 800c0ba:	46ae      	mov	lr, r5
 800c0bc:	f04f 0a00 	mov.w	sl, #0
 800c0c0:	f8bc b000 	ldrh.w	fp, [ip]
 800c0c4:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800c0c8:	fb09 770b 	mla	r7, r9, fp, r7
 800c0cc:	4457      	add	r7, sl
 800c0ce:	b29b      	uxth	r3, r3
 800c0d0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800c0d4:	f84e 3b04 	str.w	r3, [lr], #4
 800c0d8:	f85c 3b04 	ldr.w	r3, [ip], #4
 800c0dc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800c0e0:	f8be 3000 	ldrh.w	r3, [lr]
 800c0e4:	fb09 330a 	mla	r3, r9, sl, r3
 800c0e8:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800c0ec:	4562      	cmp	r2, ip
 800c0ee:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800c0f2:	d8e5      	bhi.n	800c0c0 <__multiply+0x10c>
 800c0f4:	9f01      	ldr	r7, [sp, #4]
 800c0f6:	51eb      	str	r3, [r5, r7]
 800c0f8:	3504      	adds	r5, #4
 800c0fa:	e799      	b.n	800c030 <__multiply+0x7c>
 800c0fc:	3e01      	subs	r6, #1
 800c0fe:	e79b      	b.n	800c038 <__multiply+0x84>
 800c100:	0800d583 	.word	0x0800d583
 800c104:	0800d5f4 	.word	0x0800d5f4

0800c108 <__pow5mult>:
 800c108:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c10c:	4615      	mov	r5, r2
 800c10e:	f012 0203 	ands.w	r2, r2, #3
 800c112:	4607      	mov	r7, r0
 800c114:	460e      	mov	r6, r1
 800c116:	d007      	beq.n	800c128 <__pow5mult+0x20>
 800c118:	4c25      	ldr	r4, [pc, #148]	@ (800c1b0 <__pow5mult+0xa8>)
 800c11a:	3a01      	subs	r2, #1
 800c11c:	2300      	movs	r3, #0
 800c11e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800c122:	f7ff fe55 	bl	800bdd0 <__multadd>
 800c126:	4606      	mov	r6, r0
 800c128:	10ad      	asrs	r5, r5, #2
 800c12a:	d03d      	beq.n	800c1a8 <__pow5mult+0xa0>
 800c12c:	69fc      	ldr	r4, [r7, #28]
 800c12e:	b97c      	cbnz	r4, 800c150 <__pow5mult+0x48>
 800c130:	2010      	movs	r0, #16
 800c132:	f7fc fd8b 	bl	8008c4c <malloc>
 800c136:	4602      	mov	r2, r0
 800c138:	61f8      	str	r0, [r7, #28]
 800c13a:	b928      	cbnz	r0, 800c148 <__pow5mult+0x40>
 800c13c:	4b1d      	ldr	r3, [pc, #116]	@ (800c1b4 <__pow5mult+0xac>)
 800c13e:	481e      	ldr	r0, [pc, #120]	@ (800c1b8 <__pow5mult+0xb0>)
 800c140:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800c144:	f7fc fd64 	bl	8008c10 <__assert_func>
 800c148:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c14c:	6004      	str	r4, [r0, #0]
 800c14e:	60c4      	str	r4, [r0, #12]
 800c150:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800c154:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800c158:	b94c      	cbnz	r4, 800c16e <__pow5mult+0x66>
 800c15a:	f240 2171 	movw	r1, #625	@ 0x271
 800c15e:	4638      	mov	r0, r7
 800c160:	f7ff ff12 	bl	800bf88 <__i2b>
 800c164:	2300      	movs	r3, #0
 800c166:	f8c8 0008 	str.w	r0, [r8, #8]
 800c16a:	4604      	mov	r4, r0
 800c16c:	6003      	str	r3, [r0, #0]
 800c16e:	f04f 0900 	mov.w	r9, #0
 800c172:	07eb      	lsls	r3, r5, #31
 800c174:	d50a      	bpl.n	800c18c <__pow5mult+0x84>
 800c176:	4631      	mov	r1, r6
 800c178:	4622      	mov	r2, r4
 800c17a:	4638      	mov	r0, r7
 800c17c:	f7ff ff1a 	bl	800bfb4 <__multiply>
 800c180:	4631      	mov	r1, r6
 800c182:	4680      	mov	r8, r0
 800c184:	4638      	mov	r0, r7
 800c186:	f7ff fe01 	bl	800bd8c <_Bfree>
 800c18a:	4646      	mov	r6, r8
 800c18c:	106d      	asrs	r5, r5, #1
 800c18e:	d00b      	beq.n	800c1a8 <__pow5mult+0xa0>
 800c190:	6820      	ldr	r0, [r4, #0]
 800c192:	b938      	cbnz	r0, 800c1a4 <__pow5mult+0x9c>
 800c194:	4622      	mov	r2, r4
 800c196:	4621      	mov	r1, r4
 800c198:	4638      	mov	r0, r7
 800c19a:	f7ff ff0b 	bl	800bfb4 <__multiply>
 800c19e:	6020      	str	r0, [r4, #0]
 800c1a0:	f8c0 9000 	str.w	r9, [r0]
 800c1a4:	4604      	mov	r4, r0
 800c1a6:	e7e4      	b.n	800c172 <__pow5mult+0x6a>
 800c1a8:	4630      	mov	r0, r6
 800c1aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c1ae:	bf00      	nop
 800c1b0:	0800d650 	.word	0x0800d650
 800c1b4:	0800d4a5 	.word	0x0800d4a5
 800c1b8:	0800d5f4 	.word	0x0800d5f4

0800c1bc <__lshift>:
 800c1bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c1c0:	460c      	mov	r4, r1
 800c1c2:	6849      	ldr	r1, [r1, #4]
 800c1c4:	6923      	ldr	r3, [r4, #16]
 800c1c6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800c1ca:	68a3      	ldr	r3, [r4, #8]
 800c1cc:	4607      	mov	r7, r0
 800c1ce:	4691      	mov	r9, r2
 800c1d0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800c1d4:	f108 0601 	add.w	r6, r8, #1
 800c1d8:	42b3      	cmp	r3, r6
 800c1da:	db0b      	blt.n	800c1f4 <__lshift+0x38>
 800c1dc:	4638      	mov	r0, r7
 800c1de:	f7ff fd95 	bl	800bd0c <_Balloc>
 800c1e2:	4605      	mov	r5, r0
 800c1e4:	b948      	cbnz	r0, 800c1fa <__lshift+0x3e>
 800c1e6:	4602      	mov	r2, r0
 800c1e8:	4b28      	ldr	r3, [pc, #160]	@ (800c28c <__lshift+0xd0>)
 800c1ea:	4829      	ldr	r0, [pc, #164]	@ (800c290 <__lshift+0xd4>)
 800c1ec:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800c1f0:	f7fc fd0e 	bl	8008c10 <__assert_func>
 800c1f4:	3101      	adds	r1, #1
 800c1f6:	005b      	lsls	r3, r3, #1
 800c1f8:	e7ee      	b.n	800c1d8 <__lshift+0x1c>
 800c1fa:	2300      	movs	r3, #0
 800c1fc:	f100 0114 	add.w	r1, r0, #20
 800c200:	f100 0210 	add.w	r2, r0, #16
 800c204:	4618      	mov	r0, r3
 800c206:	4553      	cmp	r3, sl
 800c208:	db33      	blt.n	800c272 <__lshift+0xb6>
 800c20a:	6920      	ldr	r0, [r4, #16]
 800c20c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800c210:	f104 0314 	add.w	r3, r4, #20
 800c214:	f019 091f 	ands.w	r9, r9, #31
 800c218:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800c21c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800c220:	d02b      	beq.n	800c27a <__lshift+0xbe>
 800c222:	f1c9 0e20 	rsb	lr, r9, #32
 800c226:	468a      	mov	sl, r1
 800c228:	2200      	movs	r2, #0
 800c22a:	6818      	ldr	r0, [r3, #0]
 800c22c:	fa00 f009 	lsl.w	r0, r0, r9
 800c230:	4310      	orrs	r0, r2
 800c232:	f84a 0b04 	str.w	r0, [sl], #4
 800c236:	f853 2b04 	ldr.w	r2, [r3], #4
 800c23a:	459c      	cmp	ip, r3
 800c23c:	fa22 f20e 	lsr.w	r2, r2, lr
 800c240:	d8f3      	bhi.n	800c22a <__lshift+0x6e>
 800c242:	ebac 0304 	sub.w	r3, ip, r4
 800c246:	3b15      	subs	r3, #21
 800c248:	f023 0303 	bic.w	r3, r3, #3
 800c24c:	3304      	adds	r3, #4
 800c24e:	f104 0015 	add.w	r0, r4, #21
 800c252:	4584      	cmp	ip, r0
 800c254:	bf38      	it	cc
 800c256:	2304      	movcc	r3, #4
 800c258:	50ca      	str	r2, [r1, r3]
 800c25a:	b10a      	cbz	r2, 800c260 <__lshift+0xa4>
 800c25c:	f108 0602 	add.w	r6, r8, #2
 800c260:	3e01      	subs	r6, #1
 800c262:	4638      	mov	r0, r7
 800c264:	612e      	str	r6, [r5, #16]
 800c266:	4621      	mov	r1, r4
 800c268:	f7ff fd90 	bl	800bd8c <_Bfree>
 800c26c:	4628      	mov	r0, r5
 800c26e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c272:	f842 0f04 	str.w	r0, [r2, #4]!
 800c276:	3301      	adds	r3, #1
 800c278:	e7c5      	b.n	800c206 <__lshift+0x4a>
 800c27a:	3904      	subs	r1, #4
 800c27c:	f853 2b04 	ldr.w	r2, [r3], #4
 800c280:	f841 2f04 	str.w	r2, [r1, #4]!
 800c284:	459c      	cmp	ip, r3
 800c286:	d8f9      	bhi.n	800c27c <__lshift+0xc0>
 800c288:	e7ea      	b.n	800c260 <__lshift+0xa4>
 800c28a:	bf00      	nop
 800c28c:	0800d583 	.word	0x0800d583
 800c290:	0800d5f4 	.word	0x0800d5f4

0800c294 <__mcmp>:
 800c294:	690a      	ldr	r2, [r1, #16]
 800c296:	4603      	mov	r3, r0
 800c298:	6900      	ldr	r0, [r0, #16]
 800c29a:	1a80      	subs	r0, r0, r2
 800c29c:	b530      	push	{r4, r5, lr}
 800c29e:	d10e      	bne.n	800c2be <__mcmp+0x2a>
 800c2a0:	3314      	adds	r3, #20
 800c2a2:	3114      	adds	r1, #20
 800c2a4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800c2a8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800c2ac:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800c2b0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800c2b4:	4295      	cmp	r5, r2
 800c2b6:	d003      	beq.n	800c2c0 <__mcmp+0x2c>
 800c2b8:	d205      	bcs.n	800c2c6 <__mcmp+0x32>
 800c2ba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c2be:	bd30      	pop	{r4, r5, pc}
 800c2c0:	42a3      	cmp	r3, r4
 800c2c2:	d3f3      	bcc.n	800c2ac <__mcmp+0x18>
 800c2c4:	e7fb      	b.n	800c2be <__mcmp+0x2a>
 800c2c6:	2001      	movs	r0, #1
 800c2c8:	e7f9      	b.n	800c2be <__mcmp+0x2a>
	...

0800c2cc <__mdiff>:
 800c2cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2d0:	4689      	mov	r9, r1
 800c2d2:	4606      	mov	r6, r0
 800c2d4:	4611      	mov	r1, r2
 800c2d6:	4648      	mov	r0, r9
 800c2d8:	4614      	mov	r4, r2
 800c2da:	f7ff ffdb 	bl	800c294 <__mcmp>
 800c2de:	1e05      	subs	r5, r0, #0
 800c2e0:	d112      	bne.n	800c308 <__mdiff+0x3c>
 800c2e2:	4629      	mov	r1, r5
 800c2e4:	4630      	mov	r0, r6
 800c2e6:	f7ff fd11 	bl	800bd0c <_Balloc>
 800c2ea:	4602      	mov	r2, r0
 800c2ec:	b928      	cbnz	r0, 800c2fa <__mdiff+0x2e>
 800c2ee:	4b3f      	ldr	r3, [pc, #252]	@ (800c3ec <__mdiff+0x120>)
 800c2f0:	f240 2137 	movw	r1, #567	@ 0x237
 800c2f4:	483e      	ldr	r0, [pc, #248]	@ (800c3f0 <__mdiff+0x124>)
 800c2f6:	f7fc fc8b 	bl	8008c10 <__assert_func>
 800c2fa:	2301      	movs	r3, #1
 800c2fc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800c300:	4610      	mov	r0, r2
 800c302:	b003      	add	sp, #12
 800c304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c308:	bfbc      	itt	lt
 800c30a:	464b      	movlt	r3, r9
 800c30c:	46a1      	movlt	r9, r4
 800c30e:	4630      	mov	r0, r6
 800c310:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800c314:	bfba      	itte	lt
 800c316:	461c      	movlt	r4, r3
 800c318:	2501      	movlt	r5, #1
 800c31a:	2500      	movge	r5, #0
 800c31c:	f7ff fcf6 	bl	800bd0c <_Balloc>
 800c320:	4602      	mov	r2, r0
 800c322:	b918      	cbnz	r0, 800c32c <__mdiff+0x60>
 800c324:	4b31      	ldr	r3, [pc, #196]	@ (800c3ec <__mdiff+0x120>)
 800c326:	f240 2145 	movw	r1, #581	@ 0x245
 800c32a:	e7e3      	b.n	800c2f4 <__mdiff+0x28>
 800c32c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800c330:	6926      	ldr	r6, [r4, #16]
 800c332:	60c5      	str	r5, [r0, #12]
 800c334:	f109 0310 	add.w	r3, r9, #16
 800c338:	f109 0514 	add.w	r5, r9, #20
 800c33c:	f104 0e14 	add.w	lr, r4, #20
 800c340:	f100 0b14 	add.w	fp, r0, #20
 800c344:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800c348:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800c34c:	9301      	str	r3, [sp, #4]
 800c34e:	46d9      	mov	r9, fp
 800c350:	f04f 0c00 	mov.w	ip, #0
 800c354:	9b01      	ldr	r3, [sp, #4]
 800c356:	f85e 0b04 	ldr.w	r0, [lr], #4
 800c35a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800c35e:	9301      	str	r3, [sp, #4]
 800c360:	fa1f f38a 	uxth.w	r3, sl
 800c364:	4619      	mov	r1, r3
 800c366:	b283      	uxth	r3, r0
 800c368:	1acb      	subs	r3, r1, r3
 800c36a:	0c00      	lsrs	r0, r0, #16
 800c36c:	4463      	add	r3, ip
 800c36e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800c372:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800c376:	b29b      	uxth	r3, r3
 800c378:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800c37c:	4576      	cmp	r6, lr
 800c37e:	f849 3b04 	str.w	r3, [r9], #4
 800c382:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800c386:	d8e5      	bhi.n	800c354 <__mdiff+0x88>
 800c388:	1b33      	subs	r3, r6, r4
 800c38a:	3b15      	subs	r3, #21
 800c38c:	f023 0303 	bic.w	r3, r3, #3
 800c390:	3415      	adds	r4, #21
 800c392:	3304      	adds	r3, #4
 800c394:	42a6      	cmp	r6, r4
 800c396:	bf38      	it	cc
 800c398:	2304      	movcc	r3, #4
 800c39a:	441d      	add	r5, r3
 800c39c:	445b      	add	r3, fp
 800c39e:	461e      	mov	r6, r3
 800c3a0:	462c      	mov	r4, r5
 800c3a2:	4544      	cmp	r4, r8
 800c3a4:	d30e      	bcc.n	800c3c4 <__mdiff+0xf8>
 800c3a6:	f108 0103 	add.w	r1, r8, #3
 800c3aa:	1b49      	subs	r1, r1, r5
 800c3ac:	f021 0103 	bic.w	r1, r1, #3
 800c3b0:	3d03      	subs	r5, #3
 800c3b2:	45a8      	cmp	r8, r5
 800c3b4:	bf38      	it	cc
 800c3b6:	2100      	movcc	r1, #0
 800c3b8:	440b      	add	r3, r1
 800c3ba:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800c3be:	b191      	cbz	r1, 800c3e6 <__mdiff+0x11a>
 800c3c0:	6117      	str	r7, [r2, #16]
 800c3c2:	e79d      	b.n	800c300 <__mdiff+0x34>
 800c3c4:	f854 1b04 	ldr.w	r1, [r4], #4
 800c3c8:	46e6      	mov	lr, ip
 800c3ca:	0c08      	lsrs	r0, r1, #16
 800c3cc:	fa1c fc81 	uxtah	ip, ip, r1
 800c3d0:	4471      	add	r1, lr
 800c3d2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800c3d6:	b289      	uxth	r1, r1
 800c3d8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800c3dc:	f846 1b04 	str.w	r1, [r6], #4
 800c3e0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800c3e4:	e7dd      	b.n	800c3a2 <__mdiff+0xd6>
 800c3e6:	3f01      	subs	r7, #1
 800c3e8:	e7e7      	b.n	800c3ba <__mdiff+0xee>
 800c3ea:	bf00      	nop
 800c3ec:	0800d583 	.word	0x0800d583
 800c3f0:	0800d5f4 	.word	0x0800d5f4

0800c3f4 <__ulp>:
 800c3f4:	b082      	sub	sp, #8
 800c3f6:	ed8d 0b00 	vstr	d0, [sp]
 800c3fa:	9a01      	ldr	r2, [sp, #4]
 800c3fc:	4b0f      	ldr	r3, [pc, #60]	@ (800c43c <__ulp+0x48>)
 800c3fe:	4013      	ands	r3, r2
 800c400:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800c404:	2b00      	cmp	r3, #0
 800c406:	dc08      	bgt.n	800c41a <__ulp+0x26>
 800c408:	425b      	negs	r3, r3
 800c40a:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800c40e:	ea4f 5223 	mov.w	r2, r3, asr #20
 800c412:	da04      	bge.n	800c41e <__ulp+0x2a>
 800c414:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800c418:	4113      	asrs	r3, r2
 800c41a:	2200      	movs	r2, #0
 800c41c:	e008      	b.n	800c430 <__ulp+0x3c>
 800c41e:	f1a2 0314 	sub.w	r3, r2, #20
 800c422:	2b1e      	cmp	r3, #30
 800c424:	bfda      	itte	le
 800c426:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800c42a:	40da      	lsrle	r2, r3
 800c42c:	2201      	movgt	r2, #1
 800c42e:	2300      	movs	r3, #0
 800c430:	4619      	mov	r1, r3
 800c432:	4610      	mov	r0, r2
 800c434:	ec41 0b10 	vmov	d0, r0, r1
 800c438:	b002      	add	sp, #8
 800c43a:	4770      	bx	lr
 800c43c:	7ff00000 	.word	0x7ff00000

0800c440 <__b2d>:
 800c440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c444:	6906      	ldr	r6, [r0, #16]
 800c446:	f100 0814 	add.w	r8, r0, #20
 800c44a:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800c44e:	1f37      	subs	r7, r6, #4
 800c450:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800c454:	4610      	mov	r0, r2
 800c456:	f7ff fd4b 	bl	800bef0 <__hi0bits>
 800c45a:	f1c0 0320 	rsb	r3, r0, #32
 800c45e:	280a      	cmp	r0, #10
 800c460:	600b      	str	r3, [r1, #0]
 800c462:	491b      	ldr	r1, [pc, #108]	@ (800c4d0 <__b2d+0x90>)
 800c464:	dc15      	bgt.n	800c492 <__b2d+0x52>
 800c466:	f1c0 0c0b 	rsb	ip, r0, #11
 800c46a:	fa22 f30c 	lsr.w	r3, r2, ip
 800c46e:	45b8      	cmp	r8, r7
 800c470:	ea43 0501 	orr.w	r5, r3, r1
 800c474:	bf34      	ite	cc
 800c476:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800c47a:	2300      	movcs	r3, #0
 800c47c:	3015      	adds	r0, #21
 800c47e:	fa02 f000 	lsl.w	r0, r2, r0
 800c482:	fa23 f30c 	lsr.w	r3, r3, ip
 800c486:	4303      	orrs	r3, r0
 800c488:	461c      	mov	r4, r3
 800c48a:	ec45 4b10 	vmov	d0, r4, r5
 800c48e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c492:	45b8      	cmp	r8, r7
 800c494:	bf3a      	itte	cc
 800c496:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800c49a:	f1a6 0708 	subcc.w	r7, r6, #8
 800c49e:	2300      	movcs	r3, #0
 800c4a0:	380b      	subs	r0, #11
 800c4a2:	d012      	beq.n	800c4ca <__b2d+0x8a>
 800c4a4:	f1c0 0120 	rsb	r1, r0, #32
 800c4a8:	fa23 f401 	lsr.w	r4, r3, r1
 800c4ac:	4082      	lsls	r2, r0
 800c4ae:	4322      	orrs	r2, r4
 800c4b0:	4547      	cmp	r7, r8
 800c4b2:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 800c4b6:	bf8c      	ite	hi
 800c4b8:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800c4bc:	2200      	movls	r2, #0
 800c4be:	4083      	lsls	r3, r0
 800c4c0:	40ca      	lsrs	r2, r1
 800c4c2:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800c4c6:	4313      	orrs	r3, r2
 800c4c8:	e7de      	b.n	800c488 <__b2d+0x48>
 800c4ca:	ea42 0501 	orr.w	r5, r2, r1
 800c4ce:	e7db      	b.n	800c488 <__b2d+0x48>
 800c4d0:	3ff00000 	.word	0x3ff00000

0800c4d4 <__d2b>:
 800c4d4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c4d8:	460f      	mov	r7, r1
 800c4da:	2101      	movs	r1, #1
 800c4dc:	ec59 8b10 	vmov	r8, r9, d0
 800c4e0:	4616      	mov	r6, r2
 800c4e2:	f7ff fc13 	bl	800bd0c <_Balloc>
 800c4e6:	4604      	mov	r4, r0
 800c4e8:	b930      	cbnz	r0, 800c4f8 <__d2b+0x24>
 800c4ea:	4602      	mov	r2, r0
 800c4ec:	4b23      	ldr	r3, [pc, #140]	@ (800c57c <__d2b+0xa8>)
 800c4ee:	4824      	ldr	r0, [pc, #144]	@ (800c580 <__d2b+0xac>)
 800c4f0:	f240 310f 	movw	r1, #783	@ 0x30f
 800c4f4:	f7fc fb8c 	bl	8008c10 <__assert_func>
 800c4f8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800c4fc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c500:	b10d      	cbz	r5, 800c506 <__d2b+0x32>
 800c502:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800c506:	9301      	str	r3, [sp, #4]
 800c508:	f1b8 0300 	subs.w	r3, r8, #0
 800c50c:	d023      	beq.n	800c556 <__d2b+0x82>
 800c50e:	4668      	mov	r0, sp
 800c510:	9300      	str	r3, [sp, #0]
 800c512:	f7ff fd0c 	bl	800bf2e <__lo0bits>
 800c516:	e9dd 1200 	ldrd	r1, r2, [sp]
 800c51a:	b1d0      	cbz	r0, 800c552 <__d2b+0x7e>
 800c51c:	f1c0 0320 	rsb	r3, r0, #32
 800c520:	fa02 f303 	lsl.w	r3, r2, r3
 800c524:	430b      	orrs	r3, r1
 800c526:	40c2      	lsrs	r2, r0
 800c528:	6163      	str	r3, [r4, #20]
 800c52a:	9201      	str	r2, [sp, #4]
 800c52c:	9b01      	ldr	r3, [sp, #4]
 800c52e:	61a3      	str	r3, [r4, #24]
 800c530:	2b00      	cmp	r3, #0
 800c532:	bf0c      	ite	eq
 800c534:	2201      	moveq	r2, #1
 800c536:	2202      	movne	r2, #2
 800c538:	6122      	str	r2, [r4, #16]
 800c53a:	b1a5      	cbz	r5, 800c566 <__d2b+0x92>
 800c53c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800c540:	4405      	add	r5, r0
 800c542:	603d      	str	r5, [r7, #0]
 800c544:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800c548:	6030      	str	r0, [r6, #0]
 800c54a:	4620      	mov	r0, r4
 800c54c:	b003      	add	sp, #12
 800c54e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c552:	6161      	str	r1, [r4, #20]
 800c554:	e7ea      	b.n	800c52c <__d2b+0x58>
 800c556:	a801      	add	r0, sp, #4
 800c558:	f7ff fce9 	bl	800bf2e <__lo0bits>
 800c55c:	9b01      	ldr	r3, [sp, #4]
 800c55e:	6163      	str	r3, [r4, #20]
 800c560:	3020      	adds	r0, #32
 800c562:	2201      	movs	r2, #1
 800c564:	e7e8      	b.n	800c538 <__d2b+0x64>
 800c566:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800c56a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800c56e:	6038      	str	r0, [r7, #0]
 800c570:	6918      	ldr	r0, [r3, #16]
 800c572:	f7ff fcbd 	bl	800bef0 <__hi0bits>
 800c576:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800c57a:	e7e5      	b.n	800c548 <__d2b+0x74>
 800c57c:	0800d583 	.word	0x0800d583
 800c580:	0800d5f4 	.word	0x0800d5f4

0800c584 <__ratio>:
 800c584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c588:	b085      	sub	sp, #20
 800c58a:	e9cd 1000 	strd	r1, r0, [sp]
 800c58e:	a902      	add	r1, sp, #8
 800c590:	f7ff ff56 	bl	800c440 <__b2d>
 800c594:	9800      	ldr	r0, [sp, #0]
 800c596:	a903      	add	r1, sp, #12
 800c598:	ec55 4b10 	vmov	r4, r5, d0
 800c59c:	f7ff ff50 	bl	800c440 <__b2d>
 800c5a0:	9b01      	ldr	r3, [sp, #4]
 800c5a2:	6919      	ldr	r1, [r3, #16]
 800c5a4:	9b00      	ldr	r3, [sp, #0]
 800c5a6:	691b      	ldr	r3, [r3, #16]
 800c5a8:	1ac9      	subs	r1, r1, r3
 800c5aa:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800c5ae:	1a9b      	subs	r3, r3, r2
 800c5b0:	ec5b ab10 	vmov	sl, fp, d0
 800c5b4:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800c5b8:	2b00      	cmp	r3, #0
 800c5ba:	bfce      	itee	gt
 800c5bc:	462a      	movgt	r2, r5
 800c5be:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800c5c2:	465a      	movle	r2, fp
 800c5c4:	462f      	mov	r7, r5
 800c5c6:	46d9      	mov	r9, fp
 800c5c8:	bfcc      	ite	gt
 800c5ca:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800c5ce:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800c5d2:	464b      	mov	r3, r9
 800c5d4:	4652      	mov	r2, sl
 800c5d6:	4620      	mov	r0, r4
 800c5d8:	4639      	mov	r1, r7
 800c5da:	f7f4 f937 	bl	800084c <__aeabi_ddiv>
 800c5de:	ec41 0b10 	vmov	d0, r0, r1
 800c5e2:	b005      	add	sp, #20
 800c5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c5e8 <__copybits>:
 800c5e8:	3901      	subs	r1, #1
 800c5ea:	b570      	push	{r4, r5, r6, lr}
 800c5ec:	1149      	asrs	r1, r1, #5
 800c5ee:	6914      	ldr	r4, [r2, #16]
 800c5f0:	3101      	adds	r1, #1
 800c5f2:	f102 0314 	add.w	r3, r2, #20
 800c5f6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800c5fa:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800c5fe:	1f05      	subs	r5, r0, #4
 800c600:	42a3      	cmp	r3, r4
 800c602:	d30c      	bcc.n	800c61e <__copybits+0x36>
 800c604:	1aa3      	subs	r3, r4, r2
 800c606:	3b11      	subs	r3, #17
 800c608:	f023 0303 	bic.w	r3, r3, #3
 800c60c:	3211      	adds	r2, #17
 800c60e:	42a2      	cmp	r2, r4
 800c610:	bf88      	it	hi
 800c612:	2300      	movhi	r3, #0
 800c614:	4418      	add	r0, r3
 800c616:	2300      	movs	r3, #0
 800c618:	4288      	cmp	r0, r1
 800c61a:	d305      	bcc.n	800c628 <__copybits+0x40>
 800c61c:	bd70      	pop	{r4, r5, r6, pc}
 800c61e:	f853 6b04 	ldr.w	r6, [r3], #4
 800c622:	f845 6f04 	str.w	r6, [r5, #4]!
 800c626:	e7eb      	b.n	800c600 <__copybits+0x18>
 800c628:	f840 3b04 	str.w	r3, [r0], #4
 800c62c:	e7f4      	b.n	800c618 <__copybits+0x30>

0800c62e <__any_on>:
 800c62e:	f100 0214 	add.w	r2, r0, #20
 800c632:	6900      	ldr	r0, [r0, #16]
 800c634:	114b      	asrs	r3, r1, #5
 800c636:	4298      	cmp	r0, r3
 800c638:	b510      	push	{r4, lr}
 800c63a:	db11      	blt.n	800c660 <__any_on+0x32>
 800c63c:	dd0a      	ble.n	800c654 <__any_on+0x26>
 800c63e:	f011 011f 	ands.w	r1, r1, #31
 800c642:	d007      	beq.n	800c654 <__any_on+0x26>
 800c644:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800c648:	fa24 f001 	lsr.w	r0, r4, r1
 800c64c:	fa00 f101 	lsl.w	r1, r0, r1
 800c650:	428c      	cmp	r4, r1
 800c652:	d10b      	bne.n	800c66c <__any_on+0x3e>
 800c654:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800c658:	4293      	cmp	r3, r2
 800c65a:	d803      	bhi.n	800c664 <__any_on+0x36>
 800c65c:	2000      	movs	r0, #0
 800c65e:	bd10      	pop	{r4, pc}
 800c660:	4603      	mov	r3, r0
 800c662:	e7f7      	b.n	800c654 <__any_on+0x26>
 800c664:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800c668:	2900      	cmp	r1, #0
 800c66a:	d0f5      	beq.n	800c658 <__any_on+0x2a>
 800c66c:	2001      	movs	r0, #1
 800c66e:	e7f6      	b.n	800c65e <__any_on+0x30>

0800c670 <__ascii_wctomb>:
 800c670:	4603      	mov	r3, r0
 800c672:	4608      	mov	r0, r1
 800c674:	b141      	cbz	r1, 800c688 <__ascii_wctomb+0x18>
 800c676:	2aff      	cmp	r2, #255	@ 0xff
 800c678:	d904      	bls.n	800c684 <__ascii_wctomb+0x14>
 800c67a:	228a      	movs	r2, #138	@ 0x8a
 800c67c:	601a      	str	r2, [r3, #0]
 800c67e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c682:	4770      	bx	lr
 800c684:	700a      	strb	r2, [r1, #0]
 800c686:	2001      	movs	r0, #1
 800c688:	4770      	bx	lr

0800c68a <__ssputs_r>:
 800c68a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c68e:	688e      	ldr	r6, [r1, #8]
 800c690:	461f      	mov	r7, r3
 800c692:	42be      	cmp	r6, r7
 800c694:	680b      	ldr	r3, [r1, #0]
 800c696:	4682      	mov	sl, r0
 800c698:	460c      	mov	r4, r1
 800c69a:	4690      	mov	r8, r2
 800c69c:	d82d      	bhi.n	800c6fa <__ssputs_r+0x70>
 800c69e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c6a2:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800c6a6:	d026      	beq.n	800c6f6 <__ssputs_r+0x6c>
 800c6a8:	6965      	ldr	r5, [r4, #20]
 800c6aa:	6909      	ldr	r1, [r1, #16]
 800c6ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c6b0:	eba3 0901 	sub.w	r9, r3, r1
 800c6b4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c6b8:	1c7b      	adds	r3, r7, #1
 800c6ba:	444b      	add	r3, r9
 800c6bc:	106d      	asrs	r5, r5, #1
 800c6be:	429d      	cmp	r5, r3
 800c6c0:	bf38      	it	cc
 800c6c2:	461d      	movcc	r5, r3
 800c6c4:	0553      	lsls	r3, r2, #21
 800c6c6:	d527      	bpl.n	800c718 <__ssputs_r+0x8e>
 800c6c8:	4629      	mov	r1, r5
 800c6ca:	f7fc faf1 	bl	8008cb0 <_malloc_r>
 800c6ce:	4606      	mov	r6, r0
 800c6d0:	b360      	cbz	r0, 800c72c <__ssputs_r+0xa2>
 800c6d2:	6921      	ldr	r1, [r4, #16]
 800c6d4:	464a      	mov	r2, r9
 800c6d6:	f7fe f90e 	bl	800a8f6 <memcpy>
 800c6da:	89a3      	ldrh	r3, [r4, #12]
 800c6dc:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800c6e0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c6e4:	81a3      	strh	r3, [r4, #12]
 800c6e6:	6126      	str	r6, [r4, #16]
 800c6e8:	6165      	str	r5, [r4, #20]
 800c6ea:	444e      	add	r6, r9
 800c6ec:	eba5 0509 	sub.w	r5, r5, r9
 800c6f0:	6026      	str	r6, [r4, #0]
 800c6f2:	60a5      	str	r5, [r4, #8]
 800c6f4:	463e      	mov	r6, r7
 800c6f6:	42be      	cmp	r6, r7
 800c6f8:	d900      	bls.n	800c6fc <__ssputs_r+0x72>
 800c6fa:	463e      	mov	r6, r7
 800c6fc:	6820      	ldr	r0, [r4, #0]
 800c6fe:	4632      	mov	r2, r6
 800c700:	4641      	mov	r1, r8
 800c702:	f000 fb9b 	bl	800ce3c <memmove>
 800c706:	68a3      	ldr	r3, [r4, #8]
 800c708:	1b9b      	subs	r3, r3, r6
 800c70a:	60a3      	str	r3, [r4, #8]
 800c70c:	6823      	ldr	r3, [r4, #0]
 800c70e:	4433      	add	r3, r6
 800c710:	6023      	str	r3, [r4, #0]
 800c712:	2000      	movs	r0, #0
 800c714:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c718:	462a      	mov	r2, r5
 800c71a:	f000 fc01 	bl	800cf20 <_realloc_r>
 800c71e:	4606      	mov	r6, r0
 800c720:	2800      	cmp	r0, #0
 800c722:	d1e0      	bne.n	800c6e6 <__ssputs_r+0x5c>
 800c724:	6921      	ldr	r1, [r4, #16]
 800c726:	4650      	mov	r0, sl
 800c728:	f7fe ff5a 	bl	800b5e0 <_free_r>
 800c72c:	230c      	movs	r3, #12
 800c72e:	f8ca 3000 	str.w	r3, [sl]
 800c732:	89a3      	ldrh	r3, [r4, #12]
 800c734:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c738:	81a3      	strh	r3, [r4, #12]
 800c73a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c73e:	e7e9      	b.n	800c714 <__ssputs_r+0x8a>

0800c740 <_svfiprintf_r>:
 800c740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c744:	4698      	mov	r8, r3
 800c746:	898b      	ldrh	r3, [r1, #12]
 800c748:	061b      	lsls	r3, r3, #24
 800c74a:	b09d      	sub	sp, #116	@ 0x74
 800c74c:	4607      	mov	r7, r0
 800c74e:	460d      	mov	r5, r1
 800c750:	4614      	mov	r4, r2
 800c752:	d510      	bpl.n	800c776 <_svfiprintf_r+0x36>
 800c754:	690b      	ldr	r3, [r1, #16]
 800c756:	b973      	cbnz	r3, 800c776 <_svfiprintf_r+0x36>
 800c758:	2140      	movs	r1, #64	@ 0x40
 800c75a:	f7fc faa9 	bl	8008cb0 <_malloc_r>
 800c75e:	6028      	str	r0, [r5, #0]
 800c760:	6128      	str	r0, [r5, #16]
 800c762:	b930      	cbnz	r0, 800c772 <_svfiprintf_r+0x32>
 800c764:	230c      	movs	r3, #12
 800c766:	603b      	str	r3, [r7, #0]
 800c768:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c76c:	b01d      	add	sp, #116	@ 0x74
 800c76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c772:	2340      	movs	r3, #64	@ 0x40
 800c774:	616b      	str	r3, [r5, #20]
 800c776:	2300      	movs	r3, #0
 800c778:	9309      	str	r3, [sp, #36]	@ 0x24
 800c77a:	2320      	movs	r3, #32
 800c77c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c780:	f8cd 800c 	str.w	r8, [sp, #12]
 800c784:	2330      	movs	r3, #48	@ 0x30
 800c786:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800c924 <_svfiprintf_r+0x1e4>
 800c78a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c78e:	f04f 0901 	mov.w	r9, #1
 800c792:	4623      	mov	r3, r4
 800c794:	469a      	mov	sl, r3
 800c796:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c79a:	b10a      	cbz	r2, 800c7a0 <_svfiprintf_r+0x60>
 800c79c:	2a25      	cmp	r2, #37	@ 0x25
 800c79e:	d1f9      	bne.n	800c794 <_svfiprintf_r+0x54>
 800c7a0:	ebba 0b04 	subs.w	fp, sl, r4
 800c7a4:	d00b      	beq.n	800c7be <_svfiprintf_r+0x7e>
 800c7a6:	465b      	mov	r3, fp
 800c7a8:	4622      	mov	r2, r4
 800c7aa:	4629      	mov	r1, r5
 800c7ac:	4638      	mov	r0, r7
 800c7ae:	f7ff ff6c 	bl	800c68a <__ssputs_r>
 800c7b2:	3001      	adds	r0, #1
 800c7b4:	f000 80a7 	beq.w	800c906 <_svfiprintf_r+0x1c6>
 800c7b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c7ba:	445a      	add	r2, fp
 800c7bc:	9209      	str	r2, [sp, #36]	@ 0x24
 800c7be:	f89a 3000 	ldrb.w	r3, [sl]
 800c7c2:	2b00      	cmp	r3, #0
 800c7c4:	f000 809f 	beq.w	800c906 <_svfiprintf_r+0x1c6>
 800c7c8:	2300      	movs	r3, #0
 800c7ca:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800c7ce:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c7d2:	f10a 0a01 	add.w	sl, sl, #1
 800c7d6:	9304      	str	r3, [sp, #16]
 800c7d8:	9307      	str	r3, [sp, #28]
 800c7da:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c7de:	931a      	str	r3, [sp, #104]	@ 0x68
 800c7e0:	4654      	mov	r4, sl
 800c7e2:	2205      	movs	r2, #5
 800c7e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c7e8:	484e      	ldr	r0, [pc, #312]	@ (800c924 <_svfiprintf_r+0x1e4>)
 800c7ea:	f7f3 fcf1 	bl	80001d0 <memchr>
 800c7ee:	9a04      	ldr	r2, [sp, #16]
 800c7f0:	b9d8      	cbnz	r0, 800c82a <_svfiprintf_r+0xea>
 800c7f2:	06d0      	lsls	r0, r2, #27
 800c7f4:	bf44      	itt	mi
 800c7f6:	2320      	movmi	r3, #32
 800c7f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c7fc:	0711      	lsls	r1, r2, #28
 800c7fe:	bf44      	itt	mi
 800c800:	232b      	movmi	r3, #43	@ 0x2b
 800c802:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c806:	f89a 3000 	ldrb.w	r3, [sl]
 800c80a:	2b2a      	cmp	r3, #42	@ 0x2a
 800c80c:	d015      	beq.n	800c83a <_svfiprintf_r+0xfa>
 800c80e:	9a07      	ldr	r2, [sp, #28]
 800c810:	4654      	mov	r4, sl
 800c812:	2000      	movs	r0, #0
 800c814:	f04f 0c0a 	mov.w	ip, #10
 800c818:	4621      	mov	r1, r4
 800c81a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c81e:	3b30      	subs	r3, #48	@ 0x30
 800c820:	2b09      	cmp	r3, #9
 800c822:	d94b      	bls.n	800c8bc <_svfiprintf_r+0x17c>
 800c824:	b1b0      	cbz	r0, 800c854 <_svfiprintf_r+0x114>
 800c826:	9207      	str	r2, [sp, #28]
 800c828:	e014      	b.n	800c854 <_svfiprintf_r+0x114>
 800c82a:	eba0 0308 	sub.w	r3, r0, r8
 800c82e:	fa09 f303 	lsl.w	r3, r9, r3
 800c832:	4313      	orrs	r3, r2
 800c834:	9304      	str	r3, [sp, #16]
 800c836:	46a2      	mov	sl, r4
 800c838:	e7d2      	b.n	800c7e0 <_svfiprintf_r+0xa0>
 800c83a:	9b03      	ldr	r3, [sp, #12]
 800c83c:	1d19      	adds	r1, r3, #4
 800c83e:	681b      	ldr	r3, [r3, #0]
 800c840:	9103      	str	r1, [sp, #12]
 800c842:	2b00      	cmp	r3, #0
 800c844:	bfbb      	ittet	lt
 800c846:	425b      	neglt	r3, r3
 800c848:	f042 0202 	orrlt.w	r2, r2, #2
 800c84c:	9307      	strge	r3, [sp, #28]
 800c84e:	9307      	strlt	r3, [sp, #28]
 800c850:	bfb8      	it	lt
 800c852:	9204      	strlt	r2, [sp, #16]
 800c854:	7823      	ldrb	r3, [r4, #0]
 800c856:	2b2e      	cmp	r3, #46	@ 0x2e
 800c858:	d10a      	bne.n	800c870 <_svfiprintf_r+0x130>
 800c85a:	7863      	ldrb	r3, [r4, #1]
 800c85c:	2b2a      	cmp	r3, #42	@ 0x2a
 800c85e:	d132      	bne.n	800c8c6 <_svfiprintf_r+0x186>
 800c860:	9b03      	ldr	r3, [sp, #12]
 800c862:	1d1a      	adds	r2, r3, #4
 800c864:	681b      	ldr	r3, [r3, #0]
 800c866:	9203      	str	r2, [sp, #12]
 800c868:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c86c:	3402      	adds	r4, #2
 800c86e:	9305      	str	r3, [sp, #20]
 800c870:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800c934 <_svfiprintf_r+0x1f4>
 800c874:	7821      	ldrb	r1, [r4, #0]
 800c876:	2203      	movs	r2, #3
 800c878:	4650      	mov	r0, sl
 800c87a:	f7f3 fca9 	bl	80001d0 <memchr>
 800c87e:	b138      	cbz	r0, 800c890 <_svfiprintf_r+0x150>
 800c880:	9b04      	ldr	r3, [sp, #16]
 800c882:	eba0 000a 	sub.w	r0, r0, sl
 800c886:	2240      	movs	r2, #64	@ 0x40
 800c888:	4082      	lsls	r2, r0
 800c88a:	4313      	orrs	r3, r2
 800c88c:	3401      	adds	r4, #1
 800c88e:	9304      	str	r3, [sp, #16]
 800c890:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c894:	4824      	ldr	r0, [pc, #144]	@ (800c928 <_svfiprintf_r+0x1e8>)
 800c896:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c89a:	2206      	movs	r2, #6
 800c89c:	f7f3 fc98 	bl	80001d0 <memchr>
 800c8a0:	2800      	cmp	r0, #0
 800c8a2:	d036      	beq.n	800c912 <_svfiprintf_r+0x1d2>
 800c8a4:	4b21      	ldr	r3, [pc, #132]	@ (800c92c <_svfiprintf_r+0x1ec>)
 800c8a6:	bb1b      	cbnz	r3, 800c8f0 <_svfiprintf_r+0x1b0>
 800c8a8:	9b03      	ldr	r3, [sp, #12]
 800c8aa:	3307      	adds	r3, #7
 800c8ac:	f023 0307 	bic.w	r3, r3, #7
 800c8b0:	3308      	adds	r3, #8
 800c8b2:	9303      	str	r3, [sp, #12]
 800c8b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c8b6:	4433      	add	r3, r6
 800c8b8:	9309      	str	r3, [sp, #36]	@ 0x24
 800c8ba:	e76a      	b.n	800c792 <_svfiprintf_r+0x52>
 800c8bc:	fb0c 3202 	mla	r2, ip, r2, r3
 800c8c0:	460c      	mov	r4, r1
 800c8c2:	2001      	movs	r0, #1
 800c8c4:	e7a8      	b.n	800c818 <_svfiprintf_r+0xd8>
 800c8c6:	2300      	movs	r3, #0
 800c8c8:	3401      	adds	r4, #1
 800c8ca:	9305      	str	r3, [sp, #20]
 800c8cc:	4619      	mov	r1, r3
 800c8ce:	f04f 0c0a 	mov.w	ip, #10
 800c8d2:	4620      	mov	r0, r4
 800c8d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c8d8:	3a30      	subs	r2, #48	@ 0x30
 800c8da:	2a09      	cmp	r2, #9
 800c8dc:	d903      	bls.n	800c8e6 <_svfiprintf_r+0x1a6>
 800c8de:	2b00      	cmp	r3, #0
 800c8e0:	d0c6      	beq.n	800c870 <_svfiprintf_r+0x130>
 800c8e2:	9105      	str	r1, [sp, #20]
 800c8e4:	e7c4      	b.n	800c870 <_svfiprintf_r+0x130>
 800c8e6:	fb0c 2101 	mla	r1, ip, r1, r2
 800c8ea:	4604      	mov	r4, r0
 800c8ec:	2301      	movs	r3, #1
 800c8ee:	e7f0      	b.n	800c8d2 <_svfiprintf_r+0x192>
 800c8f0:	ab03      	add	r3, sp, #12
 800c8f2:	9300      	str	r3, [sp, #0]
 800c8f4:	462a      	mov	r2, r5
 800c8f6:	4b0e      	ldr	r3, [pc, #56]	@ (800c930 <_svfiprintf_r+0x1f0>)
 800c8f8:	a904      	add	r1, sp, #16
 800c8fa:	4638      	mov	r0, r7
 800c8fc:	f7fd f9f0 	bl	8009ce0 <_printf_float>
 800c900:	1c42      	adds	r2, r0, #1
 800c902:	4606      	mov	r6, r0
 800c904:	d1d6      	bne.n	800c8b4 <_svfiprintf_r+0x174>
 800c906:	89ab      	ldrh	r3, [r5, #12]
 800c908:	065b      	lsls	r3, r3, #25
 800c90a:	f53f af2d 	bmi.w	800c768 <_svfiprintf_r+0x28>
 800c90e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c910:	e72c      	b.n	800c76c <_svfiprintf_r+0x2c>
 800c912:	ab03      	add	r3, sp, #12
 800c914:	9300      	str	r3, [sp, #0]
 800c916:	462a      	mov	r2, r5
 800c918:	4b05      	ldr	r3, [pc, #20]	@ (800c930 <_svfiprintf_r+0x1f0>)
 800c91a:	a904      	add	r1, sp, #16
 800c91c:	4638      	mov	r0, r7
 800c91e:	f7fd fc77 	bl	800a210 <_printf_i>
 800c922:	e7ed      	b.n	800c900 <_svfiprintf_r+0x1c0>
 800c924:	0800d750 	.word	0x0800d750
 800c928:	0800d75a 	.word	0x0800d75a
 800c92c:	08009ce1 	.word	0x08009ce1
 800c930:	0800c68b 	.word	0x0800c68b
 800c934:	0800d756 	.word	0x0800d756

0800c938 <__sfputc_r>:
 800c938:	6893      	ldr	r3, [r2, #8]
 800c93a:	3b01      	subs	r3, #1
 800c93c:	2b00      	cmp	r3, #0
 800c93e:	b410      	push	{r4}
 800c940:	6093      	str	r3, [r2, #8]
 800c942:	da08      	bge.n	800c956 <__sfputc_r+0x1e>
 800c944:	6994      	ldr	r4, [r2, #24]
 800c946:	42a3      	cmp	r3, r4
 800c948:	db01      	blt.n	800c94e <__sfputc_r+0x16>
 800c94a:	290a      	cmp	r1, #10
 800c94c:	d103      	bne.n	800c956 <__sfputc_r+0x1e>
 800c94e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c952:	f000 b9df 	b.w	800cd14 <__swbuf_r>
 800c956:	6813      	ldr	r3, [r2, #0]
 800c958:	1c58      	adds	r0, r3, #1
 800c95a:	6010      	str	r0, [r2, #0]
 800c95c:	7019      	strb	r1, [r3, #0]
 800c95e:	4608      	mov	r0, r1
 800c960:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c964:	4770      	bx	lr

0800c966 <__sfputs_r>:
 800c966:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c968:	4606      	mov	r6, r0
 800c96a:	460f      	mov	r7, r1
 800c96c:	4614      	mov	r4, r2
 800c96e:	18d5      	adds	r5, r2, r3
 800c970:	42ac      	cmp	r4, r5
 800c972:	d101      	bne.n	800c978 <__sfputs_r+0x12>
 800c974:	2000      	movs	r0, #0
 800c976:	e007      	b.n	800c988 <__sfputs_r+0x22>
 800c978:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c97c:	463a      	mov	r2, r7
 800c97e:	4630      	mov	r0, r6
 800c980:	f7ff ffda 	bl	800c938 <__sfputc_r>
 800c984:	1c43      	adds	r3, r0, #1
 800c986:	d1f3      	bne.n	800c970 <__sfputs_r+0xa>
 800c988:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c98c <_vfiprintf_r>:
 800c98c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c990:	460d      	mov	r5, r1
 800c992:	b09d      	sub	sp, #116	@ 0x74
 800c994:	4614      	mov	r4, r2
 800c996:	4698      	mov	r8, r3
 800c998:	4606      	mov	r6, r0
 800c99a:	b118      	cbz	r0, 800c9a4 <_vfiprintf_r+0x18>
 800c99c:	6a03      	ldr	r3, [r0, #32]
 800c99e:	b90b      	cbnz	r3, 800c9a4 <_vfiprintf_r+0x18>
 800c9a0:	f7fd fde2 	bl	800a568 <__sinit>
 800c9a4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c9a6:	07d9      	lsls	r1, r3, #31
 800c9a8:	d405      	bmi.n	800c9b6 <_vfiprintf_r+0x2a>
 800c9aa:	89ab      	ldrh	r3, [r5, #12]
 800c9ac:	059a      	lsls	r2, r3, #22
 800c9ae:	d402      	bmi.n	800c9b6 <_vfiprintf_r+0x2a>
 800c9b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c9b2:	f7fd ff96 	bl	800a8e2 <__retarget_lock_acquire_recursive>
 800c9b6:	89ab      	ldrh	r3, [r5, #12]
 800c9b8:	071b      	lsls	r3, r3, #28
 800c9ba:	d501      	bpl.n	800c9c0 <_vfiprintf_r+0x34>
 800c9bc:	692b      	ldr	r3, [r5, #16]
 800c9be:	b99b      	cbnz	r3, 800c9e8 <_vfiprintf_r+0x5c>
 800c9c0:	4629      	mov	r1, r5
 800c9c2:	4630      	mov	r0, r6
 800c9c4:	f000 f9e4 	bl	800cd90 <__swsetup_r>
 800c9c8:	b170      	cbz	r0, 800c9e8 <_vfiprintf_r+0x5c>
 800c9ca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c9cc:	07dc      	lsls	r4, r3, #31
 800c9ce:	d504      	bpl.n	800c9da <_vfiprintf_r+0x4e>
 800c9d0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c9d4:	b01d      	add	sp, #116	@ 0x74
 800c9d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9da:	89ab      	ldrh	r3, [r5, #12]
 800c9dc:	0598      	lsls	r0, r3, #22
 800c9de:	d4f7      	bmi.n	800c9d0 <_vfiprintf_r+0x44>
 800c9e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c9e2:	f7fd ff7f 	bl	800a8e4 <__retarget_lock_release_recursive>
 800c9e6:	e7f3      	b.n	800c9d0 <_vfiprintf_r+0x44>
 800c9e8:	2300      	movs	r3, #0
 800c9ea:	9309      	str	r3, [sp, #36]	@ 0x24
 800c9ec:	2320      	movs	r3, #32
 800c9ee:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c9f2:	f8cd 800c 	str.w	r8, [sp, #12]
 800c9f6:	2330      	movs	r3, #48	@ 0x30
 800c9f8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800cba8 <_vfiprintf_r+0x21c>
 800c9fc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800ca00:	f04f 0901 	mov.w	r9, #1
 800ca04:	4623      	mov	r3, r4
 800ca06:	469a      	mov	sl, r3
 800ca08:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ca0c:	b10a      	cbz	r2, 800ca12 <_vfiprintf_r+0x86>
 800ca0e:	2a25      	cmp	r2, #37	@ 0x25
 800ca10:	d1f9      	bne.n	800ca06 <_vfiprintf_r+0x7a>
 800ca12:	ebba 0b04 	subs.w	fp, sl, r4
 800ca16:	d00b      	beq.n	800ca30 <_vfiprintf_r+0xa4>
 800ca18:	465b      	mov	r3, fp
 800ca1a:	4622      	mov	r2, r4
 800ca1c:	4629      	mov	r1, r5
 800ca1e:	4630      	mov	r0, r6
 800ca20:	f7ff ffa1 	bl	800c966 <__sfputs_r>
 800ca24:	3001      	adds	r0, #1
 800ca26:	f000 80a7 	beq.w	800cb78 <_vfiprintf_r+0x1ec>
 800ca2a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ca2c:	445a      	add	r2, fp
 800ca2e:	9209      	str	r2, [sp, #36]	@ 0x24
 800ca30:	f89a 3000 	ldrb.w	r3, [sl]
 800ca34:	2b00      	cmp	r3, #0
 800ca36:	f000 809f 	beq.w	800cb78 <_vfiprintf_r+0x1ec>
 800ca3a:	2300      	movs	r3, #0
 800ca3c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800ca40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ca44:	f10a 0a01 	add.w	sl, sl, #1
 800ca48:	9304      	str	r3, [sp, #16]
 800ca4a:	9307      	str	r3, [sp, #28]
 800ca4c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800ca50:	931a      	str	r3, [sp, #104]	@ 0x68
 800ca52:	4654      	mov	r4, sl
 800ca54:	2205      	movs	r2, #5
 800ca56:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ca5a:	4853      	ldr	r0, [pc, #332]	@ (800cba8 <_vfiprintf_r+0x21c>)
 800ca5c:	f7f3 fbb8 	bl	80001d0 <memchr>
 800ca60:	9a04      	ldr	r2, [sp, #16]
 800ca62:	b9d8      	cbnz	r0, 800ca9c <_vfiprintf_r+0x110>
 800ca64:	06d1      	lsls	r1, r2, #27
 800ca66:	bf44      	itt	mi
 800ca68:	2320      	movmi	r3, #32
 800ca6a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800ca6e:	0713      	lsls	r3, r2, #28
 800ca70:	bf44      	itt	mi
 800ca72:	232b      	movmi	r3, #43	@ 0x2b
 800ca74:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800ca78:	f89a 3000 	ldrb.w	r3, [sl]
 800ca7c:	2b2a      	cmp	r3, #42	@ 0x2a
 800ca7e:	d015      	beq.n	800caac <_vfiprintf_r+0x120>
 800ca80:	9a07      	ldr	r2, [sp, #28]
 800ca82:	4654      	mov	r4, sl
 800ca84:	2000      	movs	r0, #0
 800ca86:	f04f 0c0a 	mov.w	ip, #10
 800ca8a:	4621      	mov	r1, r4
 800ca8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ca90:	3b30      	subs	r3, #48	@ 0x30
 800ca92:	2b09      	cmp	r3, #9
 800ca94:	d94b      	bls.n	800cb2e <_vfiprintf_r+0x1a2>
 800ca96:	b1b0      	cbz	r0, 800cac6 <_vfiprintf_r+0x13a>
 800ca98:	9207      	str	r2, [sp, #28]
 800ca9a:	e014      	b.n	800cac6 <_vfiprintf_r+0x13a>
 800ca9c:	eba0 0308 	sub.w	r3, r0, r8
 800caa0:	fa09 f303 	lsl.w	r3, r9, r3
 800caa4:	4313      	orrs	r3, r2
 800caa6:	9304      	str	r3, [sp, #16]
 800caa8:	46a2      	mov	sl, r4
 800caaa:	e7d2      	b.n	800ca52 <_vfiprintf_r+0xc6>
 800caac:	9b03      	ldr	r3, [sp, #12]
 800caae:	1d19      	adds	r1, r3, #4
 800cab0:	681b      	ldr	r3, [r3, #0]
 800cab2:	9103      	str	r1, [sp, #12]
 800cab4:	2b00      	cmp	r3, #0
 800cab6:	bfbb      	ittet	lt
 800cab8:	425b      	neglt	r3, r3
 800caba:	f042 0202 	orrlt.w	r2, r2, #2
 800cabe:	9307      	strge	r3, [sp, #28]
 800cac0:	9307      	strlt	r3, [sp, #28]
 800cac2:	bfb8      	it	lt
 800cac4:	9204      	strlt	r2, [sp, #16]
 800cac6:	7823      	ldrb	r3, [r4, #0]
 800cac8:	2b2e      	cmp	r3, #46	@ 0x2e
 800caca:	d10a      	bne.n	800cae2 <_vfiprintf_r+0x156>
 800cacc:	7863      	ldrb	r3, [r4, #1]
 800cace:	2b2a      	cmp	r3, #42	@ 0x2a
 800cad0:	d132      	bne.n	800cb38 <_vfiprintf_r+0x1ac>
 800cad2:	9b03      	ldr	r3, [sp, #12]
 800cad4:	1d1a      	adds	r2, r3, #4
 800cad6:	681b      	ldr	r3, [r3, #0]
 800cad8:	9203      	str	r2, [sp, #12]
 800cada:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800cade:	3402      	adds	r4, #2
 800cae0:	9305      	str	r3, [sp, #20]
 800cae2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800cbb8 <_vfiprintf_r+0x22c>
 800cae6:	7821      	ldrb	r1, [r4, #0]
 800cae8:	2203      	movs	r2, #3
 800caea:	4650      	mov	r0, sl
 800caec:	f7f3 fb70 	bl	80001d0 <memchr>
 800caf0:	b138      	cbz	r0, 800cb02 <_vfiprintf_r+0x176>
 800caf2:	9b04      	ldr	r3, [sp, #16]
 800caf4:	eba0 000a 	sub.w	r0, r0, sl
 800caf8:	2240      	movs	r2, #64	@ 0x40
 800cafa:	4082      	lsls	r2, r0
 800cafc:	4313      	orrs	r3, r2
 800cafe:	3401      	adds	r4, #1
 800cb00:	9304      	str	r3, [sp, #16]
 800cb02:	f814 1b01 	ldrb.w	r1, [r4], #1
 800cb06:	4829      	ldr	r0, [pc, #164]	@ (800cbac <_vfiprintf_r+0x220>)
 800cb08:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800cb0c:	2206      	movs	r2, #6
 800cb0e:	f7f3 fb5f 	bl	80001d0 <memchr>
 800cb12:	2800      	cmp	r0, #0
 800cb14:	d03f      	beq.n	800cb96 <_vfiprintf_r+0x20a>
 800cb16:	4b26      	ldr	r3, [pc, #152]	@ (800cbb0 <_vfiprintf_r+0x224>)
 800cb18:	bb1b      	cbnz	r3, 800cb62 <_vfiprintf_r+0x1d6>
 800cb1a:	9b03      	ldr	r3, [sp, #12]
 800cb1c:	3307      	adds	r3, #7
 800cb1e:	f023 0307 	bic.w	r3, r3, #7
 800cb22:	3308      	adds	r3, #8
 800cb24:	9303      	str	r3, [sp, #12]
 800cb26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cb28:	443b      	add	r3, r7
 800cb2a:	9309      	str	r3, [sp, #36]	@ 0x24
 800cb2c:	e76a      	b.n	800ca04 <_vfiprintf_r+0x78>
 800cb2e:	fb0c 3202 	mla	r2, ip, r2, r3
 800cb32:	460c      	mov	r4, r1
 800cb34:	2001      	movs	r0, #1
 800cb36:	e7a8      	b.n	800ca8a <_vfiprintf_r+0xfe>
 800cb38:	2300      	movs	r3, #0
 800cb3a:	3401      	adds	r4, #1
 800cb3c:	9305      	str	r3, [sp, #20]
 800cb3e:	4619      	mov	r1, r3
 800cb40:	f04f 0c0a 	mov.w	ip, #10
 800cb44:	4620      	mov	r0, r4
 800cb46:	f810 2b01 	ldrb.w	r2, [r0], #1
 800cb4a:	3a30      	subs	r2, #48	@ 0x30
 800cb4c:	2a09      	cmp	r2, #9
 800cb4e:	d903      	bls.n	800cb58 <_vfiprintf_r+0x1cc>
 800cb50:	2b00      	cmp	r3, #0
 800cb52:	d0c6      	beq.n	800cae2 <_vfiprintf_r+0x156>
 800cb54:	9105      	str	r1, [sp, #20]
 800cb56:	e7c4      	b.n	800cae2 <_vfiprintf_r+0x156>
 800cb58:	fb0c 2101 	mla	r1, ip, r1, r2
 800cb5c:	4604      	mov	r4, r0
 800cb5e:	2301      	movs	r3, #1
 800cb60:	e7f0      	b.n	800cb44 <_vfiprintf_r+0x1b8>
 800cb62:	ab03      	add	r3, sp, #12
 800cb64:	9300      	str	r3, [sp, #0]
 800cb66:	462a      	mov	r2, r5
 800cb68:	4b12      	ldr	r3, [pc, #72]	@ (800cbb4 <_vfiprintf_r+0x228>)
 800cb6a:	a904      	add	r1, sp, #16
 800cb6c:	4630      	mov	r0, r6
 800cb6e:	f7fd f8b7 	bl	8009ce0 <_printf_float>
 800cb72:	4607      	mov	r7, r0
 800cb74:	1c78      	adds	r0, r7, #1
 800cb76:	d1d6      	bne.n	800cb26 <_vfiprintf_r+0x19a>
 800cb78:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800cb7a:	07d9      	lsls	r1, r3, #31
 800cb7c:	d405      	bmi.n	800cb8a <_vfiprintf_r+0x1fe>
 800cb7e:	89ab      	ldrh	r3, [r5, #12]
 800cb80:	059a      	lsls	r2, r3, #22
 800cb82:	d402      	bmi.n	800cb8a <_vfiprintf_r+0x1fe>
 800cb84:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800cb86:	f7fd fead 	bl	800a8e4 <__retarget_lock_release_recursive>
 800cb8a:	89ab      	ldrh	r3, [r5, #12]
 800cb8c:	065b      	lsls	r3, r3, #25
 800cb8e:	f53f af1f 	bmi.w	800c9d0 <_vfiprintf_r+0x44>
 800cb92:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800cb94:	e71e      	b.n	800c9d4 <_vfiprintf_r+0x48>
 800cb96:	ab03      	add	r3, sp, #12
 800cb98:	9300      	str	r3, [sp, #0]
 800cb9a:	462a      	mov	r2, r5
 800cb9c:	4b05      	ldr	r3, [pc, #20]	@ (800cbb4 <_vfiprintf_r+0x228>)
 800cb9e:	a904      	add	r1, sp, #16
 800cba0:	4630      	mov	r0, r6
 800cba2:	f7fd fb35 	bl	800a210 <_printf_i>
 800cba6:	e7e4      	b.n	800cb72 <_vfiprintf_r+0x1e6>
 800cba8:	0800d750 	.word	0x0800d750
 800cbac:	0800d75a 	.word	0x0800d75a
 800cbb0:	08009ce1 	.word	0x08009ce1
 800cbb4:	0800c967 	.word	0x0800c967
 800cbb8:	0800d756 	.word	0x0800d756

0800cbbc <__sflush_r>:
 800cbbc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800cbc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbc4:	0716      	lsls	r6, r2, #28
 800cbc6:	4605      	mov	r5, r0
 800cbc8:	460c      	mov	r4, r1
 800cbca:	d454      	bmi.n	800cc76 <__sflush_r+0xba>
 800cbcc:	684b      	ldr	r3, [r1, #4]
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	dc02      	bgt.n	800cbd8 <__sflush_r+0x1c>
 800cbd2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800cbd4:	2b00      	cmp	r3, #0
 800cbd6:	dd48      	ble.n	800cc6a <__sflush_r+0xae>
 800cbd8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800cbda:	2e00      	cmp	r6, #0
 800cbdc:	d045      	beq.n	800cc6a <__sflush_r+0xae>
 800cbde:	2300      	movs	r3, #0
 800cbe0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800cbe4:	682f      	ldr	r7, [r5, #0]
 800cbe6:	6a21      	ldr	r1, [r4, #32]
 800cbe8:	602b      	str	r3, [r5, #0]
 800cbea:	d030      	beq.n	800cc4e <__sflush_r+0x92>
 800cbec:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800cbee:	89a3      	ldrh	r3, [r4, #12]
 800cbf0:	0759      	lsls	r1, r3, #29
 800cbf2:	d505      	bpl.n	800cc00 <__sflush_r+0x44>
 800cbf4:	6863      	ldr	r3, [r4, #4]
 800cbf6:	1ad2      	subs	r2, r2, r3
 800cbf8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800cbfa:	b10b      	cbz	r3, 800cc00 <__sflush_r+0x44>
 800cbfc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800cbfe:	1ad2      	subs	r2, r2, r3
 800cc00:	2300      	movs	r3, #0
 800cc02:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800cc04:	6a21      	ldr	r1, [r4, #32]
 800cc06:	4628      	mov	r0, r5
 800cc08:	47b0      	blx	r6
 800cc0a:	1c43      	adds	r3, r0, #1
 800cc0c:	89a3      	ldrh	r3, [r4, #12]
 800cc0e:	d106      	bne.n	800cc1e <__sflush_r+0x62>
 800cc10:	6829      	ldr	r1, [r5, #0]
 800cc12:	291d      	cmp	r1, #29
 800cc14:	d82b      	bhi.n	800cc6e <__sflush_r+0xb2>
 800cc16:	4a2a      	ldr	r2, [pc, #168]	@ (800ccc0 <__sflush_r+0x104>)
 800cc18:	410a      	asrs	r2, r1
 800cc1a:	07d6      	lsls	r6, r2, #31
 800cc1c:	d427      	bmi.n	800cc6e <__sflush_r+0xb2>
 800cc1e:	2200      	movs	r2, #0
 800cc20:	6062      	str	r2, [r4, #4]
 800cc22:	04d9      	lsls	r1, r3, #19
 800cc24:	6922      	ldr	r2, [r4, #16]
 800cc26:	6022      	str	r2, [r4, #0]
 800cc28:	d504      	bpl.n	800cc34 <__sflush_r+0x78>
 800cc2a:	1c42      	adds	r2, r0, #1
 800cc2c:	d101      	bne.n	800cc32 <__sflush_r+0x76>
 800cc2e:	682b      	ldr	r3, [r5, #0]
 800cc30:	b903      	cbnz	r3, 800cc34 <__sflush_r+0x78>
 800cc32:	6560      	str	r0, [r4, #84]	@ 0x54
 800cc34:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800cc36:	602f      	str	r7, [r5, #0]
 800cc38:	b1b9      	cbz	r1, 800cc6a <__sflush_r+0xae>
 800cc3a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800cc3e:	4299      	cmp	r1, r3
 800cc40:	d002      	beq.n	800cc48 <__sflush_r+0x8c>
 800cc42:	4628      	mov	r0, r5
 800cc44:	f7fe fccc 	bl	800b5e0 <_free_r>
 800cc48:	2300      	movs	r3, #0
 800cc4a:	6363      	str	r3, [r4, #52]	@ 0x34
 800cc4c:	e00d      	b.n	800cc6a <__sflush_r+0xae>
 800cc4e:	2301      	movs	r3, #1
 800cc50:	4628      	mov	r0, r5
 800cc52:	47b0      	blx	r6
 800cc54:	4602      	mov	r2, r0
 800cc56:	1c50      	adds	r0, r2, #1
 800cc58:	d1c9      	bne.n	800cbee <__sflush_r+0x32>
 800cc5a:	682b      	ldr	r3, [r5, #0]
 800cc5c:	2b00      	cmp	r3, #0
 800cc5e:	d0c6      	beq.n	800cbee <__sflush_r+0x32>
 800cc60:	2b1d      	cmp	r3, #29
 800cc62:	d001      	beq.n	800cc68 <__sflush_r+0xac>
 800cc64:	2b16      	cmp	r3, #22
 800cc66:	d11e      	bne.n	800cca6 <__sflush_r+0xea>
 800cc68:	602f      	str	r7, [r5, #0]
 800cc6a:	2000      	movs	r0, #0
 800cc6c:	e022      	b.n	800ccb4 <__sflush_r+0xf8>
 800cc6e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800cc72:	b21b      	sxth	r3, r3
 800cc74:	e01b      	b.n	800ccae <__sflush_r+0xf2>
 800cc76:	690f      	ldr	r7, [r1, #16]
 800cc78:	2f00      	cmp	r7, #0
 800cc7a:	d0f6      	beq.n	800cc6a <__sflush_r+0xae>
 800cc7c:	0793      	lsls	r3, r2, #30
 800cc7e:	680e      	ldr	r6, [r1, #0]
 800cc80:	bf08      	it	eq
 800cc82:	694b      	ldreq	r3, [r1, #20]
 800cc84:	600f      	str	r7, [r1, #0]
 800cc86:	bf18      	it	ne
 800cc88:	2300      	movne	r3, #0
 800cc8a:	eba6 0807 	sub.w	r8, r6, r7
 800cc8e:	608b      	str	r3, [r1, #8]
 800cc90:	f1b8 0f00 	cmp.w	r8, #0
 800cc94:	dde9      	ble.n	800cc6a <__sflush_r+0xae>
 800cc96:	6a21      	ldr	r1, [r4, #32]
 800cc98:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800cc9a:	4643      	mov	r3, r8
 800cc9c:	463a      	mov	r2, r7
 800cc9e:	4628      	mov	r0, r5
 800cca0:	47b0      	blx	r6
 800cca2:	2800      	cmp	r0, #0
 800cca4:	dc08      	bgt.n	800ccb8 <__sflush_r+0xfc>
 800cca6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ccaa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ccae:	81a3      	strh	r3, [r4, #12]
 800ccb0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800ccb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccb8:	4407      	add	r7, r0
 800ccba:	eba8 0800 	sub.w	r8, r8, r0
 800ccbe:	e7e7      	b.n	800cc90 <__sflush_r+0xd4>
 800ccc0:	dfbffffe 	.word	0xdfbffffe

0800ccc4 <_fflush_r>:
 800ccc4:	b538      	push	{r3, r4, r5, lr}
 800ccc6:	690b      	ldr	r3, [r1, #16]
 800ccc8:	4605      	mov	r5, r0
 800ccca:	460c      	mov	r4, r1
 800cccc:	b913      	cbnz	r3, 800ccd4 <_fflush_r+0x10>
 800ccce:	2500      	movs	r5, #0
 800ccd0:	4628      	mov	r0, r5
 800ccd2:	bd38      	pop	{r3, r4, r5, pc}
 800ccd4:	b118      	cbz	r0, 800ccde <_fflush_r+0x1a>
 800ccd6:	6a03      	ldr	r3, [r0, #32]
 800ccd8:	b90b      	cbnz	r3, 800ccde <_fflush_r+0x1a>
 800ccda:	f7fd fc45 	bl	800a568 <__sinit>
 800ccde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cce2:	2b00      	cmp	r3, #0
 800cce4:	d0f3      	beq.n	800ccce <_fflush_r+0xa>
 800cce6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800cce8:	07d0      	lsls	r0, r2, #31
 800ccea:	d404      	bmi.n	800ccf6 <_fflush_r+0x32>
 800ccec:	0599      	lsls	r1, r3, #22
 800ccee:	d402      	bmi.n	800ccf6 <_fflush_r+0x32>
 800ccf0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800ccf2:	f7fd fdf6 	bl	800a8e2 <__retarget_lock_acquire_recursive>
 800ccf6:	4628      	mov	r0, r5
 800ccf8:	4621      	mov	r1, r4
 800ccfa:	f7ff ff5f 	bl	800cbbc <__sflush_r>
 800ccfe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800cd00:	07da      	lsls	r2, r3, #31
 800cd02:	4605      	mov	r5, r0
 800cd04:	d4e4      	bmi.n	800ccd0 <_fflush_r+0xc>
 800cd06:	89a3      	ldrh	r3, [r4, #12]
 800cd08:	059b      	lsls	r3, r3, #22
 800cd0a:	d4e1      	bmi.n	800ccd0 <_fflush_r+0xc>
 800cd0c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800cd0e:	f7fd fde9 	bl	800a8e4 <__retarget_lock_release_recursive>
 800cd12:	e7dd      	b.n	800ccd0 <_fflush_r+0xc>

0800cd14 <__swbuf_r>:
 800cd14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd16:	460e      	mov	r6, r1
 800cd18:	4614      	mov	r4, r2
 800cd1a:	4605      	mov	r5, r0
 800cd1c:	b118      	cbz	r0, 800cd26 <__swbuf_r+0x12>
 800cd1e:	6a03      	ldr	r3, [r0, #32]
 800cd20:	b90b      	cbnz	r3, 800cd26 <__swbuf_r+0x12>
 800cd22:	f7fd fc21 	bl	800a568 <__sinit>
 800cd26:	69a3      	ldr	r3, [r4, #24]
 800cd28:	60a3      	str	r3, [r4, #8]
 800cd2a:	89a3      	ldrh	r3, [r4, #12]
 800cd2c:	071a      	lsls	r2, r3, #28
 800cd2e:	d501      	bpl.n	800cd34 <__swbuf_r+0x20>
 800cd30:	6923      	ldr	r3, [r4, #16]
 800cd32:	b943      	cbnz	r3, 800cd46 <__swbuf_r+0x32>
 800cd34:	4621      	mov	r1, r4
 800cd36:	4628      	mov	r0, r5
 800cd38:	f000 f82a 	bl	800cd90 <__swsetup_r>
 800cd3c:	b118      	cbz	r0, 800cd46 <__swbuf_r+0x32>
 800cd3e:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800cd42:	4638      	mov	r0, r7
 800cd44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd46:	6823      	ldr	r3, [r4, #0]
 800cd48:	6922      	ldr	r2, [r4, #16]
 800cd4a:	1a98      	subs	r0, r3, r2
 800cd4c:	6963      	ldr	r3, [r4, #20]
 800cd4e:	b2f6      	uxtb	r6, r6
 800cd50:	4283      	cmp	r3, r0
 800cd52:	4637      	mov	r7, r6
 800cd54:	dc05      	bgt.n	800cd62 <__swbuf_r+0x4e>
 800cd56:	4621      	mov	r1, r4
 800cd58:	4628      	mov	r0, r5
 800cd5a:	f7ff ffb3 	bl	800ccc4 <_fflush_r>
 800cd5e:	2800      	cmp	r0, #0
 800cd60:	d1ed      	bne.n	800cd3e <__swbuf_r+0x2a>
 800cd62:	68a3      	ldr	r3, [r4, #8]
 800cd64:	3b01      	subs	r3, #1
 800cd66:	60a3      	str	r3, [r4, #8]
 800cd68:	6823      	ldr	r3, [r4, #0]
 800cd6a:	1c5a      	adds	r2, r3, #1
 800cd6c:	6022      	str	r2, [r4, #0]
 800cd6e:	701e      	strb	r6, [r3, #0]
 800cd70:	6962      	ldr	r2, [r4, #20]
 800cd72:	1c43      	adds	r3, r0, #1
 800cd74:	429a      	cmp	r2, r3
 800cd76:	d004      	beq.n	800cd82 <__swbuf_r+0x6e>
 800cd78:	89a3      	ldrh	r3, [r4, #12]
 800cd7a:	07db      	lsls	r3, r3, #31
 800cd7c:	d5e1      	bpl.n	800cd42 <__swbuf_r+0x2e>
 800cd7e:	2e0a      	cmp	r6, #10
 800cd80:	d1df      	bne.n	800cd42 <__swbuf_r+0x2e>
 800cd82:	4621      	mov	r1, r4
 800cd84:	4628      	mov	r0, r5
 800cd86:	f7ff ff9d 	bl	800ccc4 <_fflush_r>
 800cd8a:	2800      	cmp	r0, #0
 800cd8c:	d0d9      	beq.n	800cd42 <__swbuf_r+0x2e>
 800cd8e:	e7d6      	b.n	800cd3e <__swbuf_r+0x2a>

0800cd90 <__swsetup_r>:
 800cd90:	b538      	push	{r3, r4, r5, lr}
 800cd92:	4b29      	ldr	r3, [pc, #164]	@ (800ce38 <__swsetup_r+0xa8>)
 800cd94:	4605      	mov	r5, r0
 800cd96:	6818      	ldr	r0, [r3, #0]
 800cd98:	460c      	mov	r4, r1
 800cd9a:	b118      	cbz	r0, 800cda4 <__swsetup_r+0x14>
 800cd9c:	6a03      	ldr	r3, [r0, #32]
 800cd9e:	b90b      	cbnz	r3, 800cda4 <__swsetup_r+0x14>
 800cda0:	f7fd fbe2 	bl	800a568 <__sinit>
 800cda4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cda8:	0719      	lsls	r1, r3, #28
 800cdaa:	d422      	bmi.n	800cdf2 <__swsetup_r+0x62>
 800cdac:	06da      	lsls	r2, r3, #27
 800cdae:	d407      	bmi.n	800cdc0 <__swsetup_r+0x30>
 800cdb0:	2209      	movs	r2, #9
 800cdb2:	602a      	str	r2, [r5, #0]
 800cdb4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800cdb8:	81a3      	strh	r3, [r4, #12]
 800cdba:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800cdbe:	e033      	b.n	800ce28 <__swsetup_r+0x98>
 800cdc0:	0758      	lsls	r0, r3, #29
 800cdc2:	d512      	bpl.n	800cdea <__swsetup_r+0x5a>
 800cdc4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800cdc6:	b141      	cbz	r1, 800cdda <__swsetup_r+0x4a>
 800cdc8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800cdcc:	4299      	cmp	r1, r3
 800cdce:	d002      	beq.n	800cdd6 <__swsetup_r+0x46>
 800cdd0:	4628      	mov	r0, r5
 800cdd2:	f7fe fc05 	bl	800b5e0 <_free_r>
 800cdd6:	2300      	movs	r3, #0
 800cdd8:	6363      	str	r3, [r4, #52]	@ 0x34
 800cdda:	89a3      	ldrh	r3, [r4, #12]
 800cddc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800cde0:	81a3      	strh	r3, [r4, #12]
 800cde2:	2300      	movs	r3, #0
 800cde4:	6063      	str	r3, [r4, #4]
 800cde6:	6923      	ldr	r3, [r4, #16]
 800cde8:	6023      	str	r3, [r4, #0]
 800cdea:	89a3      	ldrh	r3, [r4, #12]
 800cdec:	f043 0308 	orr.w	r3, r3, #8
 800cdf0:	81a3      	strh	r3, [r4, #12]
 800cdf2:	6923      	ldr	r3, [r4, #16]
 800cdf4:	b94b      	cbnz	r3, 800ce0a <__swsetup_r+0x7a>
 800cdf6:	89a3      	ldrh	r3, [r4, #12]
 800cdf8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800cdfc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ce00:	d003      	beq.n	800ce0a <__swsetup_r+0x7a>
 800ce02:	4621      	mov	r1, r4
 800ce04:	4628      	mov	r0, r5
 800ce06:	f000 f8df 	bl	800cfc8 <__smakebuf_r>
 800ce0a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ce0e:	f013 0201 	ands.w	r2, r3, #1
 800ce12:	d00a      	beq.n	800ce2a <__swsetup_r+0x9a>
 800ce14:	2200      	movs	r2, #0
 800ce16:	60a2      	str	r2, [r4, #8]
 800ce18:	6962      	ldr	r2, [r4, #20]
 800ce1a:	4252      	negs	r2, r2
 800ce1c:	61a2      	str	r2, [r4, #24]
 800ce1e:	6922      	ldr	r2, [r4, #16]
 800ce20:	b942      	cbnz	r2, 800ce34 <__swsetup_r+0xa4>
 800ce22:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800ce26:	d1c5      	bne.n	800cdb4 <__swsetup_r+0x24>
 800ce28:	bd38      	pop	{r3, r4, r5, pc}
 800ce2a:	0799      	lsls	r1, r3, #30
 800ce2c:	bf58      	it	pl
 800ce2e:	6962      	ldrpl	r2, [r4, #20]
 800ce30:	60a2      	str	r2, [r4, #8]
 800ce32:	e7f4      	b.n	800ce1e <__swsetup_r+0x8e>
 800ce34:	2000      	movs	r0, #0
 800ce36:	e7f7      	b.n	800ce28 <__swsetup_r+0x98>
 800ce38:	20000224 	.word	0x20000224

0800ce3c <memmove>:
 800ce3c:	4288      	cmp	r0, r1
 800ce3e:	b510      	push	{r4, lr}
 800ce40:	eb01 0402 	add.w	r4, r1, r2
 800ce44:	d902      	bls.n	800ce4c <memmove+0x10>
 800ce46:	4284      	cmp	r4, r0
 800ce48:	4623      	mov	r3, r4
 800ce4a:	d807      	bhi.n	800ce5c <memmove+0x20>
 800ce4c:	1e43      	subs	r3, r0, #1
 800ce4e:	42a1      	cmp	r1, r4
 800ce50:	d008      	beq.n	800ce64 <memmove+0x28>
 800ce52:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ce56:	f803 2f01 	strb.w	r2, [r3, #1]!
 800ce5a:	e7f8      	b.n	800ce4e <memmove+0x12>
 800ce5c:	4402      	add	r2, r0
 800ce5e:	4601      	mov	r1, r0
 800ce60:	428a      	cmp	r2, r1
 800ce62:	d100      	bne.n	800ce66 <memmove+0x2a>
 800ce64:	bd10      	pop	{r4, pc}
 800ce66:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800ce6a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800ce6e:	e7f7      	b.n	800ce60 <memmove+0x24>

0800ce70 <_raise_r>:
 800ce70:	291f      	cmp	r1, #31
 800ce72:	b538      	push	{r3, r4, r5, lr}
 800ce74:	4605      	mov	r5, r0
 800ce76:	460c      	mov	r4, r1
 800ce78:	d904      	bls.n	800ce84 <_raise_r+0x14>
 800ce7a:	2316      	movs	r3, #22
 800ce7c:	6003      	str	r3, [r0, #0]
 800ce7e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800ce82:	bd38      	pop	{r3, r4, r5, pc}
 800ce84:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800ce86:	b112      	cbz	r2, 800ce8e <_raise_r+0x1e>
 800ce88:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ce8c:	b94b      	cbnz	r3, 800cea2 <_raise_r+0x32>
 800ce8e:	4628      	mov	r0, r5
 800ce90:	f000 f830 	bl	800cef4 <_getpid_r>
 800ce94:	4622      	mov	r2, r4
 800ce96:	4601      	mov	r1, r0
 800ce98:	4628      	mov	r0, r5
 800ce9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ce9e:	f000 b817 	b.w	800ced0 <_kill_r>
 800cea2:	2b01      	cmp	r3, #1
 800cea4:	d00a      	beq.n	800cebc <_raise_r+0x4c>
 800cea6:	1c59      	adds	r1, r3, #1
 800cea8:	d103      	bne.n	800ceb2 <_raise_r+0x42>
 800ceaa:	2316      	movs	r3, #22
 800ceac:	6003      	str	r3, [r0, #0]
 800ceae:	2001      	movs	r0, #1
 800ceb0:	e7e7      	b.n	800ce82 <_raise_r+0x12>
 800ceb2:	2100      	movs	r1, #0
 800ceb4:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800ceb8:	4620      	mov	r0, r4
 800ceba:	4798      	blx	r3
 800cebc:	2000      	movs	r0, #0
 800cebe:	e7e0      	b.n	800ce82 <_raise_r+0x12>

0800cec0 <raise>:
 800cec0:	4b02      	ldr	r3, [pc, #8]	@ (800cecc <raise+0xc>)
 800cec2:	4601      	mov	r1, r0
 800cec4:	6818      	ldr	r0, [r3, #0]
 800cec6:	f7ff bfd3 	b.w	800ce70 <_raise_r>
 800ceca:	bf00      	nop
 800cecc:	20000224 	.word	0x20000224

0800ced0 <_kill_r>:
 800ced0:	b538      	push	{r3, r4, r5, lr}
 800ced2:	4d07      	ldr	r5, [pc, #28]	@ (800cef0 <_kill_r+0x20>)
 800ced4:	2300      	movs	r3, #0
 800ced6:	4604      	mov	r4, r0
 800ced8:	4608      	mov	r0, r1
 800ceda:	4611      	mov	r1, r2
 800cedc:	602b      	str	r3, [r5, #0]
 800cede:	f7f6 ff63 	bl	8003da8 <_kill>
 800cee2:	1c43      	adds	r3, r0, #1
 800cee4:	d102      	bne.n	800ceec <_kill_r+0x1c>
 800cee6:	682b      	ldr	r3, [r5, #0]
 800cee8:	b103      	cbz	r3, 800ceec <_kill_r+0x1c>
 800ceea:	6023      	str	r3, [r4, #0]
 800ceec:	bd38      	pop	{r3, r4, r5, pc}
 800ceee:	bf00      	nop
 800cef0:	20000d5c 	.word	0x20000d5c

0800cef4 <_getpid_r>:
 800cef4:	f7f6 bf50 	b.w	8003d98 <_getpid>

0800cef8 <_calloc_r>:
 800cef8:	b570      	push	{r4, r5, r6, lr}
 800cefa:	fba1 5402 	umull	r5, r4, r1, r2
 800cefe:	b93c      	cbnz	r4, 800cf10 <_calloc_r+0x18>
 800cf00:	4629      	mov	r1, r5
 800cf02:	f7fb fed5 	bl	8008cb0 <_malloc_r>
 800cf06:	4606      	mov	r6, r0
 800cf08:	b928      	cbnz	r0, 800cf16 <_calloc_r+0x1e>
 800cf0a:	2600      	movs	r6, #0
 800cf0c:	4630      	mov	r0, r6
 800cf0e:	bd70      	pop	{r4, r5, r6, pc}
 800cf10:	220c      	movs	r2, #12
 800cf12:	6002      	str	r2, [r0, #0]
 800cf14:	e7f9      	b.n	800cf0a <_calloc_r+0x12>
 800cf16:	462a      	mov	r2, r5
 800cf18:	4621      	mov	r1, r4
 800cf1a:	f7fd fbd0 	bl	800a6be <memset>
 800cf1e:	e7f5      	b.n	800cf0c <_calloc_r+0x14>

0800cf20 <_realloc_r>:
 800cf20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf24:	4680      	mov	r8, r0
 800cf26:	4615      	mov	r5, r2
 800cf28:	460c      	mov	r4, r1
 800cf2a:	b921      	cbnz	r1, 800cf36 <_realloc_r+0x16>
 800cf2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cf30:	4611      	mov	r1, r2
 800cf32:	f7fb bebd 	b.w	8008cb0 <_malloc_r>
 800cf36:	b92a      	cbnz	r2, 800cf44 <_realloc_r+0x24>
 800cf38:	f7fe fb52 	bl	800b5e0 <_free_r>
 800cf3c:	2400      	movs	r4, #0
 800cf3e:	4620      	mov	r0, r4
 800cf40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf44:	f000 f89e 	bl	800d084 <_malloc_usable_size_r>
 800cf48:	4285      	cmp	r5, r0
 800cf4a:	4606      	mov	r6, r0
 800cf4c:	d802      	bhi.n	800cf54 <_realloc_r+0x34>
 800cf4e:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800cf52:	d8f4      	bhi.n	800cf3e <_realloc_r+0x1e>
 800cf54:	4629      	mov	r1, r5
 800cf56:	4640      	mov	r0, r8
 800cf58:	f7fb feaa 	bl	8008cb0 <_malloc_r>
 800cf5c:	4607      	mov	r7, r0
 800cf5e:	2800      	cmp	r0, #0
 800cf60:	d0ec      	beq.n	800cf3c <_realloc_r+0x1c>
 800cf62:	42b5      	cmp	r5, r6
 800cf64:	462a      	mov	r2, r5
 800cf66:	4621      	mov	r1, r4
 800cf68:	bf28      	it	cs
 800cf6a:	4632      	movcs	r2, r6
 800cf6c:	f7fd fcc3 	bl	800a8f6 <memcpy>
 800cf70:	4621      	mov	r1, r4
 800cf72:	4640      	mov	r0, r8
 800cf74:	f7fe fb34 	bl	800b5e0 <_free_r>
 800cf78:	463c      	mov	r4, r7
 800cf7a:	e7e0      	b.n	800cf3e <_realloc_r+0x1e>

0800cf7c <__swhatbuf_r>:
 800cf7c:	b570      	push	{r4, r5, r6, lr}
 800cf7e:	460c      	mov	r4, r1
 800cf80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cf84:	2900      	cmp	r1, #0
 800cf86:	b096      	sub	sp, #88	@ 0x58
 800cf88:	4615      	mov	r5, r2
 800cf8a:	461e      	mov	r6, r3
 800cf8c:	da0d      	bge.n	800cfaa <__swhatbuf_r+0x2e>
 800cf8e:	89a3      	ldrh	r3, [r4, #12]
 800cf90:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800cf94:	f04f 0100 	mov.w	r1, #0
 800cf98:	bf14      	ite	ne
 800cf9a:	2340      	movne	r3, #64	@ 0x40
 800cf9c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800cfa0:	2000      	movs	r0, #0
 800cfa2:	6031      	str	r1, [r6, #0]
 800cfa4:	602b      	str	r3, [r5, #0]
 800cfa6:	b016      	add	sp, #88	@ 0x58
 800cfa8:	bd70      	pop	{r4, r5, r6, pc}
 800cfaa:	466a      	mov	r2, sp
 800cfac:	f000 f848 	bl	800d040 <_fstat_r>
 800cfb0:	2800      	cmp	r0, #0
 800cfb2:	dbec      	blt.n	800cf8e <__swhatbuf_r+0x12>
 800cfb4:	9901      	ldr	r1, [sp, #4]
 800cfb6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800cfba:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800cfbe:	4259      	negs	r1, r3
 800cfc0:	4159      	adcs	r1, r3
 800cfc2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800cfc6:	e7eb      	b.n	800cfa0 <__swhatbuf_r+0x24>

0800cfc8 <__smakebuf_r>:
 800cfc8:	898b      	ldrh	r3, [r1, #12]
 800cfca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cfcc:	079d      	lsls	r5, r3, #30
 800cfce:	4606      	mov	r6, r0
 800cfd0:	460c      	mov	r4, r1
 800cfd2:	d507      	bpl.n	800cfe4 <__smakebuf_r+0x1c>
 800cfd4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800cfd8:	6023      	str	r3, [r4, #0]
 800cfda:	6123      	str	r3, [r4, #16]
 800cfdc:	2301      	movs	r3, #1
 800cfde:	6163      	str	r3, [r4, #20]
 800cfe0:	b003      	add	sp, #12
 800cfe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cfe4:	ab01      	add	r3, sp, #4
 800cfe6:	466a      	mov	r2, sp
 800cfe8:	f7ff ffc8 	bl	800cf7c <__swhatbuf_r>
 800cfec:	9f00      	ldr	r7, [sp, #0]
 800cfee:	4605      	mov	r5, r0
 800cff0:	4639      	mov	r1, r7
 800cff2:	4630      	mov	r0, r6
 800cff4:	f7fb fe5c 	bl	8008cb0 <_malloc_r>
 800cff8:	b948      	cbnz	r0, 800d00e <__smakebuf_r+0x46>
 800cffa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cffe:	059a      	lsls	r2, r3, #22
 800d000:	d4ee      	bmi.n	800cfe0 <__smakebuf_r+0x18>
 800d002:	f023 0303 	bic.w	r3, r3, #3
 800d006:	f043 0302 	orr.w	r3, r3, #2
 800d00a:	81a3      	strh	r3, [r4, #12]
 800d00c:	e7e2      	b.n	800cfd4 <__smakebuf_r+0xc>
 800d00e:	89a3      	ldrh	r3, [r4, #12]
 800d010:	6020      	str	r0, [r4, #0]
 800d012:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800d016:	81a3      	strh	r3, [r4, #12]
 800d018:	9b01      	ldr	r3, [sp, #4]
 800d01a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800d01e:	b15b      	cbz	r3, 800d038 <__smakebuf_r+0x70>
 800d020:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d024:	4630      	mov	r0, r6
 800d026:	f000 f81d 	bl	800d064 <_isatty_r>
 800d02a:	b128      	cbz	r0, 800d038 <__smakebuf_r+0x70>
 800d02c:	89a3      	ldrh	r3, [r4, #12]
 800d02e:	f023 0303 	bic.w	r3, r3, #3
 800d032:	f043 0301 	orr.w	r3, r3, #1
 800d036:	81a3      	strh	r3, [r4, #12]
 800d038:	89a3      	ldrh	r3, [r4, #12]
 800d03a:	431d      	orrs	r5, r3
 800d03c:	81a5      	strh	r5, [r4, #12]
 800d03e:	e7cf      	b.n	800cfe0 <__smakebuf_r+0x18>

0800d040 <_fstat_r>:
 800d040:	b538      	push	{r3, r4, r5, lr}
 800d042:	4d07      	ldr	r5, [pc, #28]	@ (800d060 <_fstat_r+0x20>)
 800d044:	2300      	movs	r3, #0
 800d046:	4604      	mov	r4, r0
 800d048:	4608      	mov	r0, r1
 800d04a:	4611      	mov	r1, r2
 800d04c:	602b      	str	r3, [r5, #0]
 800d04e:	f7f6 ff0b 	bl	8003e68 <_fstat>
 800d052:	1c43      	adds	r3, r0, #1
 800d054:	d102      	bne.n	800d05c <_fstat_r+0x1c>
 800d056:	682b      	ldr	r3, [r5, #0]
 800d058:	b103      	cbz	r3, 800d05c <_fstat_r+0x1c>
 800d05a:	6023      	str	r3, [r4, #0]
 800d05c:	bd38      	pop	{r3, r4, r5, pc}
 800d05e:	bf00      	nop
 800d060:	20000d5c 	.word	0x20000d5c

0800d064 <_isatty_r>:
 800d064:	b538      	push	{r3, r4, r5, lr}
 800d066:	4d06      	ldr	r5, [pc, #24]	@ (800d080 <_isatty_r+0x1c>)
 800d068:	2300      	movs	r3, #0
 800d06a:	4604      	mov	r4, r0
 800d06c:	4608      	mov	r0, r1
 800d06e:	602b      	str	r3, [r5, #0]
 800d070:	f7f6 ff0a 	bl	8003e88 <_isatty>
 800d074:	1c43      	adds	r3, r0, #1
 800d076:	d102      	bne.n	800d07e <_isatty_r+0x1a>
 800d078:	682b      	ldr	r3, [r5, #0]
 800d07a:	b103      	cbz	r3, 800d07e <_isatty_r+0x1a>
 800d07c:	6023      	str	r3, [r4, #0]
 800d07e:	bd38      	pop	{r3, r4, r5, pc}
 800d080:	20000d5c 	.word	0x20000d5c

0800d084 <_malloc_usable_size_r>:
 800d084:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d088:	1f18      	subs	r0, r3, #4
 800d08a:	2b00      	cmp	r3, #0
 800d08c:	bfbc      	itt	lt
 800d08e:	580b      	ldrlt	r3, [r1, r0]
 800d090:	18c0      	addlt	r0, r0, r3
 800d092:	4770      	bx	lr

0800d094 <round>:
 800d094:	ec51 0b10 	vmov	r0, r1, d0
 800d098:	b570      	push	{r4, r5, r6, lr}
 800d09a:	f3c1 540a 	ubfx	r4, r1, #20, #11
 800d09e:	f2a4 32ff 	subw	r2, r4, #1023	@ 0x3ff
 800d0a2:	2a13      	cmp	r2, #19
 800d0a4:	460b      	mov	r3, r1
 800d0a6:	4605      	mov	r5, r0
 800d0a8:	dc1b      	bgt.n	800d0e2 <round+0x4e>
 800d0aa:	2a00      	cmp	r2, #0
 800d0ac:	da0b      	bge.n	800d0c6 <round+0x32>
 800d0ae:	f001 4300 	and.w	r3, r1, #2147483648	@ 0x80000000
 800d0b2:	3201      	adds	r2, #1
 800d0b4:	bf04      	itt	eq
 800d0b6:	f043 537f 	orreq.w	r3, r3, #1069547520	@ 0x3fc00000
 800d0ba:	f443 1340 	orreq.w	r3, r3, #3145728	@ 0x300000
 800d0be:	2200      	movs	r2, #0
 800d0c0:	4619      	mov	r1, r3
 800d0c2:	4610      	mov	r0, r2
 800d0c4:	e015      	b.n	800d0f2 <round+0x5e>
 800d0c6:	4c15      	ldr	r4, [pc, #84]	@ (800d11c <round+0x88>)
 800d0c8:	4114      	asrs	r4, r2
 800d0ca:	ea04 0601 	and.w	r6, r4, r1
 800d0ce:	4306      	orrs	r6, r0
 800d0d0:	d00f      	beq.n	800d0f2 <round+0x5e>
 800d0d2:	f44f 2100 	mov.w	r1, #524288	@ 0x80000
 800d0d6:	fa41 f202 	asr.w	r2, r1, r2
 800d0da:	4413      	add	r3, r2
 800d0dc:	ea23 0304 	bic.w	r3, r3, r4
 800d0e0:	e7ed      	b.n	800d0be <round+0x2a>
 800d0e2:	2a33      	cmp	r2, #51	@ 0x33
 800d0e4:	dd08      	ble.n	800d0f8 <round+0x64>
 800d0e6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800d0ea:	d102      	bne.n	800d0f2 <round+0x5e>
 800d0ec:	4602      	mov	r2, r0
 800d0ee:	f7f3 f8cd 	bl	800028c <__adddf3>
 800d0f2:	ec41 0b10 	vmov	d0, r0, r1
 800d0f6:	bd70      	pop	{r4, r5, r6, pc}
 800d0f8:	f2a4 4613 	subw	r6, r4, #1043	@ 0x413
 800d0fc:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800d100:	40f4      	lsrs	r4, r6
 800d102:	4204      	tst	r4, r0
 800d104:	d0f5      	beq.n	800d0f2 <round+0x5e>
 800d106:	f1c2 0133 	rsb	r1, r2, #51	@ 0x33
 800d10a:	2201      	movs	r2, #1
 800d10c:	408a      	lsls	r2, r1
 800d10e:	1952      	adds	r2, r2, r5
 800d110:	bf28      	it	cs
 800d112:	3301      	addcs	r3, #1
 800d114:	ea22 0204 	bic.w	r2, r2, r4
 800d118:	e7d2      	b.n	800d0c0 <round+0x2c>
 800d11a:	bf00      	nop
 800d11c:	000fffff 	.word	0x000fffff

0800d120 <_init>:
 800d120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d122:	bf00      	nop
 800d124:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d126:	bc08      	pop	{r3}
 800d128:	469e      	mov	lr, r3
 800d12a:	4770      	bx	lr

0800d12c <_fini>:
 800d12c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d12e:	bf00      	nop
 800d130:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d132:	bc08      	pop	{r3}
 800d134:	469e      	mov	lr, r3
 800d136:	4770      	bx	lr
